{
  "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
  "pkg": {
    "name": "ant-design-pro",
    "version": "6.0.0",
    "private": true,
    "description": "An out-of-box UI solution for enterprise applications",
    "scripts": {
      "analyze": "cross-env ANALYZE=1 max build",
      "build": "max build",
      "deploy": "npm run build && npm run gh-pages",
      "dev": "npm run start:dev",
      "gh-pages": "gh-pages -d dist",
      "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
      "postinstall": "max setup",
      "jest": "jest",
      "lint": "npm run lint:js && npm run lint:prettier",
      "lint:fix": "eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src ",
      "lint:js": "eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src",
      "lint:prettier": "prettier -c --write \"**/**.{js,jsx,tsx,ts,less,md,json}\" --end-of-line auto",
      "openapi": "max openapi",
      "prepare": "husky install",
      "prettier": "prettier -c --write \"**/**.{js,jsx,tsx,ts,less,md,json}\"",
      "preview": "npm run build && max preview --port 8000",
      "record": "cross-env NODE_ENV=development REACT_APP_ENV=test max record --scene=login",
      "serve": "umi-serve",
      "start": "cross-env UMI_ENV=dev max dev",
      "start:dev": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max dev",
      "start:no-mock": "cross-env MOCK=none UMI_ENV=dev max dev",
      "start:pre": "cross-env REACT_APP_ENV=pre UMI_ENV=dev max dev",
      "start:test": "cross-env REACT_APP_ENV=test MOCK=none UMI_ENV=dev max dev",
      "test": "jest",
      "test:coverage": "npm run jest -- --coverage",
      "test:update": "npm run jest -- -u",
      "tsc": "tsc --noEmit"
    },
    "browserslist": [
      "> 1%",
      "last 2 versions",
      "not ie <= 10"
    ],
    "dependencies": {
      "@ant-design/icons": "^4.8.1",
      "@ant-design/plots": "^2.1.5",
      "@ant-design/pro-components": "^2.6.44",
      "@antv/l7": "^2.20.13",
      "@antv/l7-maps": "^2.20.13",
      "@antv/l7-react": "^2.4.3",
      "@umijs/route-utils": "^2.2.2",
      "antd": "^5.12.7",
      "antd-style": "^3.6.1",
      "classnames": "^2.5.1",
      "dayjs": "^1.11.10",
      "numeral": "^2.0.6",
      "omit.js": "^2.0.2",
      "querystring": "^0.2.1",
      "rc-util": "^5.38.1",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-fittext": "^1.0.0"
    },
    "devDependencies": {
      "@ant-design/pro-cli": "^2.1.5",
      "@testing-library/react": "^13.4.0",
      "@trivago/prettier-plugin-sort-imports": "^4.3.0",
      "@types/classnames": "^2.3.1",
      "@types/express": "^4.17.21",
      "@types/history": "^4.7.11",
      "@types/jest": "^29.5.11",
      "@types/lodash": "^4.14.202",
      "@types/lodash.debounce": "^4.0.9",
      "@types/react": "^18.2.46",
      "@types/react-dom": "^18.2.18",
      "@types/react-helmet": "^6.1.11",
      "@umijs/fabric": "^2.14.1",
      "@umijs/lint": "^4.1.0",
      "@umijs/max": "^4.1.0",
      "cross-env": "^7.0.3",
      "eslint": "^8.56.0",
      "express": "^4.18.2",
      "gh-pages": "^3.2.3",
      "husky": "^7.0.4",
      "jest": "^29.7.0",
      "jest-environment-jsdom": "^29.7.0",
      "mockjs": "^1.1.0",
      "prettier": "^3.1.1",
      "prettier-plugin-organize-imports": "^3.2.4",
      "prettier-plugin-packagejson": "^2.4.8",
      "prettier-plugin-two-style-order": "^1.0.1",
      "react-dev-inspector": "^1.9.0",
      "swagger-ui-dist": "^4.19.1",
      "ts-node": "^10.9.2",
      "typescript": "^4.9.5",
      "umi-presets-pro": "^2.0.3"
    },
    "engines": {
      "node": ">=12.0.0"
    }
  },
  "pkgPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/package.json",
  "plugins": {
    "./node_modules/@umijs/core/dist/service/servicePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 19
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/core/dist/service/servicePlugin.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/core/dist/service/servicePlugin",
      "key": "servicePlugin"
    },
    "@umijs/preset-umi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1234
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/index.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "@umijs/preset-umi",
      "key": "umi"
    },
    "./node_modules/@umijs/max/dist/preset": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 368
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/max/dist/preset.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/max/dist/preset",
      "key": "preset"
    },
    "umi-presets-pro": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            2
          ]
        },
        "register": 116
      },
      "enableBy": "register",
      "type": "preset",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/umi-presets-pro/dist/index.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "umi-presets-pro",
      "key": "umiPresetsPro"
    },
    "./node_modules/@umijs/preset-umi/dist/registerMethods": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            0
          ]
        },
        "register": 147
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/registerMethods.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/registerMethods",
      "key": "registerMethods"
    },
    "@umijs/did-you-know": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            4
          ]
        },
        "register": 18
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/did-you-know/dist/plugin.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "@umijs/did-you-know",
      "key": "umijsDidYouKnow"
    },
    "./node_modules/@umijs/preset-umi/dist/features/404/404": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ]
        },
        "register": 23
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/404/404.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/404/404",
      "key": "404"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/appData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            2178
          ]
        },
        "register": 665
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/appData/appData.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/appData",
      "key": "appData"
    },
    "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 21
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/appData/umiInfo.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/appData/umiInfo",
      "key": "umiInfo"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/check": {
      "config": {},
      "time": {
        "hooks": {
          "onCheckConfig": [
            0
          ],
          "onCheck": [
            1
          ]
        },
        "register": 71
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/check/check.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/check",
      "key": "check"
    },
    "./node_modules/@umijs/preset-umi/dist/features/check/babel722": {
      "config": {},
      "time": {
        "hooks": {
          "onCheck": [
            0
          ]
        },
        "register": 12
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/check/babel722.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/check/babel722",
      "key": "babel722"
    },
    "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 16
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/codeSplitting/codeSplitting",
      "key": "codeSplitting"
    },
    "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 381
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/configPlugins/configPlugins",
      "key": "configPlugins"
    },
    "virtual: config-title": {
      "id": "virtual: config-title",
      "key": "title",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styles": {
      "id": "virtual: config-styles",
      "key": "styles",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-scripts": {
      "id": "virtual: config-scripts",
      "key": "scripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routes": {
      "id": "virtual: config-routes",
      "key": "routes",
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-routeLoader": {
      "id": "virtual: config-routeLoader",
      "key": "routeLoader",
      "config": {
        "default": {
          "moduleType": "esm"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-reactRouter5Compat": {
      "id": "virtual: config-reactRouter5Compat",
      "key": "reactRouter5Compat",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-presets": {
      "id": "virtual: config-presets",
      "key": "presets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-plugins": {
      "id": "virtual: config-plugins",
      "key": "plugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-npmClient": {
      "id": "virtual: config-npmClient",
      "key": "npmClient",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mountElementId": {
      "id": "virtual: config-mountElementId",
      "key": "mountElementId",
      "config": {
        "default": "root"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-metas": {
      "id": "virtual: config-metas",
      "key": "metas",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-links": {
      "id": "virtual: config-links",
      "key": "links",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-historyWithQuery": {
      "id": "virtual: config-historyWithQuery",
      "key": "historyWithQuery",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-history": {
      "id": "virtual: config-history",
      "key": "history",
      "config": {
        "default": {
          "type": "browser"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-headScripts": {
      "id": "virtual: config-headScripts",
      "key": "headScripts",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esbuildMinifyIIFE": {
      "id": "virtual: config-esbuildMinifyIIFE",
      "key": "esbuildMinifyIIFE",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionRoutes": {
      "id": "virtual: config-conventionRoutes",
      "key": "conventionRoutes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-conventionLayout": {
      "id": "virtual: config-conventionLayout",
      "key": "conventionLayout",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-base": {
      "id": "virtual: config-base",
      "key": "base",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-analyze": {
      "id": "virtual: config-analyze",
      "key": "analyze",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-writeToDisk": {
      "id": "virtual: config-writeToDisk",
      "key": "writeToDisk",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-theme": {
      "id": "virtual: config-theme",
      "key": "theme",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-targets": {
      "id": "virtual: config-targets",
      "key": "targets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgr": {
      "id": "virtual: config-svgr",
      "key": "svgr",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-svgo": {
      "id": "virtual: config-svgo",
      "key": "svgo",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-stylusLoader": {
      "id": "virtual: config-stylusLoader",
      "key": "stylusLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-styleLoader": {
      "id": "virtual: config-styleLoader",
      "key": "styleLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspilerOptions": {
      "id": "virtual: config-srcTranspilerOptions",
      "key": "srcTranspilerOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-srcTranspiler": {
      "id": "virtual: config-srcTranspiler",
      "key": "srcTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-sassLoader": {
      "id": "virtual: config-sassLoader",
      "key": "sassLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-runtimePublicPath": {
      "id": "virtual: config-runtimePublicPath",
      "key": "runtimePublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-purgeCSS": {
      "id": "virtual: config-purgeCSS",
      "key": "purgeCSS",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-publicPath": {
      "id": "virtual: config-publicPath",
      "key": "publicPath",
      "config": {
        "default": "/"
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-proxy": {
      "id": "virtual: config-proxy",
      "key": "proxy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-postcssLoader": {
      "id": "virtual: config-postcssLoader",
      "key": "postcssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-outputPath": {
      "id": "virtual: config-outputPath",
      "key": "outputPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-normalCSSLoaderModules": {
      "id": "virtual: config-normalCSSLoaderModules",
      "key": "normalCSSLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mfsu": {
      "id": "virtual: config-mfsu",
      "key": "mfsu",
      "config": {
        "default": {
          "strategy": "eager"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-mdx": {
      "id": "virtual: config-mdx",
      "key": "mdx",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-manifest": {
      "id": "virtual: config-manifest",
      "key": "manifest",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-lessLoader": {
      "id": "virtual: config-lessLoader",
      "key": "lessLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifierOptions": {
      "id": "virtual: config-jsMinifierOptions",
      "key": "jsMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-jsMinifier": {
      "id": "virtual: config-jsMinifier",
      "key": "jsMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-inlineLimit": {
      "id": "virtual: config-inlineLimit",
      "key": "inlineLimit",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-ignoreMomentLocale": {
      "id": "virtual: config-ignoreMomentLocale",
      "key": "ignoreMomentLocale",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-https": {
      "id": "virtual: config-https",
      "key": "https",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-hash": {
      "id": "virtual: config-hash",
      "key": "hash",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-forkTSChecker": {
      "id": "virtual: config-forkTSChecker",
      "key": "forkTSChecker",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-fastRefresh": {
      "id": "virtual: config-fastRefresh",
      "key": "fastRefresh",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraPostCSSPlugins": {
      "id": "virtual: config-extraPostCSSPlugins",
      "key": "extraPostCSSPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPresets": {
      "id": "virtual: config-extraBabelPresets",
      "key": "extraBabelPresets",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelPlugins": {
      "id": "virtual: config-extraBabelPlugins",
      "key": "extraBabelPlugins",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-extraBabelIncludes": {
      "id": "virtual: config-extraBabelIncludes",
      "key": "extraBabelIncludes",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-externals": {
      "id": "virtual: config-externals",
      "key": "externals",
      "config": {
        "default": {}
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-esm": {
      "id": "virtual: config-esm",
      "key": "esm",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-devtool": {
      "id": "virtual: config-devtool",
      "key": "devtool",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-depTranspiler": {
      "id": "virtual: config-depTranspiler",
      "key": "depTranspiler",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-define": {
      "id": "virtual: config-define",
      "key": "define",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-deadCode": {
      "id": "virtual: config-deadCode",
      "key": "deadCode",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssPublicPath": {
      "id": "virtual: config-cssPublicPath",
      "key": "cssPublicPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifierOptions": {
      "id": "virtual: config-cssMinifierOptions",
      "key": "cssMinifierOptions",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssMinifier": {
      "id": "virtual: config-cssMinifier",
      "key": "cssMinifier",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoaderModules": {
      "id": "virtual: config-cssLoaderModules",
      "key": "cssLoaderModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cssLoader": {
      "id": "virtual: config-cssLoader",
      "key": "cssLoader",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-copy": {
      "id": "virtual: config-copy",
      "key": "copy",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-checkDepCssModules": {
      "id": "virtual: config-checkDepCssModules",
      "key": "checkDepCssModules",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-chainWebpack": {
      "id": "virtual: config-chainWebpack",
      "key": "chainWebpack",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-cacheDirectoryPath": {
      "id": "virtual: config-cacheDirectoryPath",
      "key": "cacheDirectoryPath",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-babelLoaderCustomize": {
      "id": "virtual: config-babelLoaderCustomize",
      "key": "babelLoaderCustomize",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoprefixer": {
      "id": "virtual: config-autoprefixer",
      "key": "autoprefixer",
      "config": {},
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-autoCSSModules": {
      "id": "virtual: config-autoCSSModules",
      "key": "autoCSSModules",
      "config": {
        "default": true
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "virtual: config-alias": {
      "id": "virtual: config-alias",
      "key": "alias",
      "config": {
        "default": {
          "umi": "@@/exports",
          "react": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react",
          "react-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-dom",
          "react-router": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router",
          "react-router-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router-dom"
        }
      },
      "type": "plugin",
      "enableBy": "register",
      "time": {
        "hooks": {},
        "register": 0
      }
    },
    "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 17
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/crossorigin/crossorigin",
      "key": "crossorigin"
    },
    "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand": {
      "config": {},
      "time": {
        "hooks": {
          "onStart": [
            1
          ]
        },
        "register": 53
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/depsOnDemand/depsOnDemand",
      "key": "depsOnDemand"
    },
    "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 57
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/devTool/devTool.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/devTool/devTool",
      "key": "devTool"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1086
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esbuildHelperChecker/esbuildHelperChecker",
      "key": "esbuildHelperChecker"
    },
    "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 4390
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/esmi/esmi.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/esmi/esmi",
      "key": "esmi"
    },
    "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 550
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/exportStatic/exportStatic",
      "key": "exportStatic"
    },
    "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            6
          ]
        },
        "register": 18
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/favicons/favicons.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/favicons/favicons",
      "key": "favicons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 59
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/helmet/helmet.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/helmet/helmet",
      "key": "helmet"
    },
    "./node_modules/@umijs/preset-umi/dist/features/icons/icons": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 84
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/icons/icons.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/icons/icons",
      "key": "icons"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mock/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 564
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/mock/mock.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mock/mock",
      "key": "mock"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 52
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/mpa/mpa.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mpa/mpa",
      "key": "mpa"
    },
    "./node_modules/@umijs/preset-umi/dist/features/okam/okam": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 49
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/okam/okam.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/okam/okam",
      "key": "okam"
    },
    "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/overrides/overrides.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/overrides/overrides",
      "key": "overrides"
    },
    "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 67
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/phantomDependency/phantomDependency",
      "key": "phantomDependency"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            34
          ]
        },
        "register": 88
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/polyfill",
      "key": "polyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/polyfill/publicPathPolyfill",
      "key": "publicPathPolyfill"
    },
    "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 77
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/prepare/prepare.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/prepare/prepare",
      "key": "prepare"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 11
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePrefetch/routePrefetch",
      "key": "routePrefetch"
    },
    "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 36
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/terminal/terminal.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/terminal/terminal",
      "key": "terminal"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 178
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/tmpFiles",
      "key": "tmpFiles"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 51
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clientLoader/clientLoader",
      "key": "clientLoader"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 16
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routeProps/routeProps",
      "key": "routeProps"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 117
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/ssr/ssr.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ssr/ssr",
      "key": "ssr"
    },
    "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 118
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/tmpFiles/configTypes",
      "key": "configTypes"
    },
    "./node_modules/@umijs/preset-umi/dist/features/transform/transform": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 105
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/transform/transform.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/transform/transform",
      "key": "transform"
    },
    "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 78
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/lowImport/lowImport",
      "key": "lowImport"
    },
    "./node_modules/@umijs/preset-umi/dist/features/vite/vite": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 12
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/vite/vite.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/vite/vite",
      "key": "vite"
    },
    "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 289
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/apiRoute/apiRoute",
      "key": "apiRoute"
    },
    "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 327
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/monorepo/redirect.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/monorepo/redirect",
      "key": "monorepoRedirect"
    },
    "./node_modules/@umijs/preset-umi/dist/features/test/test": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 68
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/test/test.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/test/test",
      "key": "test"
    },
    "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 44
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/clickToComponent/clickToComponent",
      "key": "clickToComponent"
    },
    "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 72
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/legacy/legacy.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/legacy/legacy",
      "key": "legacy"
    },
    "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 14
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/classPropertiesLoose/classPropertiesLoose",
      "key": "classPropertiesLoose"
    },
    "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 29
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/webpack/webpack.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/webpack/webpack",
      "key": "preset-umi:webpack"
    },
    "./node_modules/@umijs/preset-umi/dist/features/swc/swc": {
      "config": {},
      "time": {
        "hooks": {
          "addOnDemandDeps": [
            0
          ]
        },
        "register": 14
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/swc/swc.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/swc/swc",
      "key": "swc"
    },
    "./node_modules/@umijs/preset-umi/dist/features/ui/ui": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 109
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/ui/ui.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/ui/ui",
      "key": "ui"
    },
    "./node_modules/@umijs/preset-umi/dist/features/mako/mako": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 23
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/mako/mako.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/mako/mako",
      "key": "mako"
    },
    "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 93
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/hmrGuardian/hmrGuardian",
      "key": "hmrGuardian"
    },
    "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 79
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/routePreloadOnLoad/routePreloadOnLoad",
      "key": "routePreloadOnLoad"
    },
    "./node_modules/@umijs/preset-umi/dist/features/forget/forget": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 52
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/features/forget/forget.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/features/forget/forget",
      "key": "forget"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/build": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 215
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/build.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/build",
      "key": "build"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/config/config": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 739
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/config/config.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/config/config",
      "key": "config"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/dev/dev": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 1755
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/dev/dev.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/dev/dev",
      "key": "dev"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/help": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/help.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/help",
      "key": "help"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/lint": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/lint.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/lint",
      "key": "lint"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/setup": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 7
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/setup.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/setup",
      "key": "setup"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/deadcode": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/deadcode.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/deadcode",
      "key": "deadcode"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/version": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/version.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/version",
      "key": "version"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/page": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 81
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/page.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/page",
      "key": "generator:page"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/prettier.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/prettier",
      "key": "generator:prettier"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tsconfig",
      "key": "generator:tsconfig"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/jest": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 7
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/jest.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/jest",
      "key": "generator:jest"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/tailwindcss",
      "key": "generator:tailwindcss"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/dva.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/dva",
      "key": "generator:dva"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/component": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/component.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/component",
      "key": "generator:component"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/mock": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/mock.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/mock",
      "key": "generator:mock"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/cypress.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/cypress",
      "key": "generator:cypress"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/api": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/api.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/api",
      "key": "generator:api"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/generators/precommit.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/generators/precommit",
      "key": "generator:precommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/plugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/plugin.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/plugin",
      "key": "command:plugin"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/verify-commit": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/verify-commit.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/verify-commit",
      "key": "verifyCommit"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/preview": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 189
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/preview.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/preview",
      "key": "preview"
    },
    "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 55
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/preset-umi/dist/commands/mfsu/mfsu",
      "key": "mfsu-cli"
    },
    "@umijs/plugin-run": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 128
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugin-run/dist/index.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "@umijs/plugin-run",
      "key": "run"
    },
    "./node_modules/@umijs/plugins/dist/access": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 32
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/access.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/access",
      "key": "access"
    },
    "./node_modules/@umijs/plugins/dist/analytics": {
      "config": {
        "onChange": "reload"
      },
      "time": {
        "hooks": {},
        "register": 8
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/analytics.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/analytics",
      "key": "analytics"
    },
    "./node_modules/@umijs/plugins/dist/antd": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            61
          ],
          "modifyAppData": [
            0
          ]
        },
        "register": 136
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/antd.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/antd",
      "key": "antd"
    },
    "./node_modules/@umijs/plugins/dist/dva": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 250
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/dva.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/dva",
      "key": "dva"
    },
    "./node_modules/@umijs/plugins/dist/initial-state": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/initial-state.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/initial-state",
      "key": "initialState"
    },
    "./node_modules/@umijs/plugins/dist/layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ],
          "addLayouts": [
            0
          ],
          "modifyAppData": [
            9
          ]
        },
        "register": 68
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/layout.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/layout",
      "key": "layout"
    },
    "./node_modules/@umijs/plugins/dist/locale": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 78
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/locale.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/locale",
      "key": "locale"
    },
    "./node_modules/@umijs/plugins/dist/mf": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 53
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/mf.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/mf",
      "key": "mf"
    },
    "./node_modules/@umijs/plugins/dist/model": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 11
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/model.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/model",
      "key": "model"
    },
    "./node_modules/@umijs/plugins/dist/moment2dayjs": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            32
          ]
        },
        "register": 8
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/moment2dayjs.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/moment2dayjs",
      "key": "moment2dayjs"
    },
    "./node_modules/@umijs/plugins/dist/qiankun": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 57
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/qiankun.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/qiankun",
      "key": "qiankun"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/master": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 36
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/qiankun/master.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/master",
      "key": "qiankun-master"
    },
    "./node_modules/@umijs/plugins/dist/qiankun/slave": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 78
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/qiankun/slave.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/qiankun/slave",
      "key": "qiankun-slave"
    },
    "./node_modules/@umijs/plugins/dist/react-query": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 9
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/react-query.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/react-query",
      "key": "reactQuery"
    },
    "./node_modules/@umijs/plugins/dist/request": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 10
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/request.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/request",
      "key": "request"
    },
    "./node_modules/@umijs/plugins/dist/styled-components": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 31
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/styled-components.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/styled-components",
      "key": "styledComponents"
    },
    "./node_modules/@umijs/plugins/dist/tailwindcss": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/tailwindcss.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/tailwindcss",
      "key": "tailwindcss"
    },
    "./node_modules/@umijs/plugins/dist/valtio": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 33
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/plugins/dist/valtio.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/plugins/dist/valtio",
      "key": "valtio"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAlias": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 11
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/max/dist/plugins/maxAlias.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAlias",
      "key": "maxAlias"
    },
    "./node_modules/@umijs/max/dist/plugins/maxAppData": {
      "config": {},
      "time": {
        "hooks": {
          "modifyAppData": [
            0
          ]
        },
        "register": 9
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/max/dist/plugins/maxAppData.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/max/dist/plugins/maxAppData",
      "key": "maxAppData"
    },
    "./node_modules/@umijs/max/dist/plugins/maxChecker": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/max/dist/plugins/maxChecker.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/max/dist/plugins/maxChecker",
      "key": "maxChecker"
    },
    "./node_modules/umi-presets-pro/dist/features/proconfig": {
      "config": {},
      "time": {
        "hooks": {
          "modifyConfig": [
            0
          ]
        },
        "register": 10
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/umi-presets-pro/dist/features/proconfig.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/umi-presets-pro/dist/features/proconfig",
      "key": "proconfig"
    },
    "./node_modules/umi-presets-pro/dist/features/maxtabs": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 7
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/umi-presets-pro/dist/features/maxtabs.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/umi-presets-pro/dist/features/maxtabs",
      "key": "maxtabs"
    },
    "@umijs/max-plugin-openapi": {
      "config": {},
      "time": {
        "hooks": {
          "modifyRoutes": [
            0
          ],
          "onStart": [
            0
          ]
        },
        "register": 4757
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/max-plugin-openapi/dist/index.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "@umijs/max-plugin-openapi",
      "key": "openAPI"
    },
    "./node_modules/@alita/plugins/dist/keepalive": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 5749
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@alita/plugins/dist/keepalive.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@alita/plugins/dist/keepalive",
      "key": "keepalive"
    },
    "./node_modules/@alita/plugins/dist/tabs-layout": {
      "config": {
        "onChange": "regenerateTmpFiles"
      },
      "time": {
        "hooks": {},
        "register": 8
      },
      "enableBy": "config",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@alita/plugins/dist/tabs-layout.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@alita/plugins/dist/tabs-layout",
      "key": "tabsLayout"
    },
    "@umijs/request-record": {
      "config": {
        "default": {
          "mock": {
            "outputDir": "./mock",
            "fileName": "requestRecord.mock.js",
            "usingRole": "default"
          },
          "outputDir": "./types"
        }
      },
      "time": {
        "hooks": {
          "modifyConfig": [
            1
          ],
          "modifyAppData": [
            0
          ]
        },
        "register": 649
      },
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/request-record/dist/cjs/index.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "@umijs/request-record",
      "key": "requestRecord"
    },
    "./node_modules/@umijs/core/dist/service/generatePlugin": {
      "config": {},
      "time": {
        "hooks": {},
        "register": 14
      },
      "enableBy": "register",
      "type": "plugin",
      "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/core/dist/service/generatePlugin.js",
      "cwd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp",
      "id": "./node_modules/@umijs/core/dist/service/generatePlugin",
      "key": "generatePlugin"
    }
  },
  "presets": [],
  "name": "setup",
  "args": {
    "_": []
  },
  "userConfig": {
    "hash": true,
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "path": "/user/login",
            "layout": false,
            "name": "login",
            "component": "./user/login"
          },
          {
            "path": "/user",
            "redirect": "/user/login"
          },
          {
            "name": "register-result",
            "icon": "smile",
            "path": "/user/register-result",
            "component": "./user/register-result"
          },
          {
            "name": "register",
            "icon": "smile",
            "path": "/user/register",
            "component": "./user/register"
          },
          {
            "component": "404",
            "path": "/user/*"
          }
        ]
      },
      {
        "path": "/dashboard",
        "name": "dashboard",
        "icon": "dashboard",
        "routes": [
          {
            "path": "/dashboard",
            "redirect": "/dashboard/analysis"
          },
          {
            "name": "analysis",
            "icon": "smile",
            "path": "/dashboard/analysis",
            "component": "./dashboard/analysis"
          },
          {
            "name": "monitor",
            "icon": "smile",
            "path": "/dashboard/monitor",
            "component": "./dashboard/monitor"
          },
          {
            "name": "workplace",
            "icon": "smile",
            "path": "/dashboard/workplace",
            "component": "./dashboard/workplace"
          }
        ]
      },
      {
        "path": "/form",
        "icon": "form",
        "name": "form",
        "routes": [
          {
            "path": "/form",
            "redirect": "/form/basic-form"
          },
          {
            "name": "basic-form",
            "icon": "smile",
            "path": "/form/basic-form",
            "component": "./form/basic-form"
          },
          {
            "name": "step-form",
            "icon": "smile",
            "path": "/form/step-form",
            "component": "./form/step-form"
          },
          {
            "name": "advanced-form",
            "icon": "smile",
            "path": "/form/advanced-form",
            "component": "./form/advanced-form"
          }
        ]
      },
      {
        "path": "/list",
        "icon": "table",
        "name": "list",
        "routes": [
          {
            "path": "/list/search",
            "name": "search-list",
            "component": "./list/search",
            "routes": [
              {
                "path": "/list/search",
                "redirect": "/list/search/articles"
              },
              {
                "name": "articles",
                "icon": "smile",
                "path": "/list/search/articles",
                "component": "./list/search/articles"
              },
              {
                "name": "projects",
                "icon": "smile",
                "path": "/list/search/projects",
                "component": "./list/search/projects"
              },
              {
                "name": "applications",
                "icon": "smile",
                "path": "/list/search/applications",
                "component": "./list/search/applications"
              }
            ]
          },
          {
            "path": "/list",
            "redirect": "/list/table-list"
          },
          {
            "name": "table-list",
            "icon": "smile",
            "path": "/list/table-list",
            "component": "./table-list"
          },
          {
            "name": "basic-list",
            "icon": "smile",
            "path": "/list/basic-list",
            "component": "./list/basic-list"
          },
          {
            "name": "card-list",
            "icon": "smile",
            "path": "/list/card-list",
            "component": "./list/card-list"
          }
        ]
      },
      {
        "path": "/profile",
        "name": "profile",
        "icon": "profile",
        "routes": [
          {
            "path": "/profile",
            "redirect": "/profile/basic"
          },
          {
            "name": "basic",
            "icon": "smile",
            "path": "/profile/basic",
            "component": "./profile/basic"
          },
          {
            "name": "advanced",
            "icon": "smile",
            "path": "/profile/advanced",
            "component": "./profile/advanced"
          }
        ]
      },
      {
        "name": "result",
        "icon": "CheckCircleOutlined",
        "path": "/result",
        "routes": [
          {
            "path": "/result",
            "redirect": "/result/success"
          },
          {
            "name": "success",
            "icon": "smile",
            "path": "/result/success",
            "component": "./result/success"
          },
          {
            "name": "fail",
            "icon": "smile",
            "path": "/result/fail",
            "component": "./result/fail"
          }
        ]
      },
      {
        "name": "exception",
        "icon": "warning",
        "path": "/exception",
        "routes": [
          {
            "path": "/exception",
            "redirect": "/exception/403"
          },
          {
            "name": "403",
            "icon": "smile",
            "path": "/exception/403",
            "component": "./exception/403"
          },
          {
            "name": "404",
            "icon": "smile",
            "path": "/exception/404",
            "component": "./exception/404"
          },
          {
            "name": "500",
            "icon": "smile",
            "path": "/exception/500",
            "component": "./exception/500"
          }
        ]
      },
      {
        "name": "account",
        "icon": "user",
        "path": "/account",
        "routes": [
          {
            "path": "/account",
            "redirect": "/account/center"
          },
          {
            "name": "center",
            "icon": "smile",
            "path": "/account/center",
            "component": "./account/center"
          },
          {
            "name": "settings",
            "icon": "smile",
            "path": "/account/settings",
            "component": "./account/settings"
          }
        ]
      },
      {
        "path": "/",
        "redirect": "/dashboard/analysis"
      },
      {
        "component": "404",
        "path": "/*"
      }
    ],
    "theme": {
      "root-entry-name": "variable"
    },
    "ignoreMomentLocale": true,
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "Ant Design Pro",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {},
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "/scripts/loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/config/oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger"
      }
    ],
    "mock": {
      "include": [
        "mock/**/*",
        "src/pages/**/_mock.ts"
      ]
    },
    "mfsu": {
      "strategy": "normal"
    },
    "esbuildMinifyIIFE": true,
    "requestRecord": {}
  },
  "mainConfigFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/config/config.ts",
  "config": {
    "routeLoader": {
      "moduleType": "esm"
    },
    "mountElementId": "root",
    "history": {
      "type": "browser"
    },
    "base": "/",
    "svgr": {},
    "publicPath": "/",
    "mfsu": {
      "strategy": "normal"
    },
    "ignoreMomentLocale": true,
    "externals": {},
    "autoCSSModules": true,
    "alias": {
      "umi": "@@/exports",
      "react": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react",
      "react-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-dom",
      "react-router": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router",
      "react-router-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router-dom",
      "@": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src",
      "@@": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/.umi",
      "regenerator-runtime": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime",
      "antd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/antd",
      "moment": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/dayjs",
      "@umijs/max": "@@/exports"
    },
    "requestRecord": {
      "mock": {
        "outputDir": "./mock",
        "fileName": "requestRecord.mock.js",
        "usingRole": "default"
      },
      "outputDir": "./types"
    },
    "hash": true,
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "path": "/user/login",
            "layout": false,
            "name": "login",
            "component": "./user/login"
          },
          {
            "path": "/user",
            "redirect": "/user/login"
          },
          {
            "name": "register-result",
            "icon": "smile",
            "path": "/user/register-result",
            "component": "./user/register-result"
          },
          {
            "name": "register",
            "icon": "smile",
            "path": "/user/register",
            "component": "./user/register"
          },
          {
            "component": "404",
            "path": "/user/*"
          }
        ]
      },
      {
        "path": "/dashboard",
        "name": "dashboard",
        "icon": "dashboard",
        "routes": [
          {
            "path": "/dashboard",
            "redirect": "/dashboard/analysis"
          },
          {
            "name": "analysis",
            "icon": "smile",
            "path": "/dashboard/analysis",
            "component": "./dashboard/analysis"
          },
          {
            "name": "monitor",
            "icon": "smile",
            "path": "/dashboard/monitor",
            "component": "./dashboard/monitor"
          },
          {
            "name": "workplace",
            "icon": "smile",
            "path": "/dashboard/workplace",
            "component": "./dashboard/workplace"
          }
        ]
      },
      {
        "path": "/form",
        "icon": "form",
        "name": "form",
        "routes": [
          {
            "path": "/form",
            "redirect": "/form/basic-form"
          },
          {
            "name": "basic-form",
            "icon": "smile",
            "path": "/form/basic-form",
            "component": "./form/basic-form"
          },
          {
            "name": "step-form",
            "icon": "smile",
            "path": "/form/step-form",
            "component": "./form/step-form"
          },
          {
            "name": "advanced-form",
            "icon": "smile",
            "path": "/form/advanced-form",
            "component": "./form/advanced-form"
          }
        ]
      },
      {
        "path": "/list",
        "icon": "table",
        "name": "list",
        "routes": [
          {
            "path": "/list/search",
            "name": "search-list",
            "component": "./list/search",
            "routes": [
              {
                "path": "/list/search",
                "redirect": "/list/search/articles"
              },
              {
                "name": "articles",
                "icon": "smile",
                "path": "/list/search/articles",
                "component": "./list/search/articles"
              },
              {
                "name": "projects",
                "icon": "smile",
                "path": "/list/search/projects",
                "component": "./list/search/projects"
              },
              {
                "name": "applications",
                "icon": "smile",
                "path": "/list/search/applications",
                "component": "./list/search/applications"
              }
            ]
          },
          {
            "path": "/list",
            "redirect": "/list/table-list"
          },
          {
            "name": "table-list",
            "icon": "smile",
            "path": "/list/table-list",
            "component": "./table-list"
          },
          {
            "name": "basic-list",
            "icon": "smile",
            "path": "/list/basic-list",
            "component": "./list/basic-list"
          },
          {
            "name": "card-list",
            "icon": "smile",
            "path": "/list/card-list",
            "component": "./list/card-list"
          }
        ]
      },
      {
        "path": "/profile",
        "name": "profile",
        "icon": "profile",
        "routes": [
          {
            "path": "/profile",
            "redirect": "/profile/basic"
          },
          {
            "name": "basic",
            "icon": "smile",
            "path": "/profile/basic",
            "component": "./profile/basic"
          },
          {
            "name": "advanced",
            "icon": "smile",
            "path": "/profile/advanced",
            "component": "./profile/advanced"
          }
        ]
      },
      {
        "name": "result",
        "icon": "CheckCircleOutlined",
        "path": "/result",
        "routes": [
          {
            "path": "/result",
            "redirect": "/result/success"
          },
          {
            "name": "success",
            "icon": "smile",
            "path": "/result/success",
            "component": "./result/success"
          },
          {
            "name": "fail",
            "icon": "smile",
            "path": "/result/fail",
            "component": "./result/fail"
          }
        ]
      },
      {
        "name": "exception",
        "icon": "warning",
        "path": "/exception",
        "routes": [
          {
            "path": "/exception",
            "redirect": "/exception/403"
          },
          {
            "name": "403",
            "icon": "smile",
            "path": "/exception/403",
            "component": "./exception/403"
          },
          {
            "name": "404",
            "icon": "smile",
            "path": "/exception/404",
            "component": "./exception/404"
          },
          {
            "name": "500",
            "icon": "smile",
            "path": "/exception/500",
            "component": "./exception/500"
          }
        ]
      },
      {
        "name": "account",
        "icon": "user",
        "path": "/account",
        "routes": [
          {
            "path": "/account",
            "redirect": "/account/center"
          },
          {
            "name": "center",
            "icon": "smile",
            "path": "/account/center",
            "component": "./account/center"
          },
          {
            "name": "settings",
            "icon": "smile",
            "path": "/account/settings",
            "component": "./account/settings"
          }
        ]
      },
      {
        "path": "/",
        "redirect": "/dashboard/analysis"
      },
      {
        "component": "404",
        "path": "/*"
      }
    ],
    "theme": {
      "blue-base": "#1890ff",
      "blue-1": "#e6f7ff",
      "blue-2": "#bae7ff",
      "blue-3": "#91d5ff",
      "blue-4": "#69c0ff",
      "blue-5": "#40a9ff",
      "blue-6": "#1890ff",
      "blue-7": "#096dd9",
      "blue-8": "#0050b3",
      "blue-9": "#003a8c",
      "blue-10": "#002766",
      "purple-base": "#722ed1",
      "purple-1": "#f9f0ff",
      "purple-2": "#efdbff",
      "purple-3": "#d3adf7",
      "purple-4": "#b37feb",
      "purple-5": "#9254de",
      "purple-6": "#722ed1",
      "purple-7": "#531dab",
      "purple-8": "#391085",
      "purple-9": "#22075e",
      "purple-10": "#120338",
      "cyan-base": "#13c2c2",
      "cyan-1": "#e6fffb",
      "cyan-2": "#b5f5ec",
      "cyan-3": "#87e8de",
      "cyan-4": "#5cdbd3",
      "cyan-5": "#36cfc9",
      "cyan-6": "#13c2c2",
      "cyan-7": "#08979c",
      "cyan-8": "#006d75",
      "cyan-9": "#00474f",
      "cyan-10": "#002329",
      "green-base": "#52c41a",
      "green-1": "#f6ffed",
      "green-2": "#d9f7be",
      "green-3": "#b7eb8f",
      "green-4": "#95de64",
      "green-5": "#73d13d",
      "green-6": "#52c41a",
      "green-7": "#389e0d",
      "green-8": "#237804",
      "green-9": "#135200",
      "green-10": "#092b00",
      "magenta-base": "#eb2f96",
      "magenta-1": "#fff0f6",
      "magenta-2": "#ffd6e7",
      "magenta-3": "#ffadd2",
      "magenta-4": "#ff85c0",
      "magenta-5": "#f759ab",
      "magenta-6": "#eb2f96",
      "magenta-7": "#c41d7f",
      "magenta-8": "#9e1068",
      "magenta-9": "#780650",
      "magenta-10": "#520339",
      "pink-base": "#eb2f96",
      "pink-1": "#fff0f6",
      "pink-2": "#ffd6e7",
      "pink-3": "#ffadd2",
      "pink-4": "#ff85c0",
      "pink-5": "#f759ab",
      "pink-6": "#eb2f96",
      "pink-7": "#c41d7f",
      "pink-8": "#9e1068",
      "pink-9": "#780650",
      "pink-10": "#520339",
      "red-base": "#f5222d",
      "red-1": "#fff1f0",
      "red-2": "#ffccc7",
      "red-3": "#ffa39e",
      "red-4": "#ff7875",
      "red-5": "#ff4d4f",
      "red-6": "#f5222d",
      "red-7": "#cf1322",
      "red-8": "#a8071a",
      "red-9": "#820014",
      "red-10": "#5c0011",
      "orange-base": "#fa8c16",
      "orange-1": "#fff7e6",
      "orange-2": "#ffe7ba",
      "orange-3": "#ffd591",
      "orange-4": "#ffc069",
      "orange-5": "#ffa940",
      "orange-6": "#fa8c16",
      "orange-7": "#d46b08",
      "orange-8": "#ad4e00",
      "orange-9": "#873800",
      "orange-10": "#612500",
      "yellow-base": "#fadb14",
      "yellow-1": "#feffe6",
      "yellow-2": "#ffffb8",
      "yellow-3": "#fffb8f",
      "yellow-4": "#fff566",
      "yellow-5": "#ffec3d",
      "yellow-6": "#fadb14",
      "yellow-7": "#d4b106",
      "yellow-8": "#ad8b00",
      "yellow-9": "#876800",
      "yellow-10": "#614700",
      "volcano-base": "#fa541c",
      "volcano-1": "#fff2e8",
      "volcano-2": "#ffd8bf",
      "volcano-3": "#ffbb96",
      "volcano-4": "#ff9c6e",
      "volcano-5": "#ff7a45",
      "volcano-6": "#fa541c",
      "volcano-7": "#d4380d",
      "volcano-8": "#ad2102",
      "volcano-9": "#871400",
      "volcano-10": "#610b00",
      "geekblue-base": "#2f54eb",
      "geekblue-1": "#f0f5ff",
      "geekblue-2": "#d6e4ff",
      "geekblue-3": "#adc6ff",
      "geekblue-4": "#85a5ff",
      "geekblue-5": "#597ef7",
      "geekblue-6": "#2f54eb",
      "geekblue-7": "#1d39c4",
      "geekblue-8": "#10239e",
      "geekblue-9": "#061178",
      "geekblue-10": "#030852",
      "lime-base": "#a0d911",
      "lime-1": "#fcffe6",
      "lime-2": "#f4ffb8",
      "lime-3": "#eaff8f",
      "lime-4": "#d3f261",
      "lime-5": "#bae637",
      "lime-6": "#a0d911",
      "lime-7": "#7cb305",
      "lime-8": "#5b8c00",
      "lime-9": "#3f6600",
      "lime-10": "#254000",
      "gold-base": "#faad14",
      "gold-1": "#fffbe6",
      "gold-2": "#fff1b8",
      "gold-3": "#ffe58f",
      "gold-4": "#ffd666",
      "gold-5": "#ffc53d",
      "gold-6": "#faad14",
      "gold-7": "#d48806",
      "gold-8": "#ad6800",
      "gold-9": "#874d00",
      "gold-10": "#613400",
      "preset-colors": "pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue,",
      "theme": "default",
      "ant-prefix": "ant",
      "html-selector": "html",
      "primary-color": "#1890ff",
      "primary-color-hover": "#40a9ff",
      "primary-color-active": "#096dd9",
      "primary-color-outline": "rgba(24, 144, 255, 0.2)",
      "processing-color": "#1890ff",
      "info-color": "#1890ff",
      "info-color-deprecated-bg": "#e6f7ff",
      "info-color-deprecated-border": "#91d5ff",
      "success-color": "#52c41a",
      "success-color-hover": "#73d13d",
      "success-color-active": "#389e0d",
      "success-color-outline": "rgba(82, 196, 26, 0.2)",
      "success-color-deprecated-bg": "#f6ffed",
      "success-color-deprecated-border": "#b7eb8f",
      "warning-color": "#faad14",
      "warning-color-hover": "#ffc53d",
      "warning-color-active": "#d48806",
      "warning-color-outline": "rgba(250, 173, 20, 0.2)",
      "warning-color-deprecated-bg": "#fffbe6",
      "warning-color-deprecated-border": "#ffe58f",
      "error-color": "#ff4d4f",
      "error-color-hover": "#ff7875",
      "error-color-active": "#d9363e",
      "error-color-outline": "rgba(255, 77, 79, 0.2)",
      "error-color-deprecated-bg": "#fff2f0",
      "error-color-deprecated-border": "#ffccc7",
      "highlight-color": "#ff4d4f",
      "normal-color": "#d9d9d9",
      "white": "#fff",
      "black": "#000",
      "primary-1": "#e6f7ff",
      "primary-2": "#bae7ff",
      "primary-3": "#91d5ff",
      "primary-4": "#69c0ff",
      "primary-5": "#40a9ff",
      "primary-6": "#1890ff",
      "primary-7": "#096dd9",
      "primary-8": "#0050b3",
      "primary-9": "#003a8c",
      "primary-10": "#002766",
      "component-background": "#fff",
      "popover-background": "#fff",
      "popover-customize-border-color": "#f0f0f0",
      "font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "code-family": "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
      "text-color": "rgba(0, 0, 0, 0.85)",
      "text-color-secondary": "rgba(0, 0, 0, 0.45)",
      "text-color-inverse": "#fff",
      "icon-color": "inherit",
      "icon-color-hover": "rgba(0, 0, 0, 0.75)",
      "heading-color": "rgba(0, 0, 0, 0.85)",
      "text-color-dark": "rgba(255, 255, 255, 0.85)",
      "text-color-secondary-dark": "rgba(255, 255, 255, 0.65)",
      "text-selection-bg": "#1890ff",
      "font-variant-base": "tabular-nums",
      "font-feature-settings-base": "tnum",
      "font-size-base": "14px",
      "font-size-lg": "16px",
      "font-size-sm": "12px",
      "heading-1-size": "38px",
      "heading-2-size": "30px",
      "heading-3-size": "24px",
      "heading-4-size": "20px",
      "heading-5-size": "16px",
      "line-height-base": "1.5715",
      "border-radius-base": "2px",
      "border-radius-sm": "2px",
      "control-border-radius": "2px",
      "arrow-border-radius": "2px",
      "padding-lg": "24px",
      "padding-md": "16px",
      "padding-sm": "12px",
      "padding-xs": "8px",
      "padding-xss": "4px",
      "control-padding-horizontal": "12px",
      "control-padding-horizontal-sm": "8px",
      "margin-lg": "24px",
      "margin-md": "16px",
      "margin-sm": "12px",
      "margin-xs": "8px",
      "margin-xss": "4px",
      "height-base": "32px",
      "height-lg": "40px",
      "height-sm": "24px",
      "item-active-bg": "#e6f7ff",
      "item-hover-bg": "#f5f5f5",
      "iconfont-css-prefix": "anticon",
      "link-color": "#1890ff",
      "link-hover-color": "#40a9ff",
      "link-active-color": "#096dd9",
      "link-decoration": "none",
      "link-hover-decoration": "none",
      "link-focus-decoration": "none",
      "link-focus-outline": "0",
      "ease-base-out": "cubic-bezier(0.7, 0.3, 0.1, 1)",
      "ease-base-in": "cubic-bezier(0.9, 0, 0.3, 0.7)",
      "ease-out": "cubic-bezier(0.215, 0.61, 0.355, 1)",
      "ease-in": "cubic-bezier(0.55, 0.055, 0.675, 0.19)",
      "ease-in-out": "cubic-bezier(0.645, 0.045, 0.355, 1)",
      "ease-out-back": "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
      "ease-in-back": "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
      "ease-in-out-back": "cubic-bezier(0.71, -0.46, 0.29, 1.46)",
      "ease-out-circ": "cubic-bezier(0.08, 0.82, 0.17, 1)",
      "ease-in-circ": "cubic-bezier(0.6, 0.04, 0.98, 0.34)",
      "ease-in-out-circ": "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
      "ease-out-quint": "cubic-bezier(0.23, 1, 0.32, 1)",
      "ease-in-quint": "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
      "ease-in-out-quint": "cubic-bezier(0.86, 0, 0.07, 1)",
      "border-color-base": "#d9d9d9",
      "border-color-split": "#f0f0f0",
      "border-color-inverse": "#fff",
      "border-width-base": "1px",
      "border-style-base": "solid",
      "outline-blur-size": "0",
      "outline-width": "2px",
      "outline-color": "#1890ff",
      "outline-fade": "20%",
      "background-color-light": "#fafafa",
      "background-color-base": "#f5f5f5",
      "disabled-color": "rgba(0, 0, 0, 0.25)",
      "disabled-bg": "#f5f5f5",
      "disabled-active-bg": "#e6e6e6",
      "disabled-color-dark": "rgba(255, 255, 255, 0.35)",
      "shadow-color": "rgba(0, 0, 0, 0.15)",
      "shadow-color-inverse": "#fff",
      "box-shadow-base": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "shadow-1-up": "0 -6px 16px -8px rgba(0, 0, 0, 0.08), 0 -9px 28px 0 rgba(0, 0, 0, 0.05), 0 -12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-down": "0 6px 16px -8px rgba(0, 0, 0, 0.08), 0 9px 28px 0 rgba(0, 0, 0, 0.05), 0 12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-left": "-6px 0 16px -8px rgba(0, 0, 0, 0.08), -9px 0 28px 0 rgba(0, 0, 0, 0.05), -12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-right": "6px 0 16px -8px rgba(0, 0, 0, 0.08), 9px 0 28px 0 rgba(0, 0, 0, 0.05), 12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-2": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "btn-font-weight": "400",
      "btn-border-radius-base": "2px",
      "btn-border-radius-sm": "2px",
      "btn-border-width": "1px",
      "btn-border-style": "solid",
      "btn-shadow": "0 2px 0 rgba(0, 0, 0, 0.015)",
      "btn-primary-shadow": "0 2px 0 rgba(0, 0, 0, 0.045)",
      "btn-text-shadow": "0 -1px 0 rgba(0, 0, 0, 0.12)",
      "btn-primary-color": "#fff",
      "btn-primary-bg": "#1890ff",
      "btn-default-color": "rgba(0, 0, 0, 0.85)",
      "btn-default-bg": "#fff",
      "btn-default-border": "#d9d9d9",
      "btn-danger-color": "#fff",
      "btn-danger-bg": "#ff4d4f",
      "btn-danger-border": "#ff4d4f",
      "btn-disable-color": "rgba(0, 0, 0, 0.25)",
      "btn-disable-bg": "#f5f5f5",
      "btn-disable-border": "#d9d9d9",
      "btn-default-ghost-color": "#fff",
      "btn-default-ghost-bg": "transparent",
      "btn-default-ghost-border": "#fff",
      "btn-font-size-lg": "16px",
      "btn-font-size-sm": "14px",
      "btn-padding-horizontal-base": "15px",
      "btn-padding-horizontal-lg": "15px",
      "btn-padding-horizontal-sm": "7px",
      "btn-height-base": "32px",
      "btn-height-lg": "40px",
      "btn-height-sm": "24px",
      "btn-line-height": "1.5715",
      "btn-circle-size": "32px",
      "btn-circle-size-lg": "40px",
      "btn-circle-size-sm": "24px",
      "btn-square-size": "32px",
      "btn-square-size-lg": "40px",
      "btn-square-size-sm": "24px",
      "btn-square-only-icon-size": "16px",
      "btn-square-only-icon-size-sm": "14px",
      "btn-square-only-icon-size-lg": "18px",
      "btn-group-border": "#40a9ff",
      "btn-link-hover-bg": "transparent",
      "btn-text-hover-bg": "rgba(0, 0, 0, 0.018)",
      "checkbox-size": "16px",
      "checkbox-color": "#1890ff",
      "checkbox-check-color": "#fff",
      "checkbox-check-bg": "#fff",
      "checkbox-border-width": "1px",
      "checkbox-border-radius": "2px",
      "checkbox-group-item-margin-right": "8px",
      "descriptions-bg": "#fafafa",
      "descriptions-title-margin-bottom": "20px",
      "descriptions-default-padding": "16px 24px",
      "descriptions-middle-padding": "12px 24px",
      "descriptions-small-padding": "8px 16px",
      "descriptions-item-padding-bottom": "16px",
      "descriptions-item-trailing-colon": "true",
      "descriptions-item-label-colon-margin-right": "8px",
      "descriptions-item-label-colon-margin-left": "2px",
      "descriptions-extra-color": "rgba(0, 0, 0, 0.85)",
      "divider-text-padding": "1em",
      "divider-orientation-margin": "5%",
      "divider-color": "rgba(0, 0, 0, 0.06)",
      "divider-vertical-gutter": "8px",
      "dropdown-selected-color": "#1890ff",
      "dropdown-menu-submenu-disabled-bg": "#fff",
      "dropdown-selected-bg": "#e6f7ff",
      "empty-font-size": "14px",
      "radio-size": "16px",
      "radio-top": "0.2em",
      "radio-border-width": "1px",
      "radio-dot-size": "8px",
      "radio-dot-color": "#1890ff",
      "radio-dot-disabled-color": "rgba(0, 0, 0, 0.2)",
      "radio-solid-checked-color": "#fff",
      "radio-button-bg": "#fff",
      "radio-button-checked-bg": "#fff",
      "radio-button-color": "rgba(0, 0, 0, 0.85)",
      "radio-button-hover-color": "#40a9ff",
      "radio-button-active-color": "#096dd9",
      "radio-button-padding-horizontal": "15px",
      "radio-disabled-button-checked-bg": "#e6e6e6",
      "radio-disabled-button-checked-color": "rgba(0, 0, 0, 0.25)",
      "radio-wrapper-margin-right": "8px",
      "screen-xs": "480px",
      "screen-xs-min": "480px",
      "screen-sm": "576px",
      "screen-sm-min": "576px",
      "screen-md": "768px",
      "screen-md-min": "768px",
      "screen-lg": "992px",
      "screen-lg-min": "992px",
      "screen-xl": "1200px",
      "screen-xl-min": "1200px",
      "screen-xxl": "1600px",
      "screen-xxl-min": "1600px",
      "screen-xs-max": "575px",
      "screen-sm-max": "767px",
      "screen-md-max": "991px",
      "screen-lg-max": "1199px",
      "screen-xl-max": "1599px",
      "grid-columns": "24",
      "layout-header-background": "#001529",
      "layout-header-height": "64px",
      "layout-header-padding": "0 50px",
      "layout-header-color": "rgba(0, 0, 0, 0.85)",
      "layout-footer-padding": "24px 50px",
      "layout-footer-background": "#f0f2f5",
      "layout-sider-background": "#001529",
      "layout-trigger-height": "48px",
      "layout-trigger-background": "#002140",
      "layout-trigger-color": "#fff",
      "layout-zero-trigger-width": "36px",
      "layout-zero-trigger-height": "42px",
      "layout-sider-background-light": "#fff",
      "layout-trigger-background-light": "#fff",
      "layout-trigger-color-light": "rgba(0, 0, 0, 0.85)",
      "zindex-badge": "auto",
      "zindex-table-fixed": "2",
      "zindex-affix": "10",
      "zindex-back-top": "10",
      "zindex-picker-panel": "10",
      "zindex-popup-close": "10",
      "zindex-modal": "1000",
      "zindex-modal-mask": "1000",
      "zindex-message": "1010",
      "zindex-notification": "1010",
      "zindex-popover": "1030",
      "zindex-dropdown": "1050",
      "zindex-picker": "1050",
      "zindex-popoconfirm": "1060",
      "zindex-tooltip": "1070",
      "zindex-image": "1080",
      "animation-duration-slow": "0.3s",
      "animation-duration-base": "0.2s",
      "animation-duration-fast": "0.1s",
      "collapse-panel-border-radius": "2px",
      "dropdown-menu-bg": "#fff",
      "dropdown-vertical-padding": "5px",
      "dropdown-edge-child-vertical-padding": "4px",
      "dropdown-font-size": "14px",
      "dropdown-line-height": "22px",
      "label-required-color": "#ff4d4f",
      "label-color": "rgba(0, 0, 0, 0.85)",
      "form-warning-input-bg": "#fff",
      "form-item-margin-bottom": "24px",
      "form-item-trailing-colon": "true",
      "form-vertical-label-padding": "0 0 8px",
      "form-vertical-label-margin": "0",
      "form-item-label-font-size": "14px",
      "form-item-label-height": "32px",
      "form-item-label-colon-margin-right": "8px",
      "form-item-label-colon-margin-left": "2px",
      "form-error-input-bg": "#fff",
      "input-height-base": "32px",
      "input-height-lg": "40px",
      "input-height-sm": "24px",
      "input-padding-horizontal": "11px",
      "input-padding-horizontal-base": "11px",
      "input-padding-horizontal-sm": "7px",
      "input-padding-horizontal-lg": "11px",
      "input-padding-vertical-base": "4px",
      "input-padding-vertical-sm": "0px",
      "input-padding-vertical-lg": "6.5px",
      "input-placeholder-color": "#bfbfbf",
      "input-color": "rgba(0, 0, 0, 0.85)",
      "input-icon-color": "rgba(0, 0, 0, 0.85)",
      "input-border-color": "#d9d9d9",
      "input-bg": "#fff",
      "input-number-hover-border-color": "#40a9ff",
      "input-number-handler-active-bg": "#f4f4f4",
      "input-number-handler-hover-bg": "#40a9ff",
      "input-number-handler-bg": "#fff",
      "input-number-handler-border-color": "#d9d9d9",
      "input-addon-bg": "#fafafa",
      "input-hover-border-color": "#40a9ff",
      "input-disabled-bg": "#f5f5f5",
      "input-outline-offset": "0 0",
      "input-icon-hover-color": "rgba(0, 0, 0, 0.85)",
      "input-disabled-color": "rgba(0, 0, 0, 0.25)",
      "mentions-dropdown-bg": "#fff",
      "mentions-dropdown-menu-item-hover-bg": "#fff",
      "select-border-color": "#d9d9d9",
      "select-item-selected-color": "rgba(0, 0, 0, 0.85)",
      "select-item-selected-font-weight": "600",
      "select-dropdown-bg": "#fff",
      "select-item-selected-bg": "#e6f7ff",
      "select-item-active-bg": "#f5f5f5",
      "select-dropdown-vertical-padding": "5px",
      "select-dropdown-font-size": "14px",
      "select-dropdown-line-height": "22px",
      "select-dropdown-height": "32px",
      "select-background": "#fff",
      "select-clear-background": "#fff",
      "select-selection-item-bg": "#f5f5f5",
      "select-selection-item-border-color": "#f0f0f0",
      "select-single-item-height-lg": "40px",
      "select-multiple-item-height": "24px",
      "select-multiple-item-height-lg": "32px",
      "select-multiple-item-spacing-half": "2px",
      "select-multiple-disabled-background": "#f5f5f5",
      "select-multiple-item-disabled-color": "#bfbfbf",
      "select-multiple-item-disabled-border-color": "#d9d9d9",
      "cascader-bg": "#fff",
      "cascader-item-selected-bg": "#e6f7ff",
      "cascader-menu-bg": "#fff",
      "cascader-menu-border-color-split": "#f0f0f0",
      "cascader-dropdown-vertical-padding": "5px",
      "cascader-dropdown-edge-child-vertical-padding": "4px",
      "cascader-dropdown-font-size": "14px",
      "cascader-dropdown-line-height": "22px",
      "anchor-bg": "transparent",
      "anchor-border-color": "#f0f0f0",
      "anchor-link-top": "4px",
      "anchor-link-left": "16px",
      "anchor-link-padding": "4px 0 4px 16px",
      "tooltip-max-width": "250px",
      "tooltip-color": "#fff",
      "tooltip-bg": "rgba(0, 0, 0, 0.75)",
      "tooltip-arrow-width": "11.3137085px",
      "tooltip-distance": "14.3137085px",
      "tooltip-arrow-color": "rgba(0, 0, 0, 0.75)",
      "tooltip-border-radius": "2px",
      "popover-bg": "#fff",
      "popover-color": "rgba(0, 0, 0, 0.85)",
      "popover-min-width": "177px",
      "popover-min-height": "32px",
      "popover-arrow-width": "11.3137085px",
      "popover-arrow-color": "#fff",
      "popover-arrow-outer-color": "#fff",
      "popover-distance": "15.3137085px",
      "popover-padding-horizontal": "16px",
      "modal-header-padding-vertical": "16px",
      "modal-header-padding-horizontal": "24px",
      "modal-header-bg": "#fff",
      "modal-header-padding": "16px 24px",
      "modal-header-border-width": "1px",
      "modal-header-border-style": "solid",
      "modal-header-title-line-height": "22px",
      "modal-header-title-font-size": "16px",
      "modal-header-border-color-split": "#f0f0f0",
      "modal-header-close-size": "54px",
      "modal-content-bg": "#fff",
      "modal-heading-color": "rgba(0, 0, 0, 0.85)",
      "modal-close-color": "rgba(0, 0, 0, 0.45)",
      "modal-footer-bg": "transparent",
      "modal-footer-border-color-split": "#f0f0f0",
      "modal-footer-border-style": "solid",
      "modal-footer-padding-vertical": "10px",
      "modal-footer-padding-horizontal": "16px",
      "modal-footer-border-width": "1px",
      "modal-mask-bg": "rgba(0, 0, 0, 0.45)",
      "modal-confirm-title-font-size": "16px",
      "modal-border-radius": "2px",
      "progress-default-color": "#1890ff",
      "progress-remaining-color": "#f5f5f5",
      "progress-info-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-radius": "100px",
      "progress-steps-item-bg": "#f3f3f3",
      "progress-text-font-size": "1em",
      "progress-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-circle-text-font-size": "1em",
      "menu-inline-toplevel-item-height": "40px",
      "menu-item-height": "40px",
      "menu-item-group-height": "1.5715",
      "menu-collapsed-width": "80px",
      "menu-bg": "#fff",
      "menu-popup-bg": "#fff",
      "menu-item-color": "rgba(0, 0, 0, 0.85)",
      "menu-inline-submenu-bg": "#fafafa",
      "menu-highlight-color": "#1890ff",
      "menu-highlight-danger-color": "#ff4d4f",
      "menu-item-active-bg": "#e6f7ff",
      "menu-item-active-danger-bg": "#fff1f0",
      "menu-item-active-border-width": "3px",
      "menu-item-group-title-color": "rgba(0, 0, 0, 0.45)",
      "menu-item-vertical-margin": "4px",
      "menu-item-font-size": "14px",
      "menu-item-boundary-margin": "8px",
      "menu-item-padding-horizontal": "20px",
      "menu-item-padding": "0 20px",
      "menu-horizontal-line-height": "46px",
      "menu-icon-margin-right": "10px",
      "menu-icon-size": "14px",
      "menu-icon-size-lg": "16px",
      "menu-item-group-title-font-size": "14px",
      "menu-dark-color": "rgba(255, 255, 255, 0.65)",
      "menu-dark-danger-color": "#ff4d4f",
      "menu-dark-bg": "#001529",
      "menu-dark-arrow-color": "#fff",
      "menu-dark-inline-submenu-bg": "#000c17",
      "menu-dark-highlight-color": "#fff",
      "menu-dark-item-active-bg": "#1890ff",
      "menu-dark-item-active-danger-bg": "#ff4d4f",
      "menu-dark-selected-item-icon-color": "#fff",
      "menu-dark-selected-item-text-color": "#fff",
      "menu-dark-item-hover-bg": "transparent",
      "spin-dot-size-sm": "14px",
      "spin-dot-size": "20px",
      "spin-dot-size-lg": "32px",
      "table-bg": "#fff",
      "table-header-bg": "#fafafa",
      "table-header-color": "rgba(0, 0, 0, 0.85)",
      "table-header-sort-bg": "#f5f5f5",
      "table-row-hover-bg": "#fafafa",
      "table-selected-row-color": "inherit",
      "table-selected-row-bg": "#e6f7ff",
      "table-selected-row-hover-bg": "#dcf4ff",
      "table-expanded-row-bg": "#fbfbfb",
      "table-padding-vertical": "16px",
      "table-padding-horizontal": "16px",
      "table-padding-vertical-md": "12px",
      "table-padding-horizontal-md": "8px",
      "table-padding-vertical-sm": "8px",
      "table-padding-horizontal-sm": "8px",
      "table-border-color": "#f0f0f0",
      "table-border-radius-base": "2px",
      "table-footer-bg": "#fafafa",
      "table-footer-color": "rgba(0, 0, 0, 0.85)",
      "table-header-bg-sm": "#fafafa",
      "table-font-size": "14px",
      "table-font-size-md": "14px",
      "table-font-size-sm": "14px",
      "table-header-cell-split-color": "rgba(0, 0, 0, 0.06)",
      "table-header-sort-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-fixed-header-sort-active-bg": "#f5f5f5",
      "table-header-filter-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-filter-btns-bg": "inherit",
      "table-filter-dropdown-bg": "#fff",
      "table-expand-icon-bg": "#fff",
      "table-selection-column-width": "32px",
      "table-sticky-scroll-bar-bg": "rgba(0, 0, 0, 0.35)",
      "table-sticky-scroll-bar-radius": "4px",
      "tag-border-radius": "2px",
      "tag-default-bg": "#fafafa",
      "tag-default-color": "rgba(0, 0, 0, 0.85)",
      "tag-font-size": "12px",
      "tag-line-height": "20px",
      "picker-bg": "#fff",
      "picker-basic-cell-hover-color": "#f5f5f5",
      "picker-basic-cell-active-with-range-color": "#e6f7ff",
      "picker-basic-cell-hover-with-range-color": "#cbe6ff",
      "picker-basic-cell-disabled-bg": "rgba(0, 0, 0, 0.04)",
      "picker-border-color": "#f0f0f0",
      "picker-date-hover-range-border-color": "#7ec1ff",
      "picker-date-hover-range-color": "#cbe6ff",
      "picker-time-panel-column-width": "56px",
      "picker-time-panel-column-height": "224px",
      "picker-time-panel-cell-height": "28px",
      "picker-panel-cell-height": "24px",
      "picker-panel-cell-width": "36px",
      "picker-text-height": "40px",
      "picker-panel-without-time-cell-height": "66px",
      "calendar-bg": "#fff",
      "calendar-input-bg": "#fff",
      "calendar-border-color": "#fff",
      "calendar-item-active-bg": "#e6f7ff",
      "calendar-column-active-bg": "rgba(230, 247, 255, 0.2)",
      "calendar-full-bg": "#fff",
      "calendar-full-panel-bg": "#fff",
      "carousel-dot-width": "16px",
      "carousel-dot-height": "3px",
      "carousel-dot-active-width": "24px",
      "badge-height": "20px",
      "badge-height-sm": "14px",
      "badge-dot-size": "6px",
      "badge-font-size": "12px",
      "badge-font-size-sm": "12px",
      "badge-font-weight": "normal",
      "badge-status-size": "6px",
      "badge-text-color": "#fff",
      "badge-color": "#ff4d4f",
      "rate-star-color": "#fadb14",
      "rate-star-bg": "#f0f0f0",
      "rate-star-size": "20px",
      "rate-star-hover-scale": "scale(1.1)",
      "card-head-color": "rgba(0, 0, 0, 0.85)",
      "card-head-background": "transparent",
      "card-head-font-size": "16px",
      "card-head-font-size-sm": "14px",
      "card-head-padding": "16px",
      "card-head-padding-sm": "8px",
      "card-head-height": "48px",
      "card-head-height-sm": "36px",
      "card-inner-head-padding": "12px",
      "card-padding-base": "24px",
      "card-padding-base-sm": "12px",
      "card-actions-background": "#fff",
      "card-actions-li-margin": "12px 0",
      "card-skeleton-bg": "#cfd8dc",
      "card-background": "#fff",
      "card-shadow": "0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09)",
      "card-radius": "2px",
      "card-head-tabs-margin-bottom": "-17px",
      "card-head-extra-color": "rgba(0, 0, 0, 0.85)",
      "comment-bg": "inherit",
      "comment-padding-base": "16px 0",
      "comment-nest-indent": "44px",
      "comment-font-size-base": "14px",
      "comment-font-size-sm": "12px",
      "comment-author-name-color": "rgba(0, 0, 0, 0.45)",
      "comment-author-time-color": "#ccc",
      "comment-action-color": "rgba(0, 0, 0, 0.45)",
      "comment-action-hover-color": "#595959",
      "comment-actions-margin-bottom": "inherit",
      "comment-actions-margin-top": "12px",
      "comment-content-detail-p-margin-bottom": "inherit",
      "tabs-card-head-background": "#fafafa",
      "tabs-card-height": "40px",
      "tabs-card-active-color": "#1890ff",
      "tabs-card-horizontal-padding": "8px 16px",
      "tabs-card-horizontal-padding-sm": "6px 16px",
      "tabs-card-horizontal-padding-lg": "7px 16px 6px",
      "tabs-title-font-size": "14px",
      "tabs-title-font-size-lg": "16px",
      "tabs-title-font-size-sm": "14px",
      "tabs-ink-bar-color": "#1890ff",
      "tabs-bar-margin": "0 0 16px 0",
      "tabs-horizontal-gutter": "32px",
      "tabs-horizontal-margin": "0 0 0 32px",
      "tabs-horizontal-margin-rtl": "0 0 0 32px",
      "tabs-horizontal-padding": "12px 0",
      "tabs-horizontal-padding-lg": "16px 0",
      "tabs-horizontal-padding-sm": "8px 0",
      "tabs-vertical-padding": "8px 24px",
      "tabs-vertical-margin": "16px 0 0 0",
      "tabs-scrolling-size": "32px",
      "tabs-highlight-color": "#1890ff",
      "tabs-hover-color": "#40a9ff",
      "tabs-active-color": "#096dd9",
      "tabs-card-gutter": "2px",
      "tabs-card-tab-active-border-top": "2px solid transparent",
      "back-top-color": "#fff",
      "back-top-bg": "rgba(0, 0, 0, 0.45)",
      "back-top-hover-bg": "rgba(0, 0, 0, 0.85)",
      "avatar-size-base": "32px",
      "avatar-size-lg": "40px",
      "avatar-size-sm": "24px",
      "avatar-font-size-base": "18px",
      "avatar-font-size-lg": "24px",
      "avatar-font-size-sm": "14px",
      "avatar-bg": "#ccc",
      "avatar-color": "#fff",
      "avatar-border-radius": "2px",
      "avatar-group-overlapping": "-8px",
      "avatar-group-space": "3px",
      "avatar-group-border-color": "#fff",
      "switch-height": "22px",
      "switch-sm-height": "16px",
      "switch-min-width": "44px",
      "switch-sm-min-width": "28px",
      "switch-disabled-opacity": "0.4",
      "switch-color": "#1890ff",
      "switch-bg": "#fff",
      "switch-shadow-color": "rgba(0, 35, 11, 0.2)",
      "switch-padding": "2px",
      "switch-inner-margin-min": "7px",
      "switch-inner-margin-max": "25px",
      "switch-sm-inner-margin-min": "5px",
      "switch-sm-inner-margin-max": "18px",
      "pagination-item-bg": "#fff",
      "pagination-item-size": "32px",
      "pagination-item-size-sm": "24px",
      "pagination-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "pagination-font-weight-active": "500",
      "pagination-item-bg-active": "#fff",
      "pagination-item-link-bg": "#fff",
      "pagination-item-disabled-color-active": "rgba(0, 0, 0, 0.25)",
      "pagination-item-disabled-bg-active": "#e6e6e6",
      "pagination-item-input-bg": "#fff",
      "pagination-mini-options-size-changer-top": "0px",
      "page-header-padding": "24px",
      "page-header-padding-vertical": "16px",
      "page-header-padding-breadcrumb": "12px",
      "page-header-content-padding-vertical": "12px",
      "page-header-back-color": "#000",
      "page-header-ghost-bg": "inherit",
      "page-header-heading-title": "20px",
      "page-header-heading-sub-title": "14px",
      "page-header-tabs-tab-font-size": "16px",
      "breadcrumb-base-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-last-item-color": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-font-size": "14px",
      "breadcrumb-icon-font-size": "14px",
      "breadcrumb-link-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-link-color-hover": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-separator-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-separator-margin": "0 8px",
      "slider-margin": "10px 6px 10px",
      "slider-rail-background-color": "#f5f5f5",
      "slider-rail-background-color-hover": "#e1e1e1",
      "slider-track-background-color": "#91d5ff",
      "slider-track-background-color-hover": "#69c0ff",
      "slider-handle-border-width": "2px",
      "slider-handle-background-color": "#fff",
      "slider-handle-color": "#91d5ff",
      "slider-handle-color-hover": "#69c0ff",
      "slider-handle-color-focus": "#46a6ff",
      "slider-handle-color-focus-shadow": "rgba(24, 144, 255, 0.12)",
      "slider-handle-color-tooltip-open": "#1890ff",
      "slider-handle-size": "14px",
      "slider-handle-margin-top": "-5px",
      "slider-handle-shadow": "0",
      "slider-dot-border-color": "#f0f0f0",
      "slider-dot-border-color-active": "#8cc8ff",
      "slider-disabled-color": "rgba(0, 0, 0, 0.25)",
      "slider-disabled-background-color": "#fff",
      "tree-bg": "#fff",
      "tree-title-height": "24px",
      "tree-child-padding": "18px",
      "tree-directory-selected-color": "#fff",
      "tree-directory-selected-bg": "#1890ff",
      "tree-node-hover-bg": "#f5f5f5",
      "tree-node-selected-bg": "#bae7ff",
      "collapse-header-padding": "12px 16px",
      "collapse-header-padding-extra": "40px",
      "collapse-header-bg": "#fafafa",
      "collapse-content-padding": "16px",
      "collapse-content-bg": "#fff",
      "collapse-header-arrow-left": "16px",
      "skeleton-color": "rgba(190, 190, 190, 0.2)",
      "skeleton-to-color": "rgba(129, 129, 129, 0.24)",
      "skeleton-paragraph-margin-top": "28px",
      "skeleton-paragraph-li-margin-top": "16px",
      "skeleton-paragraph-li-height": "16px",
      "skeleton-title-height": "16px",
      "skeleton-title-paragraph-margin-top": "24px",
      "transfer-header-height": "40px",
      "transfer-item-height": "32px",
      "transfer-disabled-bg": "#f5f5f5",
      "transfer-list-height": "200px",
      "transfer-item-hover-bg": "#f5f5f5",
      "transfer-item-selected-hover-bg": "#dcf4ff",
      "transfer-item-padding-vertical": "6px",
      "transfer-list-search-icon-top": "12px",
      "message-notice-content-padding": "10px 16px",
      "message-notice-content-bg": "#fff",
      "wave-animation-width": "6px",
      "alert-success-border-color": "#b7eb8f",
      "alert-success-bg-color": "#f6ffed",
      "alert-success-icon-color": "#52c41a",
      "alert-info-border-color": "#91d5ff",
      "alert-info-bg-color": "#e6f7ff",
      "alert-info-icon-color": "#1890ff",
      "alert-warning-border-color": "#ffe58f",
      "alert-warning-bg-color": "#fffbe6",
      "alert-warning-icon-color": "#faad14",
      "alert-error-border-color": "#ffccc7",
      "alert-error-bg-color": "#fff2f0",
      "alert-error-icon-color": "#ff4d4f",
      "alert-message-color": "rgba(0, 0, 0, 0.85)",
      "alert-text-color": "rgba(0, 0, 0, 0.85)",
      "alert-close-color": "rgba(0, 0, 0, 0.45)",
      "alert-close-hover-color": "rgba(0, 0, 0, 0.75)",
      "alert-no-icon-padding-vertical": "8px",
      "alert-with-description-no-icon-padding-vertical": "15px",
      "alert-with-description-padding-vertical": "15px",
      "alert-with-description-padding": "15px 15px 15px 24px",
      "alert-icon-top": "12.0005px",
      "alert-with-description-icon-size": "24px",
      "list-header-background": "transparent",
      "list-footer-background": "transparent",
      "list-empty-text-padding": "16px",
      "list-item-padding": "12px 0",
      "list-item-padding-sm": "8px 16px",
      "list-item-padding-lg": "16px 24px",
      "list-item-meta-margin-bottom": "16px",
      "list-item-meta-avatar-margin-right": "16px",
      "list-item-meta-title-margin-bottom": "12px",
      "list-customize-card-bg": "#fff",
      "list-item-meta-description-font-size": "14px",
      "statistic-title-font-size": "14px",
      "statistic-content-font-size": "24px",
      "statistic-unit-font-size": "24px",
      "statistic-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "drawer-header-padding": "16px 24px",
      "drawer-bg": "#fff",
      "drawer-footer-padding-vertical": "10px",
      "drawer-footer-padding-horizontal": "16px",
      "drawer-header-close-size": "56px",
      "drawer-title-font-size": "16px",
      "drawer-title-line-height": "22px",
      "timeline-width": "2px",
      "timeline-color": "#f0f0f0",
      "timeline-dot-border-width": "2px",
      "timeline-dot-color": "#1890ff",
      "timeline-dot-bg": "#fff",
      "timeline-item-padding-bottom": "20px",
      "typography-title-font-weight": "600",
      "typography-title-margin-top": "1.2em",
      "typography-title-margin-bottom": "0.5em",
      "upload-actions-color": "rgba(0, 0, 0, 0.45)",
      "process-tail-color": "#f0f0f0",
      "steps-nav-arrow-color": "rgba(0, 0, 0, 0.25)",
      "steps-background": "#fff",
      "steps-icon-size": "32px",
      "steps-icon-custom-size": "32px",
      "steps-icon-custom-top": "0px",
      "steps-icon-custom-font-size": "24px",
      "steps-icon-top": "-0.5px",
      "steps-icon-font-size": "16px",
      "steps-icon-margin": "0 8px 0 0",
      "steps-title-line-height": "32px",
      "steps-small-icon-size": "24px",
      "steps-small-icon-margin": "0 8px 0 0",
      "steps-dot-size": "8px",
      "steps-dot-top": "2px",
      "steps-current-dot-size": "10px",
      "steps-description-max-width": "140px",
      "steps-nav-content-max-width": "auto",
      "steps-vertical-icon-width": "16px",
      "steps-vertical-tail-width": "16px",
      "steps-vertical-tail-width-sm": "12px",
      "notification-bg": "#fff",
      "notification-padding-vertical": "16px",
      "notification-padding-horizontal": "24px",
      "result-title-font-size": "24px",
      "result-subtitle-font-size": "14px",
      "result-icon-font-size": "72px",
      "result-extra-margin": "24px 0 0 0",
      "image-size-base": "48px",
      "image-font-size-base": "24px",
      "image-bg": "#f5f5f5",
      "image-color": "#fff",
      "image-mask-font-size": "16px",
      "image-preview-operation-size": "18px",
      "image-preview-operation-color": "rgba(255, 255, 255, 0.85)",
      "image-preview-operation-disabled-color": "rgba(255, 255, 255, 0.25)",
      "segmented-bg": "rgba(0, 0, 0, 0.04)",
      "segmented-hover-bg": "rgba(0, 0, 0, 0.06)",
      "segmented-selected-bg": "#fff",
      "segmented-label-color": "rgba(0, 0, 0, 0.65)",
      "segmented-label-hover-color": "#262626",
      "root-entry-name": "variable"
    },
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "Ant Design Pro",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {},
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "/scripts/loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/config/oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger"
      }
    ],
    "mock": {
      "include": [
        "mock/**/*",
        "src/pages/**/_mock.ts"
      ]
    },
    "esbuildMinifyIIFE": true,
    "targets": {
      "chrome": 80
    },
    "define": {
      "ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION": "",
      "REACT_APP_ENV": false
    }
  },
  "defaultConfig": {
    "routeLoader": {
      "moduleType": "esm"
    },
    "mountElementId": "root",
    "history": {
      "type": "browser"
    },
    "base": "/",
    "svgr": {},
    "publicPath": "/",
    "mfsu": {
      "strategy": "normal"
    },
    "ignoreMomentLocale": true,
    "externals": {},
    "autoCSSModules": true,
    "alias": {
      "umi": "@@/exports",
      "react": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react",
      "react-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-dom",
      "react-router": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router",
      "react-router-dom": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-router-dom",
      "@": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src",
      "@@": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/.umi",
      "regenerator-runtime": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime",
      "antd": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/antd",
      "moment": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/dayjs",
      "@umijs/max": "@@/exports"
    },
    "requestRecord": {
      "mock": {
        "outputDir": "./mock",
        "fileName": "requestRecord.mock.js",
        "usingRole": "default"
      },
      "outputDir": "./types"
    },
    "hash": true,
    "routes": [
      {
        "path": "/user",
        "layout": false,
        "routes": [
          {
            "path": "/user/login",
            "layout": false,
            "name": "login",
            "component": "./user/login"
          },
          {
            "path": "/user",
            "redirect": "/user/login"
          },
          {
            "name": "register-result",
            "icon": "smile",
            "path": "/user/register-result",
            "component": "./user/register-result"
          },
          {
            "name": "register",
            "icon": "smile",
            "path": "/user/register",
            "component": "./user/register"
          },
          {
            "component": "404",
            "path": "/user/*"
          }
        ]
      },
      {
        "path": "/dashboard",
        "name": "dashboard",
        "icon": "dashboard",
        "routes": [
          {
            "path": "/dashboard",
            "redirect": "/dashboard/analysis"
          },
          {
            "name": "analysis",
            "icon": "smile",
            "path": "/dashboard/analysis",
            "component": "./dashboard/analysis"
          },
          {
            "name": "monitor",
            "icon": "smile",
            "path": "/dashboard/monitor",
            "component": "./dashboard/monitor"
          },
          {
            "name": "workplace",
            "icon": "smile",
            "path": "/dashboard/workplace",
            "component": "./dashboard/workplace"
          }
        ]
      },
      {
        "path": "/form",
        "icon": "form",
        "name": "form",
        "routes": [
          {
            "path": "/form",
            "redirect": "/form/basic-form"
          },
          {
            "name": "basic-form",
            "icon": "smile",
            "path": "/form/basic-form",
            "component": "./form/basic-form"
          },
          {
            "name": "step-form",
            "icon": "smile",
            "path": "/form/step-form",
            "component": "./form/step-form"
          },
          {
            "name": "advanced-form",
            "icon": "smile",
            "path": "/form/advanced-form",
            "component": "./form/advanced-form"
          }
        ]
      },
      {
        "path": "/list",
        "icon": "table",
        "name": "list",
        "routes": [
          {
            "path": "/list/search",
            "name": "search-list",
            "component": "./list/search",
            "routes": [
              {
                "path": "/list/search",
                "redirect": "/list/search/articles"
              },
              {
                "name": "articles",
                "icon": "smile",
                "path": "/list/search/articles",
                "component": "./list/search/articles"
              },
              {
                "name": "projects",
                "icon": "smile",
                "path": "/list/search/projects",
                "component": "./list/search/projects"
              },
              {
                "name": "applications",
                "icon": "smile",
                "path": "/list/search/applications",
                "component": "./list/search/applications"
              }
            ]
          },
          {
            "path": "/list",
            "redirect": "/list/table-list"
          },
          {
            "name": "table-list",
            "icon": "smile",
            "path": "/list/table-list",
            "component": "./table-list"
          },
          {
            "name": "basic-list",
            "icon": "smile",
            "path": "/list/basic-list",
            "component": "./list/basic-list"
          },
          {
            "name": "card-list",
            "icon": "smile",
            "path": "/list/card-list",
            "component": "./list/card-list"
          }
        ]
      },
      {
        "path": "/profile",
        "name": "profile",
        "icon": "profile",
        "routes": [
          {
            "path": "/profile",
            "redirect": "/profile/basic"
          },
          {
            "name": "basic",
            "icon": "smile",
            "path": "/profile/basic",
            "component": "./profile/basic"
          },
          {
            "name": "advanced",
            "icon": "smile",
            "path": "/profile/advanced",
            "component": "./profile/advanced"
          }
        ]
      },
      {
        "name": "result",
        "icon": "CheckCircleOutlined",
        "path": "/result",
        "routes": [
          {
            "path": "/result",
            "redirect": "/result/success"
          },
          {
            "name": "success",
            "icon": "smile",
            "path": "/result/success",
            "component": "./result/success"
          },
          {
            "name": "fail",
            "icon": "smile",
            "path": "/result/fail",
            "component": "./result/fail"
          }
        ]
      },
      {
        "name": "exception",
        "icon": "warning",
        "path": "/exception",
        "routes": [
          {
            "path": "/exception",
            "redirect": "/exception/403"
          },
          {
            "name": "403",
            "icon": "smile",
            "path": "/exception/403",
            "component": "./exception/403"
          },
          {
            "name": "404",
            "icon": "smile",
            "path": "/exception/404",
            "component": "./exception/404"
          },
          {
            "name": "500",
            "icon": "smile",
            "path": "/exception/500",
            "component": "./exception/500"
          }
        ]
      },
      {
        "name": "account",
        "icon": "user",
        "path": "/account",
        "routes": [
          {
            "path": "/account",
            "redirect": "/account/center"
          },
          {
            "name": "center",
            "icon": "smile",
            "path": "/account/center",
            "component": "./account/center"
          },
          {
            "name": "settings",
            "icon": "smile",
            "path": "/account/settings",
            "component": "./account/settings"
          }
        ]
      },
      {
        "path": "/",
        "redirect": "/dashboard/analysis"
      },
      {
        "component": "404",
        "path": "/*"
      }
    ],
    "theme": {
      "blue-base": "#1890ff",
      "blue-1": "#e6f7ff",
      "blue-2": "#bae7ff",
      "blue-3": "#91d5ff",
      "blue-4": "#69c0ff",
      "blue-5": "#40a9ff",
      "blue-6": "#1890ff",
      "blue-7": "#096dd9",
      "blue-8": "#0050b3",
      "blue-9": "#003a8c",
      "blue-10": "#002766",
      "purple-base": "#722ed1",
      "purple-1": "#f9f0ff",
      "purple-2": "#efdbff",
      "purple-3": "#d3adf7",
      "purple-4": "#b37feb",
      "purple-5": "#9254de",
      "purple-6": "#722ed1",
      "purple-7": "#531dab",
      "purple-8": "#391085",
      "purple-9": "#22075e",
      "purple-10": "#120338",
      "cyan-base": "#13c2c2",
      "cyan-1": "#e6fffb",
      "cyan-2": "#b5f5ec",
      "cyan-3": "#87e8de",
      "cyan-4": "#5cdbd3",
      "cyan-5": "#36cfc9",
      "cyan-6": "#13c2c2",
      "cyan-7": "#08979c",
      "cyan-8": "#006d75",
      "cyan-9": "#00474f",
      "cyan-10": "#002329",
      "green-base": "#52c41a",
      "green-1": "#f6ffed",
      "green-2": "#d9f7be",
      "green-3": "#b7eb8f",
      "green-4": "#95de64",
      "green-5": "#73d13d",
      "green-6": "#52c41a",
      "green-7": "#389e0d",
      "green-8": "#237804",
      "green-9": "#135200",
      "green-10": "#092b00",
      "magenta-base": "#eb2f96",
      "magenta-1": "#fff0f6",
      "magenta-2": "#ffd6e7",
      "magenta-3": "#ffadd2",
      "magenta-4": "#ff85c0",
      "magenta-5": "#f759ab",
      "magenta-6": "#eb2f96",
      "magenta-7": "#c41d7f",
      "magenta-8": "#9e1068",
      "magenta-9": "#780650",
      "magenta-10": "#520339",
      "pink-base": "#eb2f96",
      "pink-1": "#fff0f6",
      "pink-2": "#ffd6e7",
      "pink-3": "#ffadd2",
      "pink-4": "#ff85c0",
      "pink-5": "#f759ab",
      "pink-6": "#eb2f96",
      "pink-7": "#c41d7f",
      "pink-8": "#9e1068",
      "pink-9": "#780650",
      "pink-10": "#520339",
      "red-base": "#f5222d",
      "red-1": "#fff1f0",
      "red-2": "#ffccc7",
      "red-3": "#ffa39e",
      "red-4": "#ff7875",
      "red-5": "#ff4d4f",
      "red-6": "#f5222d",
      "red-7": "#cf1322",
      "red-8": "#a8071a",
      "red-9": "#820014",
      "red-10": "#5c0011",
      "orange-base": "#fa8c16",
      "orange-1": "#fff7e6",
      "orange-2": "#ffe7ba",
      "orange-3": "#ffd591",
      "orange-4": "#ffc069",
      "orange-5": "#ffa940",
      "orange-6": "#fa8c16",
      "orange-7": "#d46b08",
      "orange-8": "#ad4e00",
      "orange-9": "#873800",
      "orange-10": "#612500",
      "yellow-base": "#fadb14",
      "yellow-1": "#feffe6",
      "yellow-2": "#ffffb8",
      "yellow-3": "#fffb8f",
      "yellow-4": "#fff566",
      "yellow-5": "#ffec3d",
      "yellow-6": "#fadb14",
      "yellow-7": "#d4b106",
      "yellow-8": "#ad8b00",
      "yellow-9": "#876800",
      "yellow-10": "#614700",
      "volcano-base": "#fa541c",
      "volcano-1": "#fff2e8",
      "volcano-2": "#ffd8bf",
      "volcano-3": "#ffbb96",
      "volcano-4": "#ff9c6e",
      "volcano-5": "#ff7a45",
      "volcano-6": "#fa541c",
      "volcano-7": "#d4380d",
      "volcano-8": "#ad2102",
      "volcano-9": "#871400",
      "volcano-10": "#610b00",
      "geekblue-base": "#2f54eb",
      "geekblue-1": "#f0f5ff",
      "geekblue-2": "#d6e4ff",
      "geekblue-3": "#adc6ff",
      "geekblue-4": "#85a5ff",
      "geekblue-5": "#597ef7",
      "geekblue-6": "#2f54eb",
      "geekblue-7": "#1d39c4",
      "geekblue-8": "#10239e",
      "geekblue-9": "#061178",
      "geekblue-10": "#030852",
      "lime-base": "#a0d911",
      "lime-1": "#fcffe6",
      "lime-2": "#f4ffb8",
      "lime-3": "#eaff8f",
      "lime-4": "#d3f261",
      "lime-5": "#bae637",
      "lime-6": "#a0d911",
      "lime-7": "#7cb305",
      "lime-8": "#5b8c00",
      "lime-9": "#3f6600",
      "lime-10": "#254000",
      "gold-base": "#faad14",
      "gold-1": "#fffbe6",
      "gold-2": "#fff1b8",
      "gold-3": "#ffe58f",
      "gold-4": "#ffd666",
      "gold-5": "#ffc53d",
      "gold-6": "#faad14",
      "gold-7": "#d48806",
      "gold-8": "#ad6800",
      "gold-9": "#874d00",
      "gold-10": "#613400",
      "preset-colors": "pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue,",
      "theme": "default",
      "ant-prefix": "ant",
      "html-selector": "html",
      "primary-color": "#1890ff",
      "primary-color-hover": "#40a9ff",
      "primary-color-active": "#096dd9",
      "primary-color-outline": "rgba(24, 144, 255, 0.2)",
      "processing-color": "#1890ff",
      "info-color": "#1890ff",
      "info-color-deprecated-bg": "#e6f7ff",
      "info-color-deprecated-border": "#91d5ff",
      "success-color": "#52c41a",
      "success-color-hover": "#73d13d",
      "success-color-active": "#389e0d",
      "success-color-outline": "rgba(82, 196, 26, 0.2)",
      "success-color-deprecated-bg": "#f6ffed",
      "success-color-deprecated-border": "#b7eb8f",
      "warning-color": "#faad14",
      "warning-color-hover": "#ffc53d",
      "warning-color-active": "#d48806",
      "warning-color-outline": "rgba(250, 173, 20, 0.2)",
      "warning-color-deprecated-bg": "#fffbe6",
      "warning-color-deprecated-border": "#ffe58f",
      "error-color": "#ff4d4f",
      "error-color-hover": "#ff7875",
      "error-color-active": "#d9363e",
      "error-color-outline": "rgba(255, 77, 79, 0.2)",
      "error-color-deprecated-bg": "#fff2f0",
      "error-color-deprecated-border": "#ffccc7",
      "highlight-color": "#ff4d4f",
      "normal-color": "#d9d9d9",
      "white": "#fff",
      "black": "#000",
      "primary-1": "#e6f7ff",
      "primary-2": "#bae7ff",
      "primary-3": "#91d5ff",
      "primary-4": "#69c0ff",
      "primary-5": "#40a9ff",
      "primary-6": "#1890ff",
      "primary-7": "#096dd9",
      "primary-8": "#0050b3",
      "primary-9": "#003a8c",
      "primary-10": "#002766",
      "component-background": "#fff",
      "popover-background": "#fff",
      "popover-customize-border-color": "#f0f0f0",
      "font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "code-family": "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
      "text-color": "rgba(0, 0, 0, 0.85)",
      "text-color-secondary": "rgba(0, 0, 0, 0.45)",
      "text-color-inverse": "#fff",
      "icon-color": "inherit",
      "icon-color-hover": "rgba(0, 0, 0, 0.75)",
      "heading-color": "rgba(0, 0, 0, 0.85)",
      "text-color-dark": "rgba(255, 255, 255, 0.85)",
      "text-color-secondary-dark": "rgba(255, 255, 255, 0.65)",
      "text-selection-bg": "#1890ff",
      "font-variant-base": "tabular-nums",
      "font-feature-settings-base": "tnum",
      "font-size-base": "14px",
      "font-size-lg": "16px",
      "font-size-sm": "12px",
      "heading-1-size": "38px",
      "heading-2-size": "30px",
      "heading-3-size": "24px",
      "heading-4-size": "20px",
      "heading-5-size": "16px",
      "line-height-base": "1.5715",
      "border-radius-base": "2px",
      "border-radius-sm": "2px",
      "control-border-radius": "2px",
      "arrow-border-radius": "2px",
      "padding-lg": "24px",
      "padding-md": "16px",
      "padding-sm": "12px",
      "padding-xs": "8px",
      "padding-xss": "4px",
      "control-padding-horizontal": "12px",
      "control-padding-horizontal-sm": "8px",
      "margin-lg": "24px",
      "margin-md": "16px",
      "margin-sm": "12px",
      "margin-xs": "8px",
      "margin-xss": "4px",
      "height-base": "32px",
      "height-lg": "40px",
      "height-sm": "24px",
      "item-active-bg": "#e6f7ff",
      "item-hover-bg": "#f5f5f5",
      "iconfont-css-prefix": "anticon",
      "link-color": "#1890ff",
      "link-hover-color": "#40a9ff",
      "link-active-color": "#096dd9",
      "link-decoration": "none",
      "link-hover-decoration": "none",
      "link-focus-decoration": "none",
      "link-focus-outline": "0",
      "ease-base-out": "cubic-bezier(0.7, 0.3, 0.1, 1)",
      "ease-base-in": "cubic-bezier(0.9, 0, 0.3, 0.7)",
      "ease-out": "cubic-bezier(0.215, 0.61, 0.355, 1)",
      "ease-in": "cubic-bezier(0.55, 0.055, 0.675, 0.19)",
      "ease-in-out": "cubic-bezier(0.645, 0.045, 0.355, 1)",
      "ease-out-back": "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
      "ease-in-back": "cubic-bezier(0.71, -0.46, 0.88, 0.6)",
      "ease-in-out-back": "cubic-bezier(0.71, -0.46, 0.29, 1.46)",
      "ease-out-circ": "cubic-bezier(0.08, 0.82, 0.17, 1)",
      "ease-in-circ": "cubic-bezier(0.6, 0.04, 0.98, 0.34)",
      "ease-in-out-circ": "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
      "ease-out-quint": "cubic-bezier(0.23, 1, 0.32, 1)",
      "ease-in-quint": "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
      "ease-in-out-quint": "cubic-bezier(0.86, 0, 0.07, 1)",
      "border-color-base": "#d9d9d9",
      "border-color-split": "#f0f0f0",
      "border-color-inverse": "#fff",
      "border-width-base": "1px",
      "border-style-base": "solid",
      "outline-blur-size": "0",
      "outline-width": "2px",
      "outline-color": "#1890ff",
      "outline-fade": "20%",
      "background-color-light": "#fafafa",
      "background-color-base": "#f5f5f5",
      "disabled-color": "rgba(0, 0, 0, 0.25)",
      "disabled-bg": "#f5f5f5",
      "disabled-active-bg": "#e6e6e6",
      "disabled-color-dark": "rgba(255, 255, 255, 0.35)",
      "shadow-color": "rgba(0, 0, 0, 0.15)",
      "shadow-color-inverse": "#fff",
      "box-shadow-base": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "shadow-1-up": "0 -6px 16px -8px rgba(0, 0, 0, 0.08), 0 -9px 28px 0 rgba(0, 0, 0, 0.05), 0 -12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-down": "0 6px 16px -8px rgba(0, 0, 0, 0.08), 0 9px 28px 0 rgba(0, 0, 0, 0.05), 0 12px 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-left": "-6px 0 16px -8px rgba(0, 0, 0, 0.08), -9px 0 28px 0 rgba(0, 0, 0, 0.05), -12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-1-right": "6px 0 16px -8px rgba(0, 0, 0, 0.08), 9px 0 28px 0 rgba(0, 0, 0, 0.05), 12px 0 48px 16px rgba(0, 0, 0, 0.03)",
      "shadow-2": "0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05)",
      "btn-font-weight": "400",
      "btn-border-radius-base": "2px",
      "btn-border-radius-sm": "2px",
      "btn-border-width": "1px",
      "btn-border-style": "solid",
      "btn-shadow": "0 2px 0 rgba(0, 0, 0, 0.015)",
      "btn-primary-shadow": "0 2px 0 rgba(0, 0, 0, 0.045)",
      "btn-text-shadow": "0 -1px 0 rgba(0, 0, 0, 0.12)",
      "btn-primary-color": "#fff",
      "btn-primary-bg": "#1890ff",
      "btn-default-color": "rgba(0, 0, 0, 0.85)",
      "btn-default-bg": "#fff",
      "btn-default-border": "#d9d9d9",
      "btn-danger-color": "#fff",
      "btn-danger-bg": "#ff4d4f",
      "btn-danger-border": "#ff4d4f",
      "btn-disable-color": "rgba(0, 0, 0, 0.25)",
      "btn-disable-bg": "#f5f5f5",
      "btn-disable-border": "#d9d9d9",
      "btn-default-ghost-color": "#fff",
      "btn-default-ghost-bg": "transparent",
      "btn-default-ghost-border": "#fff",
      "btn-font-size-lg": "16px",
      "btn-font-size-sm": "14px",
      "btn-padding-horizontal-base": "15px",
      "btn-padding-horizontal-lg": "15px",
      "btn-padding-horizontal-sm": "7px",
      "btn-height-base": "32px",
      "btn-height-lg": "40px",
      "btn-height-sm": "24px",
      "btn-line-height": "1.5715",
      "btn-circle-size": "32px",
      "btn-circle-size-lg": "40px",
      "btn-circle-size-sm": "24px",
      "btn-square-size": "32px",
      "btn-square-size-lg": "40px",
      "btn-square-size-sm": "24px",
      "btn-square-only-icon-size": "16px",
      "btn-square-only-icon-size-sm": "14px",
      "btn-square-only-icon-size-lg": "18px",
      "btn-group-border": "#40a9ff",
      "btn-link-hover-bg": "transparent",
      "btn-text-hover-bg": "rgba(0, 0, 0, 0.018)",
      "checkbox-size": "16px",
      "checkbox-color": "#1890ff",
      "checkbox-check-color": "#fff",
      "checkbox-check-bg": "#fff",
      "checkbox-border-width": "1px",
      "checkbox-border-radius": "2px",
      "checkbox-group-item-margin-right": "8px",
      "descriptions-bg": "#fafafa",
      "descriptions-title-margin-bottom": "20px",
      "descriptions-default-padding": "16px 24px",
      "descriptions-middle-padding": "12px 24px",
      "descriptions-small-padding": "8px 16px",
      "descriptions-item-padding-bottom": "16px",
      "descriptions-item-trailing-colon": "true",
      "descriptions-item-label-colon-margin-right": "8px",
      "descriptions-item-label-colon-margin-left": "2px",
      "descriptions-extra-color": "rgba(0, 0, 0, 0.85)",
      "divider-text-padding": "1em",
      "divider-orientation-margin": "5%",
      "divider-color": "rgba(0, 0, 0, 0.06)",
      "divider-vertical-gutter": "8px",
      "dropdown-selected-color": "#1890ff",
      "dropdown-menu-submenu-disabled-bg": "#fff",
      "dropdown-selected-bg": "#e6f7ff",
      "empty-font-size": "14px",
      "radio-size": "16px",
      "radio-top": "0.2em",
      "radio-border-width": "1px",
      "radio-dot-size": "8px",
      "radio-dot-color": "#1890ff",
      "radio-dot-disabled-color": "rgba(0, 0, 0, 0.2)",
      "radio-solid-checked-color": "#fff",
      "radio-button-bg": "#fff",
      "radio-button-checked-bg": "#fff",
      "radio-button-color": "rgba(0, 0, 0, 0.85)",
      "radio-button-hover-color": "#40a9ff",
      "radio-button-active-color": "#096dd9",
      "radio-button-padding-horizontal": "15px",
      "radio-disabled-button-checked-bg": "#e6e6e6",
      "radio-disabled-button-checked-color": "rgba(0, 0, 0, 0.25)",
      "radio-wrapper-margin-right": "8px",
      "screen-xs": "480px",
      "screen-xs-min": "480px",
      "screen-sm": "576px",
      "screen-sm-min": "576px",
      "screen-md": "768px",
      "screen-md-min": "768px",
      "screen-lg": "992px",
      "screen-lg-min": "992px",
      "screen-xl": "1200px",
      "screen-xl-min": "1200px",
      "screen-xxl": "1600px",
      "screen-xxl-min": "1600px",
      "screen-xs-max": "575px",
      "screen-sm-max": "767px",
      "screen-md-max": "991px",
      "screen-lg-max": "1199px",
      "screen-xl-max": "1599px",
      "grid-columns": "24",
      "layout-header-background": "#001529",
      "layout-header-height": "64px",
      "layout-header-padding": "0 50px",
      "layout-header-color": "rgba(0, 0, 0, 0.85)",
      "layout-footer-padding": "24px 50px",
      "layout-footer-background": "#f0f2f5",
      "layout-sider-background": "#001529",
      "layout-trigger-height": "48px",
      "layout-trigger-background": "#002140",
      "layout-trigger-color": "#fff",
      "layout-zero-trigger-width": "36px",
      "layout-zero-trigger-height": "42px",
      "layout-sider-background-light": "#fff",
      "layout-trigger-background-light": "#fff",
      "layout-trigger-color-light": "rgba(0, 0, 0, 0.85)",
      "zindex-badge": "auto",
      "zindex-table-fixed": "2",
      "zindex-affix": "10",
      "zindex-back-top": "10",
      "zindex-picker-panel": "10",
      "zindex-popup-close": "10",
      "zindex-modal": "1000",
      "zindex-modal-mask": "1000",
      "zindex-message": "1010",
      "zindex-notification": "1010",
      "zindex-popover": "1030",
      "zindex-dropdown": "1050",
      "zindex-picker": "1050",
      "zindex-popoconfirm": "1060",
      "zindex-tooltip": "1070",
      "zindex-image": "1080",
      "animation-duration-slow": "0.3s",
      "animation-duration-base": "0.2s",
      "animation-duration-fast": "0.1s",
      "collapse-panel-border-radius": "2px",
      "dropdown-menu-bg": "#fff",
      "dropdown-vertical-padding": "5px",
      "dropdown-edge-child-vertical-padding": "4px",
      "dropdown-font-size": "14px",
      "dropdown-line-height": "22px",
      "label-required-color": "#ff4d4f",
      "label-color": "rgba(0, 0, 0, 0.85)",
      "form-warning-input-bg": "#fff",
      "form-item-margin-bottom": "24px",
      "form-item-trailing-colon": "true",
      "form-vertical-label-padding": "0 0 8px",
      "form-vertical-label-margin": "0",
      "form-item-label-font-size": "14px",
      "form-item-label-height": "32px",
      "form-item-label-colon-margin-right": "8px",
      "form-item-label-colon-margin-left": "2px",
      "form-error-input-bg": "#fff",
      "input-height-base": "32px",
      "input-height-lg": "40px",
      "input-height-sm": "24px",
      "input-padding-horizontal": "11px",
      "input-padding-horizontal-base": "11px",
      "input-padding-horizontal-sm": "7px",
      "input-padding-horizontal-lg": "11px",
      "input-padding-vertical-base": "4px",
      "input-padding-vertical-sm": "0px",
      "input-padding-vertical-lg": "6.5px",
      "input-placeholder-color": "#bfbfbf",
      "input-color": "rgba(0, 0, 0, 0.85)",
      "input-icon-color": "rgba(0, 0, 0, 0.85)",
      "input-border-color": "#d9d9d9",
      "input-bg": "#fff",
      "input-number-hover-border-color": "#40a9ff",
      "input-number-handler-active-bg": "#f4f4f4",
      "input-number-handler-hover-bg": "#40a9ff",
      "input-number-handler-bg": "#fff",
      "input-number-handler-border-color": "#d9d9d9",
      "input-addon-bg": "#fafafa",
      "input-hover-border-color": "#40a9ff",
      "input-disabled-bg": "#f5f5f5",
      "input-outline-offset": "0 0",
      "input-icon-hover-color": "rgba(0, 0, 0, 0.85)",
      "input-disabled-color": "rgba(0, 0, 0, 0.25)",
      "mentions-dropdown-bg": "#fff",
      "mentions-dropdown-menu-item-hover-bg": "#fff",
      "select-border-color": "#d9d9d9",
      "select-item-selected-color": "rgba(0, 0, 0, 0.85)",
      "select-item-selected-font-weight": "600",
      "select-dropdown-bg": "#fff",
      "select-item-selected-bg": "#e6f7ff",
      "select-item-active-bg": "#f5f5f5",
      "select-dropdown-vertical-padding": "5px",
      "select-dropdown-font-size": "14px",
      "select-dropdown-line-height": "22px",
      "select-dropdown-height": "32px",
      "select-background": "#fff",
      "select-clear-background": "#fff",
      "select-selection-item-bg": "#f5f5f5",
      "select-selection-item-border-color": "#f0f0f0",
      "select-single-item-height-lg": "40px",
      "select-multiple-item-height": "24px",
      "select-multiple-item-height-lg": "32px",
      "select-multiple-item-spacing-half": "2px",
      "select-multiple-disabled-background": "#f5f5f5",
      "select-multiple-item-disabled-color": "#bfbfbf",
      "select-multiple-item-disabled-border-color": "#d9d9d9",
      "cascader-bg": "#fff",
      "cascader-item-selected-bg": "#e6f7ff",
      "cascader-menu-bg": "#fff",
      "cascader-menu-border-color-split": "#f0f0f0",
      "cascader-dropdown-vertical-padding": "5px",
      "cascader-dropdown-edge-child-vertical-padding": "4px",
      "cascader-dropdown-font-size": "14px",
      "cascader-dropdown-line-height": "22px",
      "anchor-bg": "transparent",
      "anchor-border-color": "#f0f0f0",
      "anchor-link-top": "4px",
      "anchor-link-left": "16px",
      "anchor-link-padding": "4px 0 4px 16px",
      "tooltip-max-width": "250px",
      "tooltip-color": "#fff",
      "tooltip-bg": "rgba(0, 0, 0, 0.75)",
      "tooltip-arrow-width": "11.3137085px",
      "tooltip-distance": "14.3137085px",
      "tooltip-arrow-color": "rgba(0, 0, 0, 0.75)",
      "tooltip-border-radius": "2px",
      "popover-bg": "#fff",
      "popover-color": "rgba(0, 0, 0, 0.85)",
      "popover-min-width": "177px",
      "popover-min-height": "32px",
      "popover-arrow-width": "11.3137085px",
      "popover-arrow-color": "#fff",
      "popover-arrow-outer-color": "#fff",
      "popover-distance": "15.3137085px",
      "popover-padding-horizontal": "16px",
      "modal-header-padding-vertical": "16px",
      "modal-header-padding-horizontal": "24px",
      "modal-header-bg": "#fff",
      "modal-header-padding": "16px 24px",
      "modal-header-border-width": "1px",
      "modal-header-border-style": "solid",
      "modal-header-title-line-height": "22px",
      "modal-header-title-font-size": "16px",
      "modal-header-border-color-split": "#f0f0f0",
      "modal-header-close-size": "54px",
      "modal-content-bg": "#fff",
      "modal-heading-color": "rgba(0, 0, 0, 0.85)",
      "modal-close-color": "rgba(0, 0, 0, 0.45)",
      "modal-footer-bg": "transparent",
      "modal-footer-border-color-split": "#f0f0f0",
      "modal-footer-border-style": "solid",
      "modal-footer-padding-vertical": "10px",
      "modal-footer-padding-horizontal": "16px",
      "modal-footer-border-width": "1px",
      "modal-mask-bg": "rgba(0, 0, 0, 0.45)",
      "modal-confirm-title-font-size": "16px",
      "modal-border-radius": "2px",
      "progress-default-color": "#1890ff",
      "progress-remaining-color": "#f5f5f5",
      "progress-info-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-radius": "100px",
      "progress-steps-item-bg": "#f3f3f3",
      "progress-text-font-size": "1em",
      "progress-text-color": "rgba(0, 0, 0, 0.85)",
      "progress-circle-text-font-size": "1em",
      "menu-inline-toplevel-item-height": "40px",
      "menu-item-height": "40px",
      "menu-item-group-height": "1.5715",
      "menu-collapsed-width": "80px",
      "menu-bg": "#fff",
      "menu-popup-bg": "#fff",
      "menu-item-color": "rgba(0, 0, 0, 0.85)",
      "menu-inline-submenu-bg": "#fafafa",
      "menu-highlight-color": "#1890ff",
      "menu-highlight-danger-color": "#ff4d4f",
      "menu-item-active-bg": "#e6f7ff",
      "menu-item-active-danger-bg": "#fff1f0",
      "menu-item-active-border-width": "3px",
      "menu-item-group-title-color": "rgba(0, 0, 0, 0.45)",
      "menu-item-vertical-margin": "4px",
      "menu-item-font-size": "14px",
      "menu-item-boundary-margin": "8px",
      "menu-item-padding-horizontal": "20px",
      "menu-item-padding": "0 20px",
      "menu-horizontal-line-height": "46px",
      "menu-icon-margin-right": "10px",
      "menu-icon-size": "14px",
      "menu-icon-size-lg": "16px",
      "menu-item-group-title-font-size": "14px",
      "menu-dark-color": "rgba(255, 255, 255, 0.65)",
      "menu-dark-danger-color": "#ff4d4f",
      "menu-dark-bg": "#001529",
      "menu-dark-arrow-color": "#fff",
      "menu-dark-inline-submenu-bg": "#000c17",
      "menu-dark-highlight-color": "#fff",
      "menu-dark-item-active-bg": "#1890ff",
      "menu-dark-item-active-danger-bg": "#ff4d4f",
      "menu-dark-selected-item-icon-color": "#fff",
      "menu-dark-selected-item-text-color": "#fff",
      "menu-dark-item-hover-bg": "transparent",
      "spin-dot-size-sm": "14px",
      "spin-dot-size": "20px",
      "spin-dot-size-lg": "32px",
      "table-bg": "#fff",
      "table-header-bg": "#fafafa",
      "table-header-color": "rgba(0, 0, 0, 0.85)",
      "table-header-sort-bg": "#f5f5f5",
      "table-row-hover-bg": "#fafafa",
      "table-selected-row-color": "inherit",
      "table-selected-row-bg": "#e6f7ff",
      "table-selected-row-hover-bg": "#dcf4ff",
      "table-expanded-row-bg": "#fbfbfb",
      "table-padding-vertical": "16px",
      "table-padding-horizontal": "16px",
      "table-padding-vertical-md": "12px",
      "table-padding-horizontal-md": "8px",
      "table-padding-vertical-sm": "8px",
      "table-padding-horizontal-sm": "8px",
      "table-border-color": "#f0f0f0",
      "table-border-radius-base": "2px",
      "table-footer-bg": "#fafafa",
      "table-footer-color": "rgba(0, 0, 0, 0.85)",
      "table-header-bg-sm": "#fafafa",
      "table-font-size": "14px",
      "table-font-size-md": "14px",
      "table-font-size-sm": "14px",
      "table-header-cell-split-color": "rgba(0, 0, 0, 0.06)",
      "table-header-sort-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-fixed-header-sort-active-bg": "#f5f5f5",
      "table-header-filter-active-bg": "rgba(0, 0, 0, 0.04)",
      "table-filter-btns-bg": "inherit",
      "table-filter-dropdown-bg": "#fff",
      "table-expand-icon-bg": "#fff",
      "table-selection-column-width": "32px",
      "table-sticky-scroll-bar-bg": "rgba(0, 0, 0, 0.35)",
      "table-sticky-scroll-bar-radius": "4px",
      "tag-border-radius": "2px",
      "tag-default-bg": "#fafafa",
      "tag-default-color": "rgba(0, 0, 0, 0.85)",
      "tag-font-size": "12px",
      "tag-line-height": "20px",
      "picker-bg": "#fff",
      "picker-basic-cell-hover-color": "#f5f5f5",
      "picker-basic-cell-active-with-range-color": "#e6f7ff",
      "picker-basic-cell-hover-with-range-color": "#cbe6ff",
      "picker-basic-cell-disabled-bg": "rgba(0, 0, 0, 0.04)",
      "picker-border-color": "#f0f0f0",
      "picker-date-hover-range-border-color": "#7ec1ff",
      "picker-date-hover-range-color": "#cbe6ff",
      "picker-time-panel-column-width": "56px",
      "picker-time-panel-column-height": "224px",
      "picker-time-panel-cell-height": "28px",
      "picker-panel-cell-height": "24px",
      "picker-panel-cell-width": "36px",
      "picker-text-height": "40px",
      "picker-panel-without-time-cell-height": "66px",
      "calendar-bg": "#fff",
      "calendar-input-bg": "#fff",
      "calendar-border-color": "#fff",
      "calendar-item-active-bg": "#e6f7ff",
      "calendar-column-active-bg": "rgba(230, 247, 255, 0.2)",
      "calendar-full-bg": "#fff",
      "calendar-full-panel-bg": "#fff",
      "carousel-dot-width": "16px",
      "carousel-dot-height": "3px",
      "carousel-dot-active-width": "24px",
      "badge-height": "20px",
      "badge-height-sm": "14px",
      "badge-dot-size": "6px",
      "badge-font-size": "12px",
      "badge-font-size-sm": "12px",
      "badge-font-weight": "normal",
      "badge-status-size": "6px",
      "badge-text-color": "#fff",
      "badge-color": "#ff4d4f",
      "rate-star-color": "#fadb14",
      "rate-star-bg": "#f0f0f0",
      "rate-star-size": "20px",
      "rate-star-hover-scale": "scale(1.1)",
      "card-head-color": "rgba(0, 0, 0, 0.85)",
      "card-head-background": "transparent",
      "card-head-font-size": "16px",
      "card-head-font-size-sm": "14px",
      "card-head-padding": "16px",
      "card-head-padding-sm": "8px",
      "card-head-height": "48px",
      "card-head-height-sm": "36px",
      "card-inner-head-padding": "12px",
      "card-padding-base": "24px",
      "card-padding-base-sm": "12px",
      "card-actions-background": "#fff",
      "card-actions-li-margin": "12px 0",
      "card-skeleton-bg": "#cfd8dc",
      "card-background": "#fff",
      "card-shadow": "0 1px 2px -2px rgba(0, 0, 0, 0.16), 0 3px 6px 0 rgba(0, 0, 0, 0.12), 0 5px 12px 4px rgba(0, 0, 0, 0.09)",
      "card-radius": "2px",
      "card-head-tabs-margin-bottom": "-17px",
      "card-head-extra-color": "rgba(0, 0, 0, 0.85)",
      "comment-bg": "inherit",
      "comment-padding-base": "16px 0",
      "comment-nest-indent": "44px",
      "comment-font-size-base": "14px",
      "comment-font-size-sm": "12px",
      "comment-author-name-color": "rgba(0, 0, 0, 0.45)",
      "comment-author-time-color": "#ccc",
      "comment-action-color": "rgba(0, 0, 0, 0.45)",
      "comment-action-hover-color": "#595959",
      "comment-actions-margin-bottom": "inherit",
      "comment-actions-margin-top": "12px",
      "comment-content-detail-p-margin-bottom": "inherit",
      "tabs-card-head-background": "#fafafa",
      "tabs-card-height": "40px",
      "tabs-card-active-color": "#1890ff",
      "tabs-card-horizontal-padding": "8px 16px",
      "tabs-card-horizontal-padding-sm": "6px 16px",
      "tabs-card-horizontal-padding-lg": "7px 16px 6px",
      "tabs-title-font-size": "14px",
      "tabs-title-font-size-lg": "16px",
      "tabs-title-font-size-sm": "14px",
      "tabs-ink-bar-color": "#1890ff",
      "tabs-bar-margin": "0 0 16px 0",
      "tabs-horizontal-gutter": "32px",
      "tabs-horizontal-margin": "0 0 0 32px",
      "tabs-horizontal-margin-rtl": "0 0 0 32px",
      "tabs-horizontal-padding": "12px 0",
      "tabs-horizontal-padding-lg": "16px 0",
      "tabs-horizontal-padding-sm": "8px 0",
      "tabs-vertical-padding": "8px 24px",
      "tabs-vertical-margin": "16px 0 0 0",
      "tabs-scrolling-size": "32px",
      "tabs-highlight-color": "#1890ff",
      "tabs-hover-color": "#40a9ff",
      "tabs-active-color": "#096dd9",
      "tabs-card-gutter": "2px",
      "tabs-card-tab-active-border-top": "2px solid transparent",
      "back-top-color": "#fff",
      "back-top-bg": "rgba(0, 0, 0, 0.45)",
      "back-top-hover-bg": "rgba(0, 0, 0, 0.85)",
      "avatar-size-base": "32px",
      "avatar-size-lg": "40px",
      "avatar-size-sm": "24px",
      "avatar-font-size-base": "18px",
      "avatar-font-size-lg": "24px",
      "avatar-font-size-sm": "14px",
      "avatar-bg": "#ccc",
      "avatar-color": "#fff",
      "avatar-border-radius": "2px",
      "avatar-group-overlapping": "-8px",
      "avatar-group-space": "3px",
      "avatar-group-border-color": "#fff",
      "switch-height": "22px",
      "switch-sm-height": "16px",
      "switch-min-width": "44px",
      "switch-sm-min-width": "28px",
      "switch-disabled-opacity": "0.4",
      "switch-color": "#1890ff",
      "switch-bg": "#fff",
      "switch-shadow-color": "rgba(0, 35, 11, 0.2)",
      "switch-padding": "2px",
      "switch-inner-margin-min": "7px",
      "switch-inner-margin-max": "25px",
      "switch-sm-inner-margin-min": "5px",
      "switch-sm-inner-margin-max": "18px",
      "pagination-item-bg": "#fff",
      "pagination-item-size": "32px",
      "pagination-item-size-sm": "24px",
      "pagination-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "pagination-font-weight-active": "500",
      "pagination-item-bg-active": "#fff",
      "pagination-item-link-bg": "#fff",
      "pagination-item-disabled-color-active": "rgba(0, 0, 0, 0.25)",
      "pagination-item-disabled-bg-active": "#e6e6e6",
      "pagination-item-input-bg": "#fff",
      "pagination-mini-options-size-changer-top": "0px",
      "page-header-padding": "24px",
      "page-header-padding-vertical": "16px",
      "page-header-padding-breadcrumb": "12px",
      "page-header-content-padding-vertical": "12px",
      "page-header-back-color": "#000",
      "page-header-ghost-bg": "inherit",
      "page-header-heading-title": "20px",
      "page-header-heading-sub-title": "14px",
      "page-header-tabs-tab-font-size": "16px",
      "breadcrumb-base-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-last-item-color": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-font-size": "14px",
      "breadcrumb-icon-font-size": "14px",
      "breadcrumb-link-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-link-color-hover": "rgba(0, 0, 0, 0.85)",
      "breadcrumb-separator-color": "rgba(0, 0, 0, 0.45)",
      "breadcrumb-separator-margin": "0 8px",
      "slider-margin": "10px 6px 10px",
      "slider-rail-background-color": "#f5f5f5",
      "slider-rail-background-color-hover": "#e1e1e1",
      "slider-track-background-color": "#91d5ff",
      "slider-track-background-color-hover": "#69c0ff",
      "slider-handle-border-width": "2px",
      "slider-handle-background-color": "#fff",
      "slider-handle-color": "#91d5ff",
      "slider-handle-color-hover": "#69c0ff",
      "slider-handle-color-focus": "#46a6ff",
      "slider-handle-color-focus-shadow": "rgba(24, 144, 255, 0.12)",
      "slider-handle-color-tooltip-open": "#1890ff",
      "slider-handle-size": "14px",
      "slider-handle-margin-top": "-5px",
      "slider-handle-shadow": "0",
      "slider-dot-border-color": "#f0f0f0",
      "slider-dot-border-color-active": "#8cc8ff",
      "slider-disabled-color": "rgba(0, 0, 0, 0.25)",
      "slider-disabled-background-color": "#fff",
      "tree-bg": "#fff",
      "tree-title-height": "24px",
      "tree-child-padding": "18px",
      "tree-directory-selected-color": "#fff",
      "tree-directory-selected-bg": "#1890ff",
      "tree-node-hover-bg": "#f5f5f5",
      "tree-node-selected-bg": "#bae7ff",
      "collapse-header-padding": "12px 16px",
      "collapse-header-padding-extra": "40px",
      "collapse-header-bg": "#fafafa",
      "collapse-content-padding": "16px",
      "collapse-content-bg": "#fff",
      "collapse-header-arrow-left": "16px",
      "skeleton-color": "rgba(190, 190, 190, 0.2)",
      "skeleton-to-color": "rgba(129, 129, 129, 0.24)",
      "skeleton-paragraph-margin-top": "28px",
      "skeleton-paragraph-li-margin-top": "16px",
      "skeleton-paragraph-li-height": "16px",
      "skeleton-title-height": "16px",
      "skeleton-title-paragraph-margin-top": "24px",
      "transfer-header-height": "40px",
      "transfer-item-height": "32px",
      "transfer-disabled-bg": "#f5f5f5",
      "transfer-list-height": "200px",
      "transfer-item-hover-bg": "#f5f5f5",
      "transfer-item-selected-hover-bg": "#dcf4ff",
      "transfer-item-padding-vertical": "6px",
      "transfer-list-search-icon-top": "12px",
      "message-notice-content-padding": "10px 16px",
      "message-notice-content-bg": "#fff",
      "wave-animation-width": "6px",
      "alert-success-border-color": "#b7eb8f",
      "alert-success-bg-color": "#f6ffed",
      "alert-success-icon-color": "#52c41a",
      "alert-info-border-color": "#91d5ff",
      "alert-info-bg-color": "#e6f7ff",
      "alert-info-icon-color": "#1890ff",
      "alert-warning-border-color": "#ffe58f",
      "alert-warning-bg-color": "#fffbe6",
      "alert-warning-icon-color": "#faad14",
      "alert-error-border-color": "#ffccc7",
      "alert-error-bg-color": "#fff2f0",
      "alert-error-icon-color": "#ff4d4f",
      "alert-message-color": "rgba(0, 0, 0, 0.85)",
      "alert-text-color": "rgba(0, 0, 0, 0.85)",
      "alert-close-color": "rgba(0, 0, 0, 0.45)",
      "alert-close-hover-color": "rgba(0, 0, 0, 0.75)",
      "alert-no-icon-padding-vertical": "8px",
      "alert-with-description-no-icon-padding-vertical": "15px",
      "alert-with-description-padding-vertical": "15px",
      "alert-with-description-padding": "15px 15px 15px 24px",
      "alert-icon-top": "12.0005px",
      "alert-with-description-icon-size": "24px",
      "list-header-background": "transparent",
      "list-footer-background": "transparent",
      "list-empty-text-padding": "16px",
      "list-item-padding": "12px 0",
      "list-item-padding-sm": "8px 16px",
      "list-item-padding-lg": "16px 24px",
      "list-item-meta-margin-bottom": "16px",
      "list-item-meta-avatar-margin-right": "16px",
      "list-item-meta-title-margin-bottom": "12px",
      "list-customize-card-bg": "#fff",
      "list-item-meta-description-font-size": "14px",
      "statistic-title-font-size": "14px",
      "statistic-content-font-size": "24px",
      "statistic-unit-font-size": "24px",
      "statistic-font-family": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
      "drawer-header-padding": "16px 24px",
      "drawer-bg": "#fff",
      "drawer-footer-padding-vertical": "10px",
      "drawer-footer-padding-horizontal": "16px",
      "drawer-header-close-size": "56px",
      "drawer-title-font-size": "16px",
      "drawer-title-line-height": "22px",
      "timeline-width": "2px",
      "timeline-color": "#f0f0f0",
      "timeline-dot-border-width": "2px",
      "timeline-dot-color": "#1890ff",
      "timeline-dot-bg": "#fff",
      "timeline-item-padding-bottom": "20px",
      "typography-title-font-weight": "600",
      "typography-title-margin-top": "1.2em",
      "typography-title-margin-bottom": "0.5em",
      "upload-actions-color": "rgba(0, 0, 0, 0.45)",
      "process-tail-color": "#f0f0f0",
      "steps-nav-arrow-color": "rgba(0, 0, 0, 0.25)",
      "steps-background": "#fff",
      "steps-icon-size": "32px",
      "steps-icon-custom-size": "32px",
      "steps-icon-custom-top": "0px",
      "steps-icon-custom-font-size": "24px",
      "steps-icon-top": "-0.5px",
      "steps-icon-font-size": "16px",
      "steps-icon-margin": "0 8px 0 0",
      "steps-title-line-height": "32px",
      "steps-small-icon-size": "24px",
      "steps-small-icon-margin": "0 8px 0 0",
      "steps-dot-size": "8px",
      "steps-dot-top": "2px",
      "steps-current-dot-size": "10px",
      "steps-description-max-width": "140px",
      "steps-nav-content-max-width": "auto",
      "steps-vertical-icon-width": "16px",
      "steps-vertical-tail-width": "16px",
      "steps-vertical-tail-width-sm": "12px",
      "notification-bg": "#fff",
      "notification-padding-vertical": "16px",
      "notification-padding-horizontal": "24px",
      "result-title-font-size": "24px",
      "result-subtitle-font-size": "14px",
      "result-icon-font-size": "72px",
      "result-extra-margin": "24px 0 0 0",
      "image-size-base": "48px",
      "image-font-size-base": "24px",
      "image-bg": "#f5f5f5",
      "image-color": "#fff",
      "image-mask-font-size": "16px",
      "image-preview-operation-size": "18px",
      "image-preview-operation-color": "rgba(255, 255, 255, 0.85)",
      "image-preview-operation-disabled-color": "rgba(255, 255, 255, 0.25)",
      "segmented-bg": "rgba(0, 0, 0, 0.04)",
      "segmented-hover-bg": "rgba(0, 0, 0, 0.06)",
      "segmented-selected-bg": "#fff",
      "segmented-label-color": "rgba(0, 0, 0, 0.65)",
      "segmented-label-hover-color": "#262626",
      "root-entry-name": "variable"
    },
    "fastRefresh": true,
    "model": {},
    "initialState": {},
    "title": "Ant Design Pro",
    "layout": {
      "locale": true,
      "navTheme": "light",
      "colorPrimary": "#1890ff",
      "layout": "mix",
      "contentWidth": "Fluid",
      "fixedHeader": false,
      "fixSiderbar": true,
      "colorWeak": false,
      "title": "Ant Design Pro",
      "pwa": true,
      "logo": "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
      "iconfontUrl": "",
      "token": {}
    },
    "moment2dayjs": {
      "preset": "antd",
      "plugins": [
        "duration"
      ]
    },
    "locale": {
      "default": "zh-CN",
      "antd": true,
      "baseNavigator": true
    },
    "antd": {},
    "request": {},
    "access": {},
    "headScripts": [
      {
        "src": "/scripts/loading.js",
        "async": true
      }
    ],
    "presets": [
      "umi-presets-pro"
    ],
    "openAPI": [
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/config/oneapi.json",
        "mock": false
      },
      {
        "requestLibPath": "import { request } from '@umijs/max'",
        "schemaPath": "https://gw.alipayobjects.com/os/antfincdn/CA1dOm%2631B/openapi.json",
        "projectName": "swagger"
      }
    ],
    "mock": {
      "include": [
        "mock/**/*",
        "src/pages/**/_mock.ts"
      ]
    },
    "esbuildMinifyIIFE": true,
    "targets": {
      "chrome": 80
    },
    "define": {
      "ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION": "",
      "REACT_APP_ENV": false
    }
  },
  "routes": {
    "1": {
      "path": "/user",
      "layout": false,
      "id": "1",
      "absPath": "/user"
    },
    "2": {
      "path": "/user/login",
      "layout": false,
      "name": "login",
      "file": "@/pages/user/login/index.tsx",
      "parentId": "1",
      "id": "2",
      "absPath": "/user/login",
      "__content": "import { Footer } from '@/components';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport { FormattedMessage, Helmet, SelectLang, useIntl, useModel } from '@umijs/max';\nimport { Alert, message, Tabs } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport Settings from '../../../../config/defaultSettings';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    action: {\n      marginLeft: '8px',\n      color: 'rgba(0, 0, 0, 0.2)',\n      fontSize: '24px',\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      transition: 'color 0.3s',\n      '&:hover': {\n        color: token.colorPrimaryActive,\n      },\n    },\n    lang: {\n      width: 42,\n      height: 42,\n      lineHeight: '42px',\n      position: 'fixed',\n      right: 16,\n      borderRadius: token.borderRadius,\n      ':hover': {\n        backgroundColor: token.colorBgTextHover,\n      },\n    },\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'auto',\n      backgroundImage:\n        \"url('https://mdn.alipayobjects.com/yuyan_qk0oxh/afts/img/V-_oS6r-i7wAAAAAAAAAAAAAFl94AQBr')\",\n      backgroundSize: '100% 100%',\n    },\n  };\n});\n\nconst ActionIcons = () => {\n  const { styles } = useStyles();\n\n  return (\n    <>\n      <AlipayCircleOutlined key=\"AlipayCircleOutlined\" className={styles.action} />\n      <TaobaoCircleOutlined key=\"TaobaoCircleOutlined\" className={styles.action} />\n      <WeiboCircleOutlined key=\"WeiboCircleOutlined\" className={styles.action} />\n    </>\n  );\n};\n\nconst Lang = () => {\n  const { styles } = useStyles();\n\n  return (\n    <div className={styles.lang} data-lang>\n      {SelectLang && <SelectLang />}\n    </div>\n  );\n};\n\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => {\n  return (\n    <Alert\n      style={{\n        marginBottom: 24,\n      }}\n      message={content}\n      type=\"error\"\n      showIcon\n    />\n  );\n};\n\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n  const { initialState, setInitialState } = useModel('@@initialState');\n  const { styles } = useStyles();\n  const intl = useIntl();\n\n  const fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n      flushSync(() => {\n        setInitialState((s) => ({\n          ...s,\n          currentUser: userInfo,\n        }));\n      });\n    }\n  };\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      const msg = await login({ ...values, type });\n      if (msg.status === 'ok') {\n        const defaultLoginSuccessMessage = intl.formatMessage({\n          id: 'pages.login.success',\n          defaultMessage: '登录成功！',\n        });\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        const urlParams = new URL(window.location.href).searchParams;\n        window.location.href = urlParams.get('redirect') || '/';\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n      setUserLoginState(msg);\n    } catch (error) {\n      const defaultLoginFailureMessage = intl.formatMessage({\n        id: 'pages.login.failure',\n        defaultMessage: '登录失败，请重试！',\n      });\n      console.log(error);\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n\n  return (\n    <div className={styles.container}>\n      <Helmet>\n        <title>\n          {intl.formatMessage({\n            id: 'menu.login',\n            defaultMessage: '登录页',\n          })}\n          - {Settings.title}\n        </title>\n      </Helmet>\n      <Lang />\n      <div\n        style={{\n          flex: '1',\n          padding: '32px 0',\n        }}\n      >\n        <LoginForm\n          contentStyle={{\n            minWidth: 280,\n            maxWidth: '75vw',\n          }}\n          logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          title=\"Ant Design\"\n          subTitle={intl.formatMessage({ id: 'pages.layouts.userLayout.title' })}\n          initialValues={{\n            autoLogin: true,\n          }}\n          actions={[\n            <FormattedMessage\n              key=\"loginWith\"\n              id=\"pages.login.loginWith\"\n              defaultMessage=\"其他登录方式\"\n            />,\n            <ActionIcons key=\"icons\" />,\n          ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs\n            activeKey={type}\n            onChange={setType}\n            centered\n            items={[\n              {\n                key: 'account',\n                label: intl.formatMessage({\n                  id: 'pages.login.accountLogin.tab',\n                  defaultMessage: '账户密码登录',\n                }),\n              },\n              {\n                key: 'mobile',\n                label: intl.formatMessage({\n                  id: 'pages.login.phoneLogin.tab',\n                  defaultMessage: '手机号登录',\n                }),\n              },\n            ]}\n          />\n\n          {status === 'error' && loginType === 'account' && (\n            <LoginMessage\n              content={intl.formatMessage({\n                id: 'pages.login.accountLogin.errorMessage',\n                defaultMessage: '账户或密码错误(admin/ant.design)',\n              })}\n            />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"username\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.username.placeholder',\n                  defaultMessage: '用户名: admin or user',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.username.required\"\n                        defaultMessage=\"请输入用户名!\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"password\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.password.placeholder',\n                  defaultMessage: '密码: ant.design',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.password.required\"\n                        defaultMessage=\"请输入密码！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\n          {type === 'mobile' && (\n            <>\n              <ProFormText\n                fieldProps={{\n                  size: 'large',\n                  prefix: <MobileOutlined />,\n                }}\n                name=\"mobile\"\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.phoneNumber.placeholder',\n                  defaultMessage: '手机号',\n                })}\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.required\"\n                        defaultMessage=\"请输入手机号！\"\n                      />\n                    ),\n                  },\n                  {\n                    pattern: /^1\\d{10}$/,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.phoneNumber.invalid\"\n                        defaultMessage=\"手机号格式错误！\"\n                      />\n                    ),\n                  },\n                ]}\n              />\n              <ProFormCaptcha\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined />,\n                }}\n                captchaProps={{\n                  size: 'large',\n                }}\n                placeholder={intl.formatMessage({\n                  id: 'pages.login.captcha.placeholder',\n                  defaultMessage: '请输入验证码',\n                })}\n                captchaTextRender={(timing, count) => {\n                  if (timing) {\n                    return `${count} ${intl.formatMessage({\n                      id: 'pages.getCaptchaSecondText',\n                      defaultMessage: '获取验证码',\n                    })}`;\n                  }\n                  return intl.formatMessage({\n                    id: 'pages.login.phoneLogin.getVerificationCode',\n                    defaultMessage: '获取验证码',\n                  });\n                }}\n                name=\"captcha\"\n                rules={[\n                  {\n                    required: true,\n                    message: (\n                      <FormattedMessage\n                        id=\"pages.login.captcha.required\"\n                        defaultMessage=\"请输入验证码！\"\n                      />\n                    ),\n                  },\n                ]}\n                onGetCaptcha={async (phone) => {\n                  const result = await getFakeCaptcha({\n                    phone,\n                  });\n                  if (!result) {\n                    return;\n                  }\n                  message.success('获取验证码成功！验证码为：1234');\n                }}\n              />\n            </>\n          )}\n          <div\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              <FormattedMessage id=\"pages.login.rememberMe\" defaultMessage=\"自动登录\" />\n            </ProFormCheckbox>\n            <a\n              style={{\n                float: 'right',\n              }}\n            >\n              <FormattedMessage id=\"pages.login.forgotPassword\" defaultMessage=\"忘记密码\" />\n            </a>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/user/login/index.tsx"
    },
    "3": {
      "path": "/user",
      "redirect": "/user/login",
      "parentId": "1",
      "id": "3",
      "absPath": "/user"
    },
    "4": {
      "name": "register-result",
      "icon": "smile",
      "path": "/user/register-result",
      "file": "@/pages/user/register-result/index.tsx",
      "parentId": "1",
      "id": "4",
      "absPath": "/user/register-result",
      "__content": "import { Link, useSearchParams } from '@umijs/max';\nimport { Button, Result } from 'antd';\nimport React from 'react';\nimport useStyles from './style.style';\n\nconst RegisterResult: React.FC<Record<string, unknown>> = () => {\n  const { styles } = useStyles();\n  const [params] = useSearchParams();\n\n  const actions = (\n    <div className={styles.actions}>\n      <a href=\"\">\n        <Button size=\"large\" type=\"primary\">\n          <span>查看邮箱</span>\n        </Button>\n      </a>\n      <Link to=\"/\">\n        <Button size=\"large\">返回首页</Button>\n      </Link>\n    </div>\n  );\n\n  const email = params?.get('account') || 'AntDesign@example.com';\n  return (\n    <Result\n      className={styles.registerResult}\n      status=\"success\"\n      title={\n        <div className={styles.title}>\n          <span>你的账户：{email} 注册成功</span>\n        </div>\n      }\n      subTitle=\"激活邮件已发送到你的邮箱中，邮件有效期为24小时。请及时登录邮箱，点击邮件中的链接激活帐户。\"\n      extra={actions}\n    />\n  );\n};\nexport default RegisterResult;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/user/register-result/index.tsx"
    },
    "5": {
      "name": "register",
      "icon": "smile",
      "path": "/user/register",
      "file": "@/pages/user/register/index.tsx",
      "parentId": "1",
      "id": "5",
      "absPath": "/user/register",
      "__content": "import { history, Link, useRequest } from '@umijs/max';\nimport { Button, Col, Form, Input, message, Popover, Progress, Row, Select, Space } from 'antd';\nimport type { Store } from 'antd/es/form/interface';\nimport type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport type { StateType } from './service';\nimport { fakeRegister } from './service';\nimport useStyles from './style.style';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nconst passwordProgressMap: {\n  ok: 'success';\n  pass: 'normal';\n  poor: 'exception';\n} = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception',\n};\nconst Register: FC = () => {\n  const { styles } = useStyles();\n  const [count, setCount]: [number, any] = useState(0);\n  const [open, setVisible]: [boolean, any] = useState(false);\n  const [prefix, setPrefix]: [string, any] = useState('86');\n  const [popover, setPopover]: [boolean, any] = useState(false);\n  const confirmDirty = false;\n  let interval: number | undefined;\n\n  const passwordStatusMap = {\n    ok: (\n      <div className={styles.success}>\n        <span>强度：强</span>\n      </div>\n    ),\n    pass: (\n      <div className={styles.warning}>\n        <span>强度：中</span>\n      </div>\n    ),\n    poor: (\n      <div className={styles.error}>\n        <span>强度：太短</span>\n      </div>\n    ),\n  };\n\n  const [form] = Form.useForm();\n  useEffect(\n    () => () => {\n      clearInterval(interval);\n    },\n    [interval],\n  );\n  const onGetCaptcha = () => {\n    let counts = 59;\n    setCount(counts);\n    interval = window.setInterval(() => {\n      counts -= 1;\n      setCount(counts);\n      if (counts === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n  };\n  const getPasswordStatus = () => {\n    const value = form.getFieldValue('password');\n    if (value && value.length > 9) {\n      return 'ok';\n    }\n    if (value && value.length > 5) {\n      return 'pass';\n    }\n    return 'poor';\n  };\n  const { loading: submitting, run: register } = useRequest<{\n    data: StateType;\n  }>(fakeRegister, {\n    manual: true,\n    onSuccess: (data, params) => {\n      if (data.status === 'ok') {\n        message.success('注册成功！');\n        history.push({\n          pathname: `/user/register-result?account=${params[0].email}`,\n        });\n      }\n    },\n  });\n  const onFinish = (values: Store) => {\n    register(values);\n  };\n  const checkConfirm = (_: any, value: string) => {\n    const promise = Promise;\n    if (value && value !== form.getFieldValue('password')) {\n      return promise.reject('两次输入的密码不匹配!');\n    }\n    return promise.resolve();\n  };\n  const checkPassword = (_: any, value: string) => {\n    const promise = Promise;\n    // 没有值的情况\n    if (!value) {\n      setVisible(!!value);\n      return promise.reject('请输入密码!');\n    }\n    // 有值的情况\n    if (!open) {\n      setVisible(!!value);\n    }\n    setPopover(!popover);\n    if (value.length < 6) {\n      return promise.reject('');\n    }\n    if (value && confirmDirty) {\n      form.validateFields(['confirm']);\n    }\n    return promise.resolve();\n  };\n  const changePrefix = (value: string) => {\n    setPrefix(value);\n  };\n  const renderPasswordProgress = () => {\n    const value = form.getFieldValue('password');\n    const passwordStatus = getPasswordStatus();\n    return value && value.length ? (\n      <div className={styles[`progress-${passwordStatus}`]}>\n        <Progress\n          status={passwordProgressMap[passwordStatus]}\n          strokeWidth={6}\n          percent={value.length * 10 > 100 ? 100 : value.length * 10}\n          showInfo={false}\n        />\n      </div>\n    ) : null;\n  };\n  return (\n    <div className={styles.main}>\n      <h3>注册</h3>\n      <Form form={form} name=\"UserRegister\" onFinish={onFinish}>\n        <FormItem\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: '请输入邮箱地址!',\n            },\n            {\n              type: 'email',\n              message: '邮箱地址格式错误!',\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"邮箱\" />\n        </FormItem>\n        <Popover\n          getPopupContainer={(node) => {\n            if (node && node.parentNode) {\n              return node.parentNode as HTMLElement;\n            }\n            return node;\n          }}\n          content={\n            open && (\n              <div\n                style={{\n                  padding: '4px 0',\n                }}\n              >\n                {passwordStatusMap[getPasswordStatus()]}\n                {renderPasswordProgress()}\n                <div\n                  style={{\n                    marginTop: 10,\n                  }}\n                >\n                  <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\n                </div>\n              </div>\n            )\n          }\n          overlayStyle={{\n            width: 240,\n          }}\n          placement=\"right\"\n          open={open}\n        >\n          <FormItem\n            name=\"password\"\n            className={\n              form.getFieldValue('password') &&\n              form.getFieldValue('password').length > 0 &&\n              styles.password\n            }\n            rules={[\n              {\n                validator: checkPassword,\n              },\n            ]}\n          >\n            <Input size=\"large\" type=\"password\" placeholder=\"至少6位密码，区分大小写\" />\n          </FormItem>\n        </Popover>\n        <FormItem\n          name=\"confirm\"\n          rules={[\n            {\n              required: true,\n              message: '确认密码',\n            },\n            {\n              validator: checkConfirm,\n            },\n          ]}\n        >\n          <Input size=\"large\" type=\"password\" placeholder=\"确认密码\" />\n        </FormItem>\n        <FormItem\n          name=\"mobile\"\n          rules={[\n            {\n              required: true,\n              message: '请输入手机号!',\n            },\n            {\n              pattern: /^\\d{11}$/,\n              message: '手机号格式错误!',\n            },\n          ]}\n        >\n          <Space.Compact style={{ width: '100%' }}>\n            <Select\n              size=\"large\"\n              value={prefix}\n              onChange={changePrefix}\n              style={{\n                width: '30%',\n              }}\n            >\n              <Option value=\"86\">+86</Option>\n              <Option value=\"87\">+87</Option>\n            </Select>\n\n            <Input size=\"large\" placeholder=\"手机号\" />\n          </Space.Compact>\n        </FormItem>\n        <Row gutter={8}>\n          <Col span={16}>\n            <FormItem\n              name=\"captcha\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入验证码!',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"验证码\" />\n            </FormItem>\n          </Col>\n          <Col span={8}>\n            <Button\n              size=\"large\"\n              disabled={!!count}\n              className={styles.getCaptcha}\n              onClick={onGetCaptcha}\n            >\n              {count ? `${count} s` : '获取验证码'}\n            </Button>\n          </Col>\n        </Row>\n        <FormItem>\n          <div className={styles.footer}>\n            <Button\n              size=\"large\"\n              loading={submitting}\n              className={styles.submit}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              <span>注册</span>\n            </Button>\n            <Link to=\"/user/login\">\n              <span>使用已有账户登录</span>\n            </Link>\n          </div>\n        </FormItem>\n      </Form>\n    </div>\n  );\n};\nexport default Register;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/user/register/index.tsx"
    },
    "6": {
      "path": "/user/*",
      "file": "@/pages/404.tsx",
      "parentId": "1",
      "id": "6",
      "absPath": "/user/*",
      "__content": "import { history, useIntl } from '@umijs/max';\nimport { Button, Result } from 'antd';\nimport React from 'react';\n\nconst NoFoundPage: React.FC = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle={useIntl().formatMessage({ id: 'pages.404.subTitle' })}\n    extra={\n      <Button type=\"primary\" onClick={() => history.push('/')}>\n        {useIntl().formatMessage({ id: 'pages.404.buttonText' })}\n      </Button>\n    }\n  />\n);\n\nexport default NoFoundPage;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/404.tsx"
    },
    "7": {
      "path": "/dashboard",
      "name": "dashboard",
      "icon": "dashboard",
      "parentId": "ant-design-pro-layout",
      "id": "7",
      "absPath": "/dashboard"
    },
    "8": {
      "path": "/dashboard",
      "redirect": "/dashboard/analysis",
      "parentId": "7",
      "id": "8",
      "absPath": "/dashboard"
    },
    "9": {
      "name": "analysis",
      "icon": "smile",
      "path": "/dashboard/analysis",
      "file": "@/pages/dashboard/analysis/index.tsx",
      "parentId": "7",
      "id": "9",
      "absPath": "/dashboard/analysis",
      "__content": "import { EllipsisOutlined } from '@ant-design/icons';\nimport { GridContent } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Col, Dropdown, Row } from 'antd';\nimport type { RangePickerProps } from 'antd/es/date-picker/generatePicker';\nimport type { RadioChangeEvent } from 'antd/es/radio';\nimport type dayjs from 'dayjs';\nimport type { FC } from 'react';\nimport { Suspense, useState } from 'react';\nimport IntroduceRow from './components/IntroduceRow';\nimport OfflineData from './components/OfflineData';\nimport PageLoading from './components/PageLoading';\nimport ProportionSales from './components/ProportionSales';\nimport type { TimeType } from './components/SalesCard';\nimport SalesCard from './components/SalesCard';\nimport TopSearch from './components/TopSearch';\nimport type { AnalysisData } from './data.d';\nimport { fakeChartData } from './service';\nimport useStyles from './style.style';\nimport { getTimeDistance } from './utils/utils';\ntype RangePickerValue = RangePickerProps<dayjs.Dayjs>['value'];\ntype AnalysisProps = {\n  dashboardAndanalysis: AnalysisData;\n  loading: boolean;\n};\ntype SalesType = 'all' | 'online' | 'stores';\nconst Analysis: FC<AnalysisProps> = () => {\n  const { styles } = useStyles();\n  const [salesType, setSalesType] = useState<SalesType>('all');\n  const [currentTabKey, setCurrentTabKey] = useState<string>('');\n  const [rangePickerValue, setRangePickerValue] = useState<RangePickerValue>(\n    getTimeDistance('year'),\n  );\n  const { loading, data } = useRequest(fakeChartData);\n  const selectDate = (type: TimeType) => {\n    setRangePickerValue(getTimeDistance(type));\n  };\n  const handleRangePickerChange = (value: RangePickerValue) => {\n    setRangePickerValue(value);\n  };\n  const isActive = (type: TimeType) => {\n    if (!rangePickerValue) {\n      return '';\n    }\n    const value = getTimeDistance(type);\n    if (!value) {\n      return '';\n    }\n    if (!rangePickerValue[0] || !rangePickerValue[1]) {\n      return '';\n    }\n    if (\n      rangePickerValue[0].isSame(value[0] as dayjs.Dayjs, 'day') &&\n      rangePickerValue[1].isSame(value[1] as dayjs.Dayjs, 'day')\n    ) {\n      return styles.currentDate;\n    }\n    return '';\n  };\n\n  let salesPieData;\n\n  if (salesType === 'all') {\n    salesPieData = data?.salesTypeData;\n  } else {\n    salesPieData = salesType === 'online' ? data?.salesTypeDataOnline : data?.salesTypeDataOffline;\n  }\n\n  const dropdownGroup = (\n    <span className={styles.iconGroup}>\n      <Dropdown\n        menu={{\n          items: [\n            {\n              key: '1',\n              label: '操作一',\n            },\n            {\n              key: '2',\n              label: '操作二',\n            },\n          ],\n        }}\n        placement=\"bottomRight\"\n      >\n        <EllipsisOutlined />\n      </Dropdown>\n    </span>\n  );\n  const handleChangeSalesType = (e: RadioChangeEvent) => {\n    setSalesType(e.target.value);\n  };\n  const handleTabChange = (key: string) => {\n    setCurrentTabKey(key);\n  };\n  const activeKey = currentTabKey || (data?.offlineData[0] && data?.offlineData[0].name) || '';\n  return (\n    <GridContent>\n      <>\n        <Suspense fallback={<PageLoading />}>\n          <IntroduceRow loading={loading} visitData={data?.visitData || []} />\n        </Suspense>\n\n        <Suspense fallback={null}>\n          <SalesCard\n            rangePickerValue={rangePickerValue}\n            salesData={data?.salesData || []}\n            isActive={isActive}\n            handleRangePickerChange={handleRangePickerChange}\n            loading={loading}\n            selectDate={selectDate}\n          />\n        </Suspense>\n\n        <Row\n          gutter={24}\n          style={{\n            marginTop: 24,\n          }}\n        >\n          <Col xl={12} lg={24} md={24} sm={24} xs={24}>\n            <Suspense fallback={null}>\n              <TopSearch\n                loading={loading}\n                visitData2={data?.visitData2 || []}\n                searchData={data?.searchData || []}\n                dropdownGroup={dropdownGroup}\n              />\n            </Suspense>\n          </Col>\n          <Col xl={12} lg={24} md={24} sm={24} xs={24}>\n            <Suspense fallback={null}>\n              <ProportionSales\n                dropdownGroup={dropdownGroup}\n                salesType={salesType}\n                loading={loading}\n                salesPieData={salesPieData || []}\n                handleChangeSalesType={handleChangeSalesType}\n              />\n            </Suspense>\n          </Col>\n        </Row>\n\n        <Suspense fallback={null}>\n          <OfflineData\n            activeKey={activeKey}\n            loading={loading}\n            offlineData={data?.offlineData || []}\n            offlineChartData={data?.offlineChartData || []}\n            handleTabChange={handleTabChange}\n          />\n        </Suspense>\n      </>\n    </GridContent>\n  );\n};\nexport default Analysis;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/dashboard/analysis/index.tsx"
    },
    "10": {
      "name": "monitor",
      "icon": "smile",
      "path": "/dashboard/monitor",
      "file": "@/pages/dashboard/monitor/index.tsx",
      "parentId": "7",
      "id": "10",
      "absPath": "/dashboard/monitor",
      "__content": "import { Gauge, Liquid, WordCloud } from '@ant-design/plots';\nimport { GridContent } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Card, Col, Progress, Row, Statistic } from 'antd';\nimport numeral from 'numeral';\nimport type { FC } from 'react';\nimport ActiveChart from './components/ActiveChart';\nimport Map from './components/Map';\nimport { queryTags } from './service';\nimport useStyles from './style.style';\n\nconst { Countdown } = Statistic;\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\n\nconst Monitor: FC = () => {\n  const { styles } = useStyles();\n  const { loading, data } = useRequest(queryTags);\n  const wordCloudData = (data?.list || []).map((item) => {\n    return {\n      id: +Date.now(),\n      word: item.name,\n      weight: item.value,\n    };\n  });\n  return (\n    <GridContent>\n      <>\n        <Row gutter={24}>\n          <Col\n            xl={18}\n            lg={24}\n            md={24}\n            sm={24}\n            xs={24}\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Card title=\"活动实时交易情况\" bordered={false}>\n              <Row>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic\n                    title=\"今日交易总额\"\n                    suffix=\"元\"\n                    value={numeral(124543233).format('0,0')}\n                  />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic title=\"销售目标完成率\" value=\"92%\" />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Countdown title=\"活动剩余时间\" value={deadline} format=\"HH:mm:ss:SSS\" />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic title=\"每秒交易总额\" suffix=\"元\" value={numeral(234).format('0,0')} />\n                </Col>\n              </Row>\n              <div className={styles.mapChart}>\n                <Map />\n              </div>\n            </Card>\n          </Col>\n          <Col xl={6} lg={24} md={24} sm={24} xs={24}>\n            <Card\n              title=\"活动情况预测\"\n              style={{\n                marginBottom: 24,\n              }}\n              bordered={false}\n            >\n              <ActiveChart />\n            </Card>\n            <Card\n              title=\"券核效率\"\n              style={{\n                marginBottom: 24,\n              }}\n              bodyStyle={{\n                textAlign: 'center',\n              }}\n              bordered={false}\n            >\n              <Gauge\n                height={180}\n                data={\n                  {\n                    target: 80,\n                    total: 100,\n                    name: 'score',\n                    thresholds: [20, 40, 60, 80, 100],\n                  } as any\n                }\n                padding={-16}\n                style={{\n                  textContent: () => '优',\n                }}\n                meta={{\n                  color: {\n                    range: ['#6395FA', '#62DAAB', '#657798', '#F7C128', '#1F8718'],\n                  },\n                }}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col\n            xl={12}\n            lg={24}\n            sm={24}\n            xs={24}\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Card title=\"各品类占比\" bordered={false}>\n              <Row\n                style={{\n                  padding: '16px 0',\n                }}\n              >\n                <Col span={8}>\n                  <Progress type=\"dashboard\" percent={75} />\n                </Col>\n                <Col span={8}>\n                  <Progress type=\"dashboard\" percent={48} />\n                </Col>\n                <Col span={8}>\n                  <Progress type=\"dashboard\" percent={33} />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col\n            xl={6}\n            lg={12}\n            sm={24}\n            xs={24}\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Card\n              title=\"热门搜索\"\n              loading={loading}\n              bordered={false}\n              bodyStyle={{\n                overflow: 'hidden',\n              }}\n            >\n              <WordCloud\n                data={wordCloudData}\n                height={162}\n                textField=\"word\"\n                colorField=\"word\"\n                layout={{ spiral: 'rectangular', fontSize: [10, 20] }}\n              />\n            </Card>\n          </Col>\n          <Col\n            xl={6}\n            lg={12}\n            sm={24}\n            xs={24}\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Card\n              title=\"资源剩余\"\n              bodyStyle={{\n                textAlign: 'center',\n                fontSize: 0,\n              }}\n              bordered={false}\n            >\n              <Liquid height={160} percent={0.35} />\n            </Card>\n          </Col>\n        </Row>\n      </>\n    </GridContent>\n  );\n};\nexport default Monitor;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/dashboard/monitor/index.tsx"
    },
    "11": {
      "name": "workplace",
      "icon": "smile",
      "path": "/dashboard/workplace",
      "file": "@/pages/dashboard/workplace/index.tsx",
      "parentId": "7",
      "id": "11",
      "absPath": "/dashboard/workplace",
      "__content": "import { Radar } from '@ant-design/plots';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { Link, useRequest } from '@umijs/max';\nimport { Avatar, Card, Col, List, Row, Skeleton, Statistic } from 'antd';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport type { FC } from 'react';\nimport EditableLinkGroup from './components/EditableLinkGroup';\nimport type { ActivitiesType, CurrentUser } from './data.d';\nimport { fakeChartData, queryActivities, queryProjectNotice } from './service';\nimport useStyles from './style.style';\ndayjs.extend(relativeTime);\n\nconst links = [\n  {\n    title: '操作一',\n    href: '',\n  },\n  {\n    title: '操作二',\n    href: '',\n  },\n  {\n    title: '操作三',\n    href: '',\n  },\n  {\n    title: '操作四',\n    href: '',\n  },\n  {\n    title: '操作五',\n    href: '',\n  },\n  {\n    title: '操作六',\n    href: '',\n  },\n];\nconst PageHeaderContent: FC<{\n  currentUser: Partial<CurrentUser>;\n}> = ({ currentUser }) => {\n  const { styles } = useStyles();\n  const loading = currentUser && Object.keys(currentUser).length;\n  if (!loading) {\n    return (\n      <Skeleton\n        avatar\n        paragraph={{\n          rows: 1,\n        }}\n        active\n      />\n    );\n  }\n  return (\n    <div className={styles.pageHeaderContent}>\n      <div className={styles.avatar}>\n        <Avatar size=\"large\" src={currentUser.avatar} />\n      </div>\n      <div className={styles.content}>\n        <div className={styles.contentTitle}>\n          早安，\n          {currentUser.name}\n          ，祝你开心每一天！\n        </div>\n        <div>\n          {currentUser.title} |{currentUser.group}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst ExtraContent: FC<Record<string, any>> = () => {\n  const { styles } = useStyles();\n  return (\n    <div className={styles.extraContent}>\n      <div className={styles.statItem}>\n        <Statistic title=\"项目数\" value={56} />\n      </div>\n      <div className={styles.statItem}>\n        <Statistic title=\"团队内排名\" value={8} suffix=\"/ 24\" />\n      </div>\n      <div className={styles.statItem}>\n        <Statistic title=\"项目访问\" value={2223} />\n      </div>\n    </div>\n  );\n};\nconst Workplace: FC = () => {\n  const { styles } = useStyles();\n  const { loading: projectLoading, data: projectNotice = [] } = useRequest(queryProjectNotice);\n  const { loading: activitiesLoading, data: activities = [] } = useRequest(queryActivities);\n  const { data } = useRequest(fakeChartData);\n  const renderActivities = (item: ActivitiesType) => {\n    const events = item.template.split(/@\\{([^{}]*)\\}/gi).map((key) => {\n      if (item[key as keyof ActivitiesType]) {\n        const value = item[key as 'user'];\n        return (\n          <a href={value?.link} key={value?.name}>\n            {value.name}\n          </a>\n        );\n      }\n      return key;\n    });\n    return (\n      <List.Item key={item.id}>\n        <List.Item.Meta\n          avatar={<Avatar src={item.user.avatar} />}\n          title={\n            <span>\n              <a className={styles.username}>{item.user.name}</a>\n              &nbsp;\n              <span className={styles.event}>{events}</span>\n            </span>\n          }\n          description={\n            <span className={styles.datetime} title={item.updatedAt}>\n              {dayjs(item.updatedAt).fromNow()}\n            </span>\n          }\n        />\n      </List.Item>\n    );\n  };\n\n  return (\n    <PageContainer\n      content={\n        <PageHeaderContent\n          currentUser={{\n            avatar: 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png',\n            name: '吴彦祖',\n            userid: '00000001',\n            email: 'antdesign@alipay.com',\n            signature: '海纳百川，有容乃大',\n            title: '交互专家',\n            group: '蚂蚁金服－某某某事业群－某某平台部－某某技术部－UED',\n          }}\n        />\n      }\n      extraContent={<ExtraContent />}\n    >\n      <Row gutter={24}>\n        <Col xl={16} lg={24} md={24} sm={24} xs={24}>\n          <Card\n            className={styles.projectList}\n            style={{\n              marginBottom: 24,\n            }}\n            title=\"进行中的项目\"\n            bordered={false}\n            extra={<Link to=\"/\">全部项目</Link>}\n            loading={projectLoading}\n            bodyStyle={{\n              padding: 0,\n            }}\n          >\n            {projectNotice.map((item) => (\n              <Card.Grid className={styles.projectGrid} key={item.id}>\n                <Card\n                  bodyStyle={{\n                    padding: 0,\n                  }}\n                  bordered={false}\n                >\n                  <Card.Meta\n                    title={\n                      <div className={styles.cardTitle}>\n                        <Avatar size=\"small\" src={item.logo} />\n                        <Link to={item.href || '/'}>{item.title}</Link>\n                      </div>\n                    }\n                    description={item.description}\n                  />\n                  <div className={styles.projectItemContent}>\n                    <Link to={item.memberLink || '/'}>{item.member || ''}</Link>\n                    {item.updatedAt && (\n                      <span className={styles.datetime} title={item.updatedAt}>\n                        {dayjs(item.updatedAt).fromNow()}\n                      </span>\n                    )}\n                  </div>\n                </Card>\n              </Card.Grid>\n            ))}\n          </Card>\n          <Card\n            bodyStyle={{\n              padding: 0,\n            }}\n            bordered={false}\n            className={styles.activeCard}\n            title=\"动态\"\n            loading={activitiesLoading}\n          >\n            <List<ActivitiesType>\n              loading={activitiesLoading}\n              renderItem={(item) => renderActivities(item)}\n              dataSource={activities}\n              className={styles.activitiesList}\n              size=\"large\"\n            />\n          </Card>\n        </Col>\n        <Col xl={8} lg={24} md={24} sm={24} xs={24}>\n          <Card\n            style={{\n              marginBottom: 24,\n            }}\n            title=\"快速开始 / 便捷导航\"\n            bordered={false}\n            bodyStyle={{\n              padding: 0,\n            }}\n          >\n            <EditableLinkGroup onAdd={() => {}} links={links} linkElement={Link} />\n          </Card>\n          <Card\n            style={{\n              marginBottom: 24,\n            }}\n            bordered={false}\n            title=\"XX 指数\"\n            loading={data?.radarData?.length === 0}\n          >\n            <div>\n              <Radar\n                height={343}\n                data={data?.radarData || []}\n                xField=\"label\"\n                colorField=\"name\"\n                yField=\"value\"\n                shapeField=\"smooth\"\n                area={{\n                  style: {\n                    fillOpacity: 0.4,\n                  },\n                }}\n                axis={{\n                  y: {\n                    gridStrokeOpacity: 0.5,\n                  },\n                }}\n                legend={{\n                  color: {\n                    position: 'bottom',\n                    layout: { justifyContent: 'center' },\n                  },\n                }}\n              />\n            </div>\n          </Card>\n          <Card\n            bodyStyle={{\n              paddingTop: 12,\n              paddingBottom: 12,\n            }}\n            bordered={false}\n            title=\"团队\"\n            loading={projectLoading}\n          >\n            <div className={styles.members}>\n              <Row gutter={48}>\n                {projectNotice.map((item) => {\n                  return (\n                    <Col span={12} key={`members-item-${item.id}`}>\n                      <a>\n                        <Avatar src={item.logo} size=\"small\" />\n                        <span className={styles.member}>{item.member.substring(0, 3)}</span>\n                      </a>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </PageContainer>\n  );\n};\nexport default Workplace;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/dashboard/workplace/index.tsx"
    },
    "12": {
      "path": "/form",
      "icon": "form",
      "name": "form",
      "parentId": "ant-design-pro-layout",
      "id": "12",
      "absPath": "/form"
    },
    "13": {
      "path": "/form",
      "redirect": "/form/basic-form",
      "parentId": "12",
      "id": "13",
      "absPath": "/form"
    },
    "14": {
      "name": "basic-form",
      "icon": "smile",
      "path": "/form/basic-form",
      "file": "@/pages/form/basic-form/index.tsx",
      "parentId": "12",
      "id": "14",
      "absPath": "/form/basic-form",
      "__content": "import {\n  PageContainer,\n  ProForm,\n  ProFormDateRangePicker,\n  ProFormDependency,\n  ProFormDigit,\n  ProFormRadio,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Card, message } from 'antd';\nimport type { FC } from 'react';\nimport { fakeSubmitForm } from './service';\nimport useStyles from './style.style';\nconst BasicForm: FC<Record<string, any>> = () => {\n  const { styles } = useStyles();\n  const { run } = useRequest(fakeSubmitForm, {\n    manual: true,\n    onSuccess: () => {\n      message.success('提交成功');\n    },\n  });\n  const onFinish = async (values: Record<string, any>) => {\n    run(values);\n  };\n  return (\n    <PageContainer content=\"表单页用于向用户收集或验证信息，基础表单常见于数据项较少的表单场景。\">\n      <Card bordered={false}>\n        <ProForm\n          hideRequiredMark\n          style={{\n            margin: 'auto',\n            marginTop: 8,\n            maxWidth: 600,\n          }}\n          name=\"basic\"\n          layout=\"vertical\"\n          initialValues={{\n            public: '1',\n          }}\n          onFinish={onFinish}\n        >\n          <ProFormText\n            width=\"md\"\n            label=\"标题\"\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: '请输入标题',\n              },\n            ]}\n            placeholder=\"给目标起个名字\"\n          />\n          <ProFormDateRangePicker\n            label=\"起止日期\"\n            width=\"md\"\n            name=\"date\"\n            rules={[\n              {\n                required: true,\n                message: '请选择起止日期',\n              },\n            ]}\n            placeholder={['开始日期', '结束日期']}\n          />\n          <ProFormTextArea\n            label=\"目标描述\"\n            width=\"xl\"\n            name=\"goal\"\n            rules={[\n              {\n                required: true,\n                message: '请输入目标描述',\n              },\n            ]}\n            placeholder=\"请输入你的阶段性工作目标\"\n          />\n\n          <ProFormTextArea\n            label=\"衡量标准\"\n            name=\"standard\"\n            width=\"xl\"\n            rules={[\n              {\n                required: true,\n                message: '请输入衡量标准',\n              },\n            ]}\n            placeholder=\"请输入衡量标准\"\n          />\n\n          <ProFormText\n            width=\"md\"\n            label={\n              <span>\n                客户\n                <em className={styles.optional}>（选填）</em>\n              </span>\n            }\n            tooltip=\"目标的服务对象\"\n            name=\"client\"\n            placeholder=\"请描述你服务的客户，内部客户直接 @姓名／工号\"\n          />\n\n          <ProFormText\n            width=\"md\"\n            label={\n              <span>\n                邀评人\n                <em className={styles.optional}>（选填）</em>\n              </span>\n            }\n            name=\"invites\"\n            placeholder=\"请直接 @姓名／工号，最多可邀请 5 人\"\n          />\n\n          <ProFormDigit\n            label={\n              <span>\n                权重\n                <em className={styles.optional}>（选填）</em>\n              </span>\n            }\n            name=\"weight\"\n            placeholder=\"请输入\"\n            min={0}\n            max={100}\n            width=\"xs\"\n            fieldProps={{\n              formatter: (value) => `${value || 0}%`,\n              parser: (value) => Number(value ? value.replace('%', '') : '0'),\n            }}\n          />\n\n          <ProFormRadio.Group\n            options={[\n              {\n                value: '1',\n                label: '公开',\n              },\n              {\n                value: '2',\n                label: '部分公开',\n              },\n              {\n                value: '3',\n                label: '不公开',\n              },\n            ]}\n            label=\"目标公开\"\n            help=\"客户、邀评人默认被分享\"\n            name=\"publicType\"\n          />\n          <ProFormDependency name={['publicType']}>\n            {({ publicType }) => {\n              return (\n                <ProFormSelect\n                  width=\"md\"\n                  name=\"publicUsers\"\n                  fieldProps={{\n                    style: {\n                      margin: '8px 0',\n                      display: publicType && publicType === '2' ? 'block' : 'none',\n                    },\n                  }}\n                  options={[\n                    {\n                      value: '1',\n                      label: '同事甲',\n                    },\n                    {\n                      value: '2',\n                      label: '同事乙',\n                    },\n                    {\n                      value: '3',\n                      label: '同事丙',\n                    },\n                  ]}\n                />\n              );\n            }}\n          </ProFormDependency>\n        </ProForm>\n      </Card>\n    </PageContainer>\n  );\n};\nexport default BasicForm;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/form/basic-form/index.tsx"
    },
    "15": {
      "name": "step-form",
      "icon": "smile",
      "path": "/form/step-form",
      "file": "@/pages/form/step-form/index.tsx",
      "parentId": "12",
      "id": "15",
      "absPath": "/form/step-form",
      "__content": "import {\n  PageContainer,\n  ProForm,\n  ProFormDigit,\n  ProFormSelect,\n  ProFormText,\n  StepsForm,\n} from '@ant-design/pro-components';\nimport type { FormInstance } from 'antd';\nimport { Alert, Button, Card, Descriptions, Divider, Result, Statistic } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport type { StepDataType } from './data.d';\nimport useStyles from './style.style';\nconst StepDescriptions: React.FC<{\n  stepData: StepDataType;\n  bordered?: boolean;\n}> = ({ stepData, bordered }) => {\n  const { payAccount, receiverAccount, receiverName, amount } = stepData;\n  return (\n    <Descriptions column={1} bordered={bordered}>\n      <Descriptions.Item label=\"付款账户\"> {payAccount}</Descriptions.Item>\n      <Descriptions.Item label=\"收款账户\"> {receiverAccount}</Descriptions.Item>\n      <Descriptions.Item label=\"收款人姓名\"> {receiverName}</Descriptions.Item>\n      <Descriptions.Item label=\"转账金额\">\n        <Statistic\n          value={amount}\n          suffix={\n            <span\n              style={{\n                fontSize: 14,\n              }}\n            >\n              元\n            </span>\n          }\n          precision={2}\n        />\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\nconst StepResult: React.FC<{\n  onFinish: () => Promise<void>;\n  children?: React.ReactNode;\n}> = (props) => {\n  const { styles } = useStyles();\n  return (\n    <Result\n      status=\"success\"\n      title=\"操作成功\"\n      subTitle=\"预计两小时内到账\"\n      extra={\n        <>\n          <Button type=\"primary\" onClick={props.onFinish}>\n            再转一笔\n          </Button>\n          <Button>查看账单</Button>\n        </>\n      }\n      className={styles.result}\n    >\n      {props.children}\n    </Result>\n  );\n};\nconst StepForm: React.FC<Record<string, any>> = () => {\n  const { styles } = useStyles();\n  const [stepData, setStepData] = useState<StepDataType>({\n    payAccount: 'ant-design@alipay.com',\n    receiverAccount: 'test@example.com',\n    receiverName: 'Alex',\n    amount: '500',\n    receiverMode: 'alipay',\n  });\n  const [current, setCurrent] = useState(0);\n  const formRef = useRef<FormInstance>();\n  return (\n    <PageContainer content=\"将一个冗长或用户不熟悉的表单任务分成多个步骤，指导用户完成。\">\n      <Card bordered={false}>\n        <StepsForm\n          current={current}\n          onCurrentChange={setCurrent}\n          submitter={{\n            render: (props, dom) => {\n              if (props.step === 2) {\n                return null;\n              }\n              return dom;\n            },\n          }}\n        >\n          <StepsForm.StepForm<StepDataType>\n            formRef={formRef}\n            title=\"填写转账信息\"\n            initialValues={stepData}\n            onFinish={async (values) => {\n              setStepData(values);\n              return true;\n            }}\n          >\n            <ProFormSelect\n              label=\"付款账户\"\n              width=\"md\"\n              name=\"payAccount\"\n              rules={[\n                {\n                  required: true,\n                  message: '请选择付款账户',\n                },\n              ]}\n              valueEnum={{\n                'ant-design@alipay.com': 'ant-design@alipay.com',\n              }}\n            />\n\n            <ProForm.Group title=\"收款账户\" size={8}>\n              <ProFormSelect\n                name=\"receiverMode\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择付款账户',\n                  },\n                ]}\n                valueEnum={{\n                  alipay: '支付宝',\n                  bank: '银行账户',\n                }}\n              />\n              <ProFormText\n                name=\"receiverAccount\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入收款人账户',\n                  },\n                  {\n                    type: 'email',\n                    message: '账户名应为邮箱格式',\n                  },\n                ]}\n                placeholder=\"test@example.com\"\n              />\n            </ProForm.Group>\n            <ProFormText\n              label=\"收款人姓名\"\n              width=\"md\"\n              name=\"receiverName\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入收款人姓名',\n                },\n              ]}\n              placeholder=\"请输入收款人姓名\"\n            />\n            <ProFormDigit\n              label=\"转账金额\"\n              name=\"amount\"\n              width=\"md\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入转账金额',\n                },\n                {\n                  pattern: /^(\\d+)((?:\\.\\d+)?)$/,\n                  message: '请输入合法金额数字',\n                },\n              ]}\n              placeholder=\"请输入金额\"\n              fieldProps={{\n                prefix: '￥',\n              }}\n            />\n          </StepsForm.StepForm>\n\n          <StepsForm.StepForm title=\"确认转账信息\">\n            <div className={styles.result}>\n              <Alert\n                closable\n                showIcon\n                message=\"确认转账后，资金将直接打入对方账户，无法退回。\"\n                style={{\n                  marginBottom: 24,\n                }}\n              />\n              <StepDescriptions stepData={stepData} bordered />\n              <Divider\n                style={{\n                  margin: '24px 0',\n                }}\n              />\n              <ProFormText.Password\n                label=\"支付密码\"\n                width=\"md\"\n                name=\"password\"\n                required={false}\n                rules={[\n                  {\n                    required: true,\n                    message: '需要支付密码才能进行支付',\n                  },\n                ]}\n              />\n            </div>\n          </StepsForm.StepForm>\n          <StepsForm.StepForm title=\"完成\">\n            <StepResult\n              onFinish={async () => {\n                setCurrent(0);\n                formRef.current?.resetFields();\n              }}\n            >\n              <StepDescriptions stepData={stepData} />\n            </StepResult>\n          </StepsForm.StepForm>\n        </StepsForm>\n        <Divider\n          style={{\n            margin: '40px 0 24px',\n          }}\n        />\n        <div>\n          <h3>说明</h3>\n          <h4>转账到支付宝账户</h4>\n          <p>\n            如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。\n          </p>\n          <h4>转账到银行卡</h4>\n          <p>\n            如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。\n          </p>\n        </div>\n      </Card>\n    </PageContainer>\n  );\n};\nexport default StepForm;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/form/step-form/index.tsx"
    },
    "16": {
      "name": "advanced-form",
      "icon": "smile",
      "path": "/form/advanced-form",
      "file": "@/pages/form/advanced-form/index.tsx",
      "parentId": "12",
      "id": "16",
      "absPath": "/form/advanced-form",
      "__content": "import { CloseCircleOutlined } from '@ant-design/icons';\nimport type { ProColumnType } from '@ant-design/pro-components';\nimport {\n  EditableProTable,\n  FooterToolbar,\n  PageContainer,\n  ProForm,\n  ProFormDateRangePicker,\n  ProFormSelect,\n  ProFormText,\n  ProFormTimePicker,\n} from '@ant-design/pro-components';\nimport { Card, Col, message, Popover, Row } from 'antd';\nimport type { FC } from 'react';\nimport { useState } from 'react';\nimport { fakeSubmitForm } from './service';\nimport useStyles from './style.style';\ninterface TableFormDateType {\n  key: string;\n  workId?: string;\n  name?: string;\n  department?: string;\n  isNew?: boolean;\n  editable?: boolean;\n}\ntype InternalNamePath = (string | number)[];\nconst fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型',\n};\nconst tableData = [\n  {\n    key: '1',\n    workId: '00001',\n    name: 'John Brown',\n    department: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    workId: '00002',\n    name: 'Jim Green',\n    department: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    workId: '00003',\n    name: 'Joe Black',\n    department: 'Sidney No. 1 Lake Park',\n  },\n];\ninterface ErrorField {\n  name: InternalNamePath;\n  errors: string[];\n}\nconst AdvancedForm: FC<Record<string, any>> = () => {\n  const { styles } = useStyles();\n  const [error, setError] = useState<ErrorField[]>([]);\n  const getErrorInfo = (errors: ErrorField[]) => {\n    const errorCount = errors.filter((item) => item.errors.length > 0).length;\n    if (!errors || errorCount === 0) {\n      return null;\n    }\n    const scrollToField = (fieldKey: string) => {\n      const labelNode = document.querySelector(`label[for=\"${fieldKey}\"]`);\n      if (labelNode) {\n        labelNode.scrollIntoView(true);\n      }\n    };\n    const errorList = errors.map((err) => {\n      if (!err || err.errors.length === 0) {\n        return null;\n      }\n      const key = err.name[0] as 'name' | 'url' | 'owner' | 'approver' | 'dateRange' | 'type';\n      return (\n        <li key={key} className={styles.errorListItem} onClick={() => scrollToField(key)}>\n          <CloseCircleOutlined className={styles.errorIcon} />\n          <div className={styles.errorMessage}>{err.errors[0]}</div>\n          <div className={styles.errorField}>{fieldLabels[key]}</div>\n        </li>\n      );\n    });\n    return (\n      <span className={styles.errorIcon}>\n        <Popover\n          title=\"表单校验信息\"\n          content={errorList}\n          overlayClassName={styles.errorPopover}\n          trigger=\"click\"\n          getPopupContainer={(trigger: HTMLElement) => {\n            if (trigger && trigger.parentNode) {\n              return trigger.parentNode as HTMLElement;\n            }\n            return trigger;\n          }}\n        >\n          <CloseCircleOutlined />\n        </Popover>\n        {errorCount}\n      </span>\n    );\n  };\n  const onFinish = async (values: Record<string, any>) => {\n    setError([]);\n    try {\n      await fakeSubmitForm(values);\n      message.success('提交成功');\n    } catch {\n      // console.log\n    }\n  };\n  const onFinishFailed = (errorInfo: any) => {\n    setError(errorInfo.errorFields);\n  };\n  const columns: ProColumnType<TableFormDateType>[] = [\n    {\n      title: '成员姓名',\n      dataIndex: 'name',\n      key: 'name',\n      width: '20%',\n    },\n    {\n      title: '工号',\n      dataIndex: 'workId',\n      key: 'workId',\n      width: '20%',\n    },\n    {\n      title: '所属部门',\n      dataIndex: 'department',\n      key: 'department',\n      width: '40%',\n    },\n    {\n      title: '操作',\n      key: 'action',\n      valueType: 'option',\n      render: (_, record: TableFormDateType, index, action) => {\n        return [\n          <a\n            key=\"eidit\"\n            onClick={() => {\n              action?.startEditable(record.key);\n            }}\n          >\n            编辑\n          </a>,\n        ];\n      },\n    },\n  ];\n  return (\n    <ProForm\n      layout=\"vertical\"\n      hideRequiredMark\n      submitter={{\n        render: (props, dom) => {\n          return (\n            <FooterToolbar>\n              {getErrorInfo(error)}\n              {dom}\n            </FooterToolbar>\n          );\n        },\n      }}\n      initialValues={{\n        members: tableData,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <PageContainer content=\"高级表单常见于一次性输入和提交大批量数据的场景。\">\n        <Card title=\"仓库管理\" className={styles.card} bordered={false}>\n          <Row gutter={16}>\n            <Col lg={6} md={12} sm={24}>\n              <ProFormText\n                label={fieldLabels.name}\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入仓库名称',\n                  },\n                ]}\n                placeholder=\"请输入仓库名称\"\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 6,\n                offset: 2,\n              }}\n              lg={{\n                span: 8,\n              }}\n              md={{\n                span: 12,\n              }}\n              sm={24}\n            >\n              <ProFormText\n                label={fieldLabels.url}\n                name=\"url\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ]}\n                fieldProps={{\n                  style: {\n                    width: '100%',\n                  },\n                  addonBefore: 'http://',\n                  addonAfter: '.com',\n                }}\n                placeholder=\"请输入\"\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 8,\n                offset: 2,\n              }}\n              lg={{\n                span: 10,\n              }}\n              md={{\n                span: 24,\n              }}\n              sm={24}\n            >\n              <ProFormSelect\n                label={fieldLabels.owner}\n                name=\"owner\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择管理员',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '付晓晓',\n                    value: 'xiao',\n                  },\n                  {\n                    label: '周毛毛',\n                    value: 'mao',\n                  },\n                ]}\n                placeholder=\"请选择管理员\"\n              />\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col lg={6} md={12} sm={24}>\n              <ProFormSelect\n                label={fieldLabels.approver}\n                name=\"approver\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择审批员',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '付晓晓',\n                    value: 'xiao',\n                  },\n                  {\n                    label: '周毛毛',\n                    value: 'mao',\n                  },\n                ]}\n                placeholder=\"请选择审批员\"\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 6,\n                offset: 2,\n              }}\n              lg={{\n                span: 8,\n              }}\n              md={{\n                span: 12,\n              }}\n              sm={24}\n            >\n              <ProFormDateRangePicker\n                label={fieldLabels.dateRange}\n                name=\"dateRange\"\n                fieldProps={{\n                  style: {\n                    width: '100%',\n                  },\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择生效日期',\n                  },\n                ]}\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 8,\n                offset: 2,\n              }}\n              lg={{\n                span: 10,\n              }}\n              md={{\n                span: 24,\n              }}\n              sm={24}\n            >\n              <ProFormSelect\n                label={fieldLabels.type}\n                name=\"type\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择仓库类型',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '私密',\n                    value: 'private',\n                  },\n                  {\n                    label: '公开',\n                    value: 'public',\n                  },\n                ]}\n                placeholder=\"请选择仓库类型\"\n              />\n            </Col>\n          </Row>\n        </Card>\n        <Card title=\"任务管理\" className={styles.card} bordered={false}>\n          <Row gutter={16}>\n            <Col lg={6} md={12} sm={24}>\n              <ProFormText\n                label={fieldLabels.name2}\n                name=\"name2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入',\n                  },\n                ]}\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 6,\n                offset: 2,\n              }}\n              lg={{\n                span: 8,\n              }}\n              md={{\n                span: 12,\n              }}\n              sm={24}\n            >\n              <ProFormText\n                label={fieldLabels.url2}\n                name=\"url2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择',\n                  },\n                ]}\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 8,\n                offset: 2,\n              }}\n              lg={{\n                span: 10,\n              }}\n              md={{\n                span: 24,\n              }}\n              sm={24}\n            >\n              <ProFormSelect\n                label={fieldLabels.owner2}\n                name=\"owner2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择管理员',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '付晓晓',\n                    value: 'xiao',\n                  },\n                  {\n                    label: '周毛毛',\n                    value: 'mao',\n                  },\n                ]}\n              />\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col lg={6} md={12} sm={24}>\n              <ProFormSelect\n                label={fieldLabels.approver2}\n                name=\"approver2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择审批员',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '付晓晓',\n                    value: 'xiao',\n                  },\n                  {\n                    label: '周毛毛',\n                    value: 'mao',\n                  },\n                ]}\n                placeholder=\"请选择审批员\"\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 6,\n                offset: 2,\n              }}\n              lg={{\n                span: 8,\n              }}\n              md={{\n                span: 12,\n              }}\n              sm={24}\n            >\n              <ProFormTimePicker\n                label={fieldLabels.dateRange2}\n                name=\"dateRange2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入',\n                  },\n                ]}\n                placeholder=\"提醒时间\"\n                fieldProps={{\n                  style: {\n                    width: '100%',\n                  },\n                }}\n              />\n            </Col>\n            <Col\n              xl={{\n                span: 8,\n                offset: 2,\n              }}\n              lg={{\n                span: 10,\n              }}\n              md={{\n                span: 24,\n              }}\n              sm={24}\n            >\n              <ProFormSelect\n                label={fieldLabels.type2}\n                name=\"type2\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请选择仓库类型',\n                  },\n                ]}\n                options={[\n                  {\n                    label: '私密',\n                    value: 'private',\n                  },\n                  {\n                    label: '公开',\n                    value: 'public',\n                  },\n                ]}\n                placeholder=\"请选择仓库类型\"\n              />\n            </Col>\n          </Row>\n        </Card>\n        <Card title=\"成员管理\" bordered={false}>\n          <ProForm.Item name=\"members\">\n            <EditableProTable<TableFormDateType>\n              recordCreatorProps={{\n                record: () => {\n                  return {\n                    key: `0${Date.now()}`,\n                  };\n                },\n              }}\n              columns={columns}\n              rowKey=\"key\"\n            />\n          </ProForm.Item>\n        </Card>\n      </PageContainer>\n    </ProForm>\n  );\n};\nexport default AdvancedForm;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/form/advanced-form/index.tsx"
    },
    "17": {
      "path": "/list",
      "icon": "table",
      "name": "list",
      "parentId": "ant-design-pro-layout",
      "id": "17",
      "absPath": "/list"
    },
    "18": {
      "path": "/list/search",
      "name": "search-list",
      "file": "@/pages/list/search/index.tsx",
      "parentId": "17",
      "id": "18",
      "absPath": "/list/search",
      "__content": "import { PageContainer } from '@ant-design/pro-components';\nimport { history, Outlet, useLocation, useMatch } from '@umijs/max';\nimport { Input } from 'antd';\nimport type { FC } from 'react';\n\ntype SearchProps = {\n  children?: React.ReactNode;\n};\n\nconst tabList = [\n  {\n    key: 'articles',\n    tab: '文章',\n  },\n  {\n    key: 'projects',\n    tab: '项目',\n  },\n  {\n    key: 'applications',\n    tab: '应用',\n  },\n];\n\nconst Search: FC<SearchProps> = () => {\n  const location = useLocation();\n  let match = useMatch(location.pathname);\n  const handleTabChange = (key: string) => {\n    const url =\n      match?.pathname === '/' ? '' : match?.pathname.substring(0, match.pathname.lastIndexOf('/'));\n    switch (key) {\n      case 'articles':\n        history.push(`${url}/articles`);\n        break;\n      case 'applications':\n        history.push(`${url}/applications`);\n        break;\n      case 'projects':\n        history.push(`${url}/projects`);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = (value: string) => {\n    // eslint-disable-next-line no-console\n    console.log(value);\n  };\n\n  const getTabKey = () => {\n    const tabKey = location.pathname.substring(location.pathname.lastIndexOf('/') + 1);\n    if (tabKey && tabKey !== '/') {\n      return tabKey;\n    }\n    return 'articles';\n  };\n\n  return (\n    <PageContainer\n      content={\n        <div style={{ textAlign: 'center' }}>\n          <Input.Search\n            placeholder=\"请输入\"\n            enterButton=\"搜索\"\n            size=\"large\"\n            onSearch={handleFormSubmit}\n            style={{ maxWidth: 522, width: '100%' }}\n          />\n        </div>\n      }\n      tabList={tabList}\n      tabActiveKey={getTabKey()}\n      onTabChange={handleTabChange}\n    >\n      <Outlet />\n    </PageContainer>\n  );\n};\n\nexport default Search;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/search/index.tsx"
    },
    "19": {
      "path": "/list/search",
      "redirect": "/list/search/articles",
      "parentId": "18",
      "id": "19",
      "absPath": "/list/search"
    },
    "20": {
      "name": "articles",
      "icon": "smile",
      "path": "/list/search/articles",
      "file": "@/pages/list/search/articles/index.tsx",
      "parentId": "18",
      "id": "20",
      "absPath": "/list/search/articles",
      "__content": "import { LikeOutlined, LoadingOutlined, MessageOutlined, StarOutlined } from '@ant-design/icons';\nimport { useRequest } from '@umijs/max';\nimport { Button, Card, Col, Form, List, Row, Select, Tag } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport type { FC } from 'react';\nimport React, { useMemo } from 'react';\nimport { categoryOptions } from '../../mock';\nimport ArticleListContent from './components/ArticleListContent';\nimport StandardFormRow from './components/StandardFormRow';\nimport TagSelect from './components/TagSelect';\nimport type { ListItemDataType } from './data.d';\nimport { queryFakeList } from './service';\nimport useStyles from './style.style';\n\nconst FormItem = Form.Item;\n\nconst pageSize = 5;\n\nconst Articles: FC = () => {\n  const [form] = Form.useForm();\n\n  const { styles } = useStyles();\n\n  const { data, reload, loading, loadMore, loadingMore } = useRequest(\n    () => {\n      return queryFakeList({\n        count: pageSize,\n      });\n    },\n    {\n      loadMore: true,\n    },\n  );\n\n  const list = data?.list || [];\n\n  const setOwner = () => {\n    form.setFieldsValue({\n      owner: ['wzj'],\n    });\n  };\n\n  const owners = [\n    {\n      id: 'wzj',\n      name: '我自己',\n    },\n    {\n      id: 'wjh',\n      name: '吴家豪',\n    },\n    {\n      id: 'zxx',\n      name: '周星星',\n    },\n    {\n      id: 'zly',\n      name: '赵丽颖',\n    },\n    {\n      id: 'ym',\n      name: '姚明',\n    },\n  ];\n\n  const IconText: React.FC<{\n    type: string;\n    text: React.ReactNode;\n  }> = ({ type, text }) => {\n    switch (type) {\n      case 'star-o':\n        return (\n          <span>\n            <StarOutlined style={{ marginRight: 8 }} />\n            {text}\n          </span>\n        );\n      case 'like-o':\n        return (\n          <span>\n            <LikeOutlined style={{ marginRight: 8 }} />\n            {text}\n          </span>\n        );\n      case 'message':\n        return (\n          <span>\n            <MessageOutlined style={{ marginRight: 8 }} />\n            {text}\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const formItemLayout = {\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n      md: { span: 12 },\n    },\n  };\n\n  const loadMoreDom = list.length > 0 && (\n    <div style={{ textAlign: 'center', marginTop: 16 }}>\n      <Button onClick={loadMore} style={{ paddingLeft: 48, paddingRight: 48 }}>\n        {loadingMore ? (\n          <span>\n            <LoadingOutlined /> 加载中...\n          </span>\n        ) : (\n          '加载更多'\n        )}\n      </Button>\n    </div>\n  );\n\n  const ownerOptions = useMemo<DefaultOptionType[]>(\n    () =>\n      owners.map((item) => ({\n        label: item.name,\n        value: item.id,\n      })),\n    [owners],\n  );\n\n  return (\n    <>\n      <Card bordered={false}>\n        <Form\n          layout=\"inline\"\n          form={form}\n          initialValues={{\n            owner: ['wjh', 'zxx'],\n          }}\n          onValuesChange={reload}\n        >\n          <StandardFormRow title=\"所属类目\" block style={{ paddingBottom: 11 }}>\n            <FormItem name=\"category\">\n              <TagSelect expandable>\n                {categoryOptions.map((category) => (\n                  <TagSelect.Option value={category.value!} key={category.value}>\n                    {category.label}\n                  </TagSelect.Option>\n                ))}\n              </TagSelect>\n            </FormItem>\n          </StandardFormRow>\n          <StandardFormRow title=\"owner\" grid>\n            <FormItem name=\"owner\" noStyle>\n              <Select\n                mode=\"multiple\"\n                placeholder=\"选择 owner\"\n                style={{ minWidth: '6rem' }}\n                options={ownerOptions}\n              />\n            </FormItem>\n            <a className={styles.selfTrigger} onClick={setOwner}>\n              只看自己的\n            </a>\n          </StandardFormRow>\n          <StandardFormRow title=\"其它选项\" grid last>\n            <Row gutter={16}>\n              <Col xl={8} lg={10} md={12} sm={24} xs={24}>\n                <FormItem {...formItemLayout} label=\"活跃用户\" name=\"user\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{ maxWidth: 200, width: '100%' }}\n                    options={[\n                      {\n                        label: '李三',\n                        value: 'lisa',\n                      },\n                    ]}\n                  />\n                </FormItem>\n              </Col>\n              <Col xl={8} lg={10} md={12} sm={24} xs={24}>\n                <FormItem {...formItemLayout} label=\"好评度\" name=\"rate\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{ maxWidth: 200, width: '100%' }}\n                    options={[\n                      {\n                        label: '优秀',\n                        value: 'good',\n                      },\n                    ]}\n                  />\n                </FormItem>\n              </Col>\n            </Row>\n          </StandardFormRow>\n        </Form>\n      </Card>\n      <Card\n        style={{ marginTop: 24 }}\n        bordered={false}\n        bodyStyle={{ padding: '8px 32px 32px 32px' }}\n      >\n        <List<ListItemDataType>\n          size=\"large\"\n          loading={loading}\n          rowKey=\"id\"\n          itemLayout=\"vertical\"\n          loadMore={loadMoreDom}\n          dataSource={list}\n          renderItem={(item) => (\n            <List.Item\n              key={item.id}\n              actions={[\n                <IconText key=\"star\" type=\"star-o\" text={item.star} />,\n                <IconText key=\"like\" type=\"like-o\" text={item.like} />,\n                <IconText key=\"message\" type=\"message\" text={item.message} />,\n              ]}\n              extra={<div className={styles.listItemExtra} />}\n            >\n              <List.Item.Meta\n                title={\n                  <a className={styles.listItemMetaTitle} href={item.href}>\n                    {item.title}\n                  </a>\n                }\n                description={\n                  <span>\n                    <Tag>Ant Design</Tag>\n                    <Tag>设计语言</Tag>\n                    <Tag>蚂蚁金服</Tag>\n                  </span>\n                }\n              />\n              <ArticleListContent data={item} />\n            </List.Item>\n          )}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default Articles;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/search/articles/index.tsx"
    },
    "21": {
      "name": "projects",
      "icon": "smile",
      "path": "/list/search/projects",
      "file": "@/pages/list/search/projects/index.tsx",
      "parentId": "18",
      "id": "21",
      "absPath": "/list/search/projects",
      "__content": "import { useRequest } from '@umijs/max';\nimport { Card, Col, Form, List, Row, Select, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport type { FC } from 'react';\nimport { categoryOptions } from '../../mock';\nimport AvatarList from './components/AvatarList';\nimport StandardFormRow from './components/StandardFormRow';\nimport TagSelect from './components/TagSelect';\nimport type { ListItemDataType } from './data.d';\nimport { queryFakeList } from './service';\nimport useStyles from './style.style';\n\ndayjs.extend(relativeTime);\n\nconst FormItem = Form.Item;\nconst { Paragraph } = Typography;\nconst getKey = (id: string, index: number) => `${id}-${index}`;\nconst Projects: FC = () => {\n  const { styles } = useStyles();\n  const { data, loading, run } = useRequest((values: any) => {\n    console.log('form data', values);\n    return queryFakeList({\n      count: 8,\n    });\n  });\n  const list = data?.list || [];\n  const cardList = list && (\n    <List<ListItemDataType>\n      rowKey=\"id\"\n      loading={loading}\n      grid={{\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 3,\n        lg: 3,\n        xl: 4,\n        xxl: 4,\n      }}\n      dataSource={list}\n      renderItem={(item) => (\n        <List.Item>\n          <Card className={styles.card} hoverable cover={<img alt={item.title} src={item.cover} />}>\n            <Card.Meta\n              title={<a>{item.title}</a>}\n              description={\n                <Paragraph\n                  ellipsis={{\n                    rows: 2,\n                  }}\n                >\n                  {item.subDescription}\n                </Paragraph>\n              }\n            />\n            <div className={styles.cardItemContent}>\n              <span>{dayjs(item.updatedAt).fromNow()}</span>\n              <div className={styles.avatarList}>\n                <AvatarList size=\"small\">\n                  {item.members.map((member, i) => (\n                    <AvatarList.Item\n                      key={getKey(item.id, i)}\n                      src={member.avatar}\n                      tips={member.name}\n                    />\n                  ))}\n                </AvatarList>\n              </div>\n            </div>\n          </Card>\n        </List.Item>\n      )}\n    />\n  );\n  const formItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 16,\n      },\n    },\n  };\n  return (\n    <div className={styles.coverCardList}>\n      <Card bordered={false}>\n        <Form\n          layout=\"inline\"\n          onValuesChange={(_, values) => {\n            // 表单项变化时请求数据\n            // 模拟查询表单生效\n            run(values);\n          }}\n        >\n          <StandardFormRow\n            title=\"所属类目\"\n            block\n            style={{\n              paddingBottom: 11,\n            }}\n          >\n            <FormItem name=\"category\">\n              <TagSelect expandable>\n                {categoryOptions.map((category) => (\n                  <TagSelect.Option value={category.value!} key={category.value}>\n                    {category.label}\n                  </TagSelect.Option>\n                ))}\n              </TagSelect>\n            </FormItem>\n          </StandardFormRow>\n          <StandardFormRow title=\"其它选项\" grid last>\n            <Row gutter={16}>\n              <Col lg={8} md={10} sm={10} xs={24}>\n                <FormItem {...formItemLayout} label=\"作者\" name=\"author\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{\n                      maxWidth: 200,\n                      width: '100%',\n                    }}\n                    options={[\n                      {\n                        label: '王昭君',\n                        value: 'lisa',\n                      },\n                    ]}\n                  />\n                </FormItem>\n              </Col>\n              <Col lg={8} md={10} sm={10} xs={24}>\n                <FormItem {...formItemLayout} label=\"好评度\" name=\"rate\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{\n                      maxWidth: 200,\n                      width: '100%',\n                    }}\n                    options={[\n                      {\n                        label: '优秀',\n                        value: 'good',\n                      },\n                      {\n                        label: '普通',\n                        value: 'normal',\n                      },\n                    ]}\n                  />\n                </FormItem>\n              </Col>\n            </Row>\n          </StandardFormRow>\n        </Form>\n      </Card>\n      <div className={styles.cardList}>{cardList}</div>\n    </div>\n  );\n};\nexport default Projects;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/search/projects/index.tsx"
    },
    "22": {
      "name": "applications",
      "icon": "smile",
      "path": "/list/search/applications",
      "file": "@/pages/list/search/applications/index.tsx",
      "parentId": "18",
      "id": "22",
      "absPath": "/list/search/applications",
      "__content": "import {\n  DownloadOutlined,\n  EditOutlined,\n  EllipsisOutlined,\n  ShareAltOutlined,\n} from '@ant-design/icons';\nimport { useRequest } from '@umijs/max';\nimport { Avatar, Card, Col, Dropdown, Form, List, Row, Select, Tooltip } from 'antd';\nimport numeral from 'numeral';\nimport type { FC } from 'react';\nimport React from 'react';\nimport { categoryOptions } from '../../mock';\nimport StandardFormRow from './components/StandardFormRow';\nimport TagSelect from './components/TagSelect';\nimport type { ListItemDataType } from './data.d';\nimport { queryFakeList } from './service';\nimport useStyles from './style.style';\nexport function formatWan(val: number) {\n  const v = val * 1;\n  if (!v || Number.isNaN(v)) return '';\n  let result: React.ReactNode = val;\n  if (val > 10000) {\n    result = (\n      <span>\n        {Math.floor(val / 10000)}\n        <span\n          style={{\n            position: 'relative',\n            top: -2,\n            fontSize: 14,\n            fontStyle: 'normal',\n            marginLeft: 2,\n          }}\n        >\n          万\n        </span>\n      </span>\n    );\n  }\n  return result;\n}\nconst formItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst CardInfo: React.FC<{\n  activeUser: React.ReactNode;\n  newUser: React.ReactNode;\n}> = ({ activeUser, newUser }) => {\n  const { styles } = useStyles();\n  return (\n    <div className={styles.cardInfo}>\n      <div>\n        <p>活跃用户</p>\n        <p>{activeUser}</p>\n      </div>\n      <div>\n        <p>新增用户</p>\n        <p>{newUser}</p>\n      </div>\n    </div>\n  );\n};\nexport const Applications: FC<Record<string, any>> = () => {\n  const { styles } = useStyles();\n  const { data, loading, run } = useRequest((values: any) => {\n    console.log('form data', values);\n    return queryFakeList({\n      count: 8,\n    });\n  });\n\n  const list = data?.list || [];\n\n  return (\n    <div className={styles.filterCardList}>\n      <Card bordered={false}>\n        <Form\n          onValuesChange={(_, values) => {\n            run(values);\n          }}\n        >\n          <StandardFormRow\n            title=\"所属类目\"\n            block\n            style={{\n              paddingBottom: 11,\n            }}\n          >\n            <Form.Item name=\"category\">\n              <TagSelect expandable>\n                {categoryOptions.map((category) => (\n                  <TagSelect.Option value={category.value!} key={category.value}>\n                    {category.label}\n                  </TagSelect.Option>\n                ))}\n              </TagSelect>\n            </Form.Item>\n          </StandardFormRow>\n          <StandardFormRow title=\"其它选项\" grid last>\n            <Row gutter={16}>\n              <Col lg={8} md={10} sm={10} xs={24}>\n                <Form.Item {...formItemLayout} name=\"author\" label=\"作者\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{\n                      maxWidth: 200,\n                      width: '100%',\n                    }}\n                    options={[\n                      {\n                        label: '王昭君',\n                        value: 'lisa',\n                      },\n                    ]}\n                  />\n                </Form.Item>\n              </Col>\n              <Col lg={8} md={10} sm={10} xs={24}>\n                <Form.Item {...formItemLayout} name=\"rate\" label=\"好评度\">\n                  <Select\n                    placeholder=\"不限\"\n                    style={{\n                      maxWidth: 200,\n                      width: '100%',\n                    }}\n                    options={[\n                      {\n                        label: '优秀',\n                        value: 'good',\n                      },\n                      {\n                        label: '普通',\n                        value: 'normal',\n                      },\n                    ]}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n          </StandardFormRow>\n        </Form>\n      </Card>\n      <br />\n      <List<ListItemDataType>\n        rowKey=\"id\"\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 3,\n          xl: 4,\n          xxl: 4,\n        }}\n        loading={loading}\n        dataSource={list}\n        renderItem={(item) => (\n          <List.Item key={item.id}>\n            <Card\n              hoverable\n              bodyStyle={{\n                paddingBottom: 20,\n              }}\n              actions={[\n                <Tooltip key=\"download\" title=\"下载\">\n                  <DownloadOutlined />\n                </Tooltip>,\n                <Tooltip key=\"edit\" title=\"编辑\">\n                  <EditOutlined />\n                </Tooltip>,\n                <Tooltip title=\"分享\" key=\"share\">\n                  <ShareAltOutlined />\n                </Tooltip>,\n                <Dropdown\n                  key=\"ellipsis\"\n                  menu={{\n                    items: [\n                      {\n                        key: '1',\n                        title: '1st menu item',\n                      },\n                      {\n                        key: '2',\n                        title: '2st menu item',\n                      },\n                    ],\n                  }}\n                >\n                  <EllipsisOutlined />\n                </Dropdown>,\n              ]}\n            >\n              <Card.Meta avatar={<Avatar size=\"small\" src={item.avatar} />} title={item.title} />\n              <div>\n                <CardInfo\n                  activeUser={formatWan(item.activeUser)}\n                  newUser={numeral(item.newUser).format('0,0')}\n                />\n              </div>\n            </Card>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\nexport default Applications;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/search/applications/index.tsx"
    },
    "23": {
      "path": "/list",
      "redirect": "/list/table-list",
      "parentId": "17",
      "id": "23",
      "absPath": "/list"
    },
    "24": {
      "name": "table-list",
      "icon": "smile",
      "path": "/list/table-list",
      "file": "@/pages/table-list/index.tsx",
      "parentId": "17",
      "id": "24",
      "absPath": "/list/table-list",
      "__content": "import { removeRule, rule } from '@/services/ant-design-pro/api';\nimport type { ActionType, ProColumns, ProDescriptionsItemProps } from '@ant-design/pro-components';\nimport {\n  FooterToolbar,\n  PageContainer,\n  ProDescriptions,\n  ProTable,\n} from '@ant-design/pro-components';\nimport { FormattedMessage, useIntl, useRequest } from '@umijs/max';\nimport { Button, Drawer, Input, message } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport CreateForm from './components/CreateForm';\nimport UpdateForm from './components/UpdateForm';\n\nconst TableList: React.FC = () => {\n  const actionRef = useRef<ActionType>();\n\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const [currentRow, setCurrentRow] = useState<API.RuleListItem>();\n  const [selectedRowsState, setSelectedRows] = useState<API.RuleListItem[]>([]);\n\n  /**\n   * @en-US International configuration\n   * @zh-CN 国际化配置\n   * */\n  const intl = useIntl();\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const { run: delRun, loading } = useRequest(removeRule, {\n    manual: true,\n    onSuccess: () => {\n      setSelectedRows([]);\n      actionRef.current?.reloadAndRest?.();\n\n      messageApi.success('Deleted successfully and will refresh soon');\n    },\n    onError: () => {\n      messageApi.error('Delete failed, please try again');\n    },\n  });\n\n  const columns: ProColumns<API.RuleListItem>[] = [\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.updateForm.ruleName.nameLabel\"\n          defaultMessage=\"Rule name\"\n        />\n      ),\n      dataIndex: 'name',\n      tip: 'The rule name is the unique key',\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              setCurrentRow(entity);\n              setShowDetail(true);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    {\n      title: <FormattedMessage id=\"pages.searchTable.titleDesc\" defaultMessage=\"Description\" />,\n      dataIndex: 'desc',\n      valueType: 'textarea',\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleCallNo\"\n          defaultMessage=\"Number of service calls\"\n        />\n      ),\n      dataIndex: 'callNo',\n      sorter: true,\n      hideInForm: true,\n      renderText: (val: string) =>\n        `${val}${intl.formatMessage({\n          id: 'pages.searchTable.tenThousand',\n          defaultMessage: ' 万 ',\n        })}`,\n    },\n    {\n      title: <FormattedMessage id=\"pages.searchTable.titleStatus\" defaultMessage=\"Status\" />,\n      dataIndex: 'status',\n      hideInForm: true,\n      valueEnum: {\n        0: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.default\"\n              defaultMessage=\"Shut down\"\n            />\n          ),\n          status: 'Default',\n        },\n        1: {\n          text: (\n            <FormattedMessage id=\"pages.searchTable.nameStatus.running\" defaultMessage=\"Running\" />\n          ),\n          status: 'Processing',\n        },\n        2: {\n          text: (\n            <FormattedMessage id=\"pages.searchTable.nameStatus.online\" defaultMessage=\"Online\" />\n          ),\n          status: 'Success',\n        },\n        3: {\n          text: (\n            <FormattedMessage\n              id=\"pages.searchTable.nameStatus.abnormal\"\n              defaultMessage=\"Abnormal\"\n            />\n          ),\n          status: 'Error',\n        },\n      },\n    },\n    {\n      title: (\n        <FormattedMessage\n          id=\"pages.searchTable.titleUpdatedAt\"\n          defaultMessage=\"Last scheduled time\"\n        />\n      ),\n      sorter: true,\n      dataIndex: 'updatedAt',\n      valueType: 'dateTime',\n      renderFormItem: (item, { defaultRender, ...rest }, form) => {\n        const status = form.getFieldValue('status');\n        if (`${status}` === '0') {\n          return false;\n        }\n        if (`${status}` === '3') {\n          return (\n            <Input\n              {...rest}\n              placeholder={intl.formatMessage({\n                id: 'pages.searchTable.exception',\n                defaultMessage: 'Please enter the reason for the exception!',\n              })}\n            />\n          );\n        }\n        return defaultRender(item);\n      },\n    },\n    {\n      title: <FormattedMessage id=\"pages.searchTable.titleOption\" defaultMessage=\"Operating\" />,\n      dataIndex: 'option',\n      valueType: 'option',\n      render: (_, record) => [\n        <UpdateForm\n          trigger={\n            <a>\n              <FormattedMessage id=\"pages.searchTable.config\" defaultMessage=\"Configuration\" />\n            </a>\n          }\n          key=\"config\"\n          onOk={actionRef.current?.reload}\n          values={record}\n        />,\n        <a key=\"subscribeAlert\" href=\"https://procomponents.ant.design/\">\n          <FormattedMessage\n            id=\"pages.searchTable.subscribeAlert\"\n            defaultMessage=\"Subscribe to alerts\"\n          />\n        </a>,\n      ],\n    },\n  ];\n\n  /**\n   *  Delete node\n   * @zh-CN 删除节点\n   *\n   * @param selectedRows\n   */\n  const handleRemove = useCallback(\n    async (selectedRows: API.RuleListItem[]) => {\n      if (!selectedRows?.length) {\n        messageApi.warning('请选择删除项');\n\n        return;\n      }\n\n      await delRun({\n        data: {\n          key: selectedRows.map((row) => row.key),\n        },\n      });\n    },\n    [delRun],\n  );\n\n  return (\n    <PageContainer>\n      {contextHolder}\n      <ProTable<API.RuleListItem, API.PageParams>\n        headerTitle={intl.formatMessage({\n          id: 'pages.searchTable.title',\n          defaultMessage: 'Enquiry form',\n        })}\n        actionRef={actionRef}\n        rowKey=\"key\"\n        search={{\n          labelWidth: 120,\n        }}\n        toolBarRender={() => [<CreateForm key=\"create\" reload={actionRef.current?.reload} />]}\n        request={rule}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n      />\n      {selectedRowsState?.length > 0 && (\n        <FooterToolbar\n          extra={\n            <div>\n              <FormattedMessage id=\"pages.searchTable.chosen\" defaultMessage=\"Chosen\" />{' '}\n              <a style={{ fontWeight: 600 }}>{selectedRowsState.length}</a>{' '}\n              <FormattedMessage id=\"pages.searchTable.item\" defaultMessage=\"项\" />\n              &nbsp;&nbsp;\n              <span>\n                <FormattedMessage\n                  id=\"pages.searchTable.totalServiceCalls\"\n                  defaultMessage=\"Total number of service calls\"\n                />{' '}\n                {selectedRowsState.reduce((pre, item) => pre + item.callNo!, 0)}{' '}\n                <FormattedMessage id=\"pages.searchTable.tenThousand\" defaultMessage=\"万\" />\n              </span>\n            </div>\n          }\n        >\n          <Button\n            loading={loading}\n            onClick={() => {\n              handleRemove(selectedRowsState);\n            }}\n          >\n            <FormattedMessage\n              id=\"pages.searchTable.batchDeletion\"\n              defaultMessage=\"Batch deletion\"\n            />\n          </Button>\n          <Button type=\"primary\">\n            <FormattedMessage\n              id=\"pages.searchTable.batchApproval\"\n              defaultMessage=\"Batch approval\"\n            />\n          </Button>\n        </FooterToolbar>\n      )}\n\n      <Drawer\n        width={600}\n        open={showDetail}\n        onClose={() => {\n          setCurrentRow(undefined);\n          setShowDetail(false);\n        }}\n        closable={false}\n      >\n        {currentRow?.name && (\n          <ProDescriptions<API.RuleListItem>\n            column={2}\n            title={currentRow?.name}\n            request={async () => ({\n              data: currentRow || {},\n            })}\n            params={{\n              id: currentRow?.name,\n            }}\n            columns={columns as ProDescriptionsItemProps<API.RuleListItem>[]}\n          />\n        )}\n      </Drawer>\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/table-list/index.tsx"
    },
    "25": {
      "name": "basic-list",
      "icon": "smile",
      "path": "/list/basic-list",
      "file": "@/pages/list/basic-list/index.tsx",
      "parentId": "17",
      "id": "25",
      "absPath": "/list/basic-list",
      "__content": "import { DownOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Dropdown,\n  Input,\n  List,\n  Modal,\n  Progress,\n  Radio,\n  Row,\n} from 'antd';\nimport dayjs from 'dayjs';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\nimport OperationModal from './components/OperationModal';\nimport type { BasicListItemDataType } from './data.d';\nimport { addFakeList, queryFakeList, removeFakeList, updateFakeList } from './service';\nimport useStyles from './style.style';\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst { Search } = Input;\nconst Info: FC<{\n  title: React.ReactNode;\n  value: React.ReactNode;\n  bordered?: boolean;\n}> = ({ title, value, bordered }) => {\n  const { styles } = useStyles();\n  return (\n    <div className={styles.headerInfo}>\n      <span>{title}</span>\n      <p>{value}</p>\n      {bordered && <em />}\n    </div>\n  );\n};\nconst ListContent = ({\n  data: { owner, createdAt, percent, status },\n}: {\n  data: BasicListItemDataType;\n}) => {\n  const { styles } = useStyles();\n  return (\n    <div>\n      <div className={styles.listContentItem}>\n        <span>Owner</span>\n        <p>{owner}</p>\n      </div>\n      <div className={styles.listContentItem}>\n        <span>开始时间</span>\n        <p>{dayjs(createdAt).format('YYYY-MM-DD HH:mm')}</p>\n      </div>\n      <div className={styles.listContentItem}>\n        <Progress\n          percent={percent}\n          status={status}\n          strokeWidth={6}\n          style={{\n            width: 180,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nexport const BasicList: FC = () => {\n  const { styles } = useStyles();\n  const [done, setDone] = useState<boolean>(false);\n  const [open, setVisible] = useState<boolean>(false);\n  const [current, setCurrent] = useState<Partial<BasicListItemDataType> | undefined>(undefined);\n  const {\n    data: listData,\n    loading,\n    mutate,\n  } = useRequest(() => {\n    return queryFakeList({\n      count: 50,\n    });\n  });\n  const { run: postRun } = useRequest(\n    (method, params) => {\n      if (method === 'remove') {\n        return removeFakeList(params);\n      }\n      if (method === 'update') {\n        return updateFakeList(params);\n      }\n      return addFakeList(params);\n    },\n    {\n      manual: true,\n      onSuccess: (result) => {\n        mutate(result);\n      },\n    },\n  );\n  const list = listData?.list || [];\n  const paginationProps = {\n    showSizeChanger: true,\n    showQuickJumper: true,\n    pageSize: 5,\n    total: list.length,\n  };\n  const showEditModal = (item: BasicListItemDataType) => {\n    setVisible(true);\n    setCurrent(item);\n  };\n  const deleteItem = (id: string) => {\n    postRun('remove', {\n      id,\n    });\n  };\n  const editAndDelete = (key: string | number, currentItem: BasicListItemDataType) => {\n    if (key === 'edit') showEditModal(currentItem);\n    else if (key === 'delete') {\n      Modal.confirm({\n        title: '删除任务',\n        content: '确定删除该任务吗？',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: () => deleteItem(currentItem.id),\n      });\n    }\n  };\n  const extraContent = (\n    <div>\n      <RadioGroup defaultValue=\"all\">\n        <RadioButton value=\"all\">全部</RadioButton>\n        <RadioButton value=\"progress\">进行中</RadioButton>\n        <RadioButton value=\"waiting\">等待中</RadioButton>\n      </RadioGroup>\n      <Search className={styles.extraContentSearch} placeholder=\"请输入\" onSearch={() => ({})} />\n    </div>\n  );\n  const MoreBtn: React.FC<{\n    item: BasicListItemDataType;\n  }> = ({ item }) => (\n    <Dropdown\n      menu={{\n        onClick: ({ key }) => editAndDelete(key, item),\n        items: [\n          {\n            key: 'edit',\n            label: '编辑',\n          },\n          {\n            key: 'delete',\n            label: '删除',\n          },\n        ],\n      }}\n    >\n      <a>\n        更多 <DownOutlined />\n      </a>\n    </Dropdown>\n  );\n  const handleDone = () => {\n    setDone(false);\n    setVisible(false);\n    setCurrent({});\n  };\n  const handleSubmit = (values: BasicListItemDataType) => {\n    setDone(true);\n    const method = values?.id ? 'update' : 'add';\n    postRun(method, values);\n  };\n  return (\n    <div>\n      <PageContainer>\n        <div className={styles.standardList}>\n          <Card bordered={false}>\n            <Row>\n              <Col sm={8} xs={24}>\n                <Info title=\"我的待办\" value=\"8个任务\" bordered />\n              </Col>\n              <Col sm={8} xs={24}>\n                <Info title=\"本周任务平均处理时间\" value=\"32分钟\" bordered />\n              </Col>\n              <Col sm={8} xs={24}>\n                <Info title=\"本周完成任务数\" value=\"24个任务\" />\n              </Col>\n            </Row>\n          </Card>\n\n          <Card\n            className={styles.listCard}\n            bordered={false}\n            title=\"基本列表\"\n            style={{\n              marginTop: 24,\n            }}\n            bodyStyle={{\n              padding: '0 32px 40px 32px',\n            }}\n            extra={extraContent}\n          >\n            <List\n              size=\"large\"\n              rowKey=\"id\"\n              loading={loading}\n              pagination={paginationProps}\n              dataSource={list}\n              renderItem={(item) => (\n                <List.Item\n                  actions={[\n                    <a\n                      key=\"edit\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        showEditModal(item);\n                      }}\n                    >\n                      编辑\n                    </a>,\n                    <MoreBtn key=\"more\" item={item} />,\n                  ]}\n                >\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.logo} shape=\"square\" size=\"large\" />}\n                    title={<a href={item.href}>{item.title}</a>}\n                    description={item.subDescription}\n                  />\n                  <ListContent data={item} />\n                </List.Item>\n              )}\n            />\n          </Card>\n        </div>\n      </PageContainer>\n      <Button\n        type=\"dashed\"\n        onClick={() => {\n          setVisible(true);\n        }}\n        style={{\n          width: '100%',\n          marginBottom: 8,\n        }}\n      >\n        <PlusOutlined />\n        添加\n      </Button>\n      <OperationModal\n        done={done}\n        open={open}\n        current={current}\n        onDone={handleDone}\n        onSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\nexport default BasicList;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/basic-list/index.tsx"
    },
    "26": {
      "name": "card-list",
      "icon": "smile",
      "path": "/list/card-list",
      "file": "@/pages/list/card-list/index.tsx",
      "parentId": "17",
      "id": "26",
      "absPath": "/list/card-list",
      "__content": "import { PlusOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Button, Card, List, Typography } from 'antd';\nimport type { CardListItemDataType } from './data.d';\nimport { queryFakeList } from './service';\nimport useStyles from './style.style';\nconst { Paragraph } = Typography;\nconst CardList = () => {\n  const { styles } = useStyles();\n  const { data, loading } = useRequest(() => {\n    return queryFakeList({\n      count: 8,\n    });\n  });\n  const list = data?.list || [];\n  const content = (\n    <div className={styles.pageHeaderContent}>\n      <p>\n        段落示意：蚂蚁金服务设计平台 ant.design，用最小的工作量，无缝接入蚂蚁金服生态，\n        提供跨越设计与开发的体验解决方案。\n      </p>\n      <div className={styles.contentLink}>\n        <a>\n          <img alt=\"\" src=\"https://gw.alipayobjects.com/zos/rmsportal/MjEImQtenlyueSmVEfUD.svg\" />{' '}\n          快速开始\n        </a>\n        <a>\n          <img alt=\"\" src=\"https://gw.alipayobjects.com/zos/rmsportal/NbuDUAuBlIApFuDvWiND.svg\" />{' '}\n          产品简介\n        </a>\n        <a>\n          <img alt=\"\" src=\"https://gw.alipayobjects.com/zos/rmsportal/ohOEPSYdDTNnyMbGuyLb.svg\" />{' '}\n          产品文档\n        </a>\n      </div>\n    </div>\n  );\n  const extraContent = (\n    <div className={styles.extraImg}>\n      <img\n        alt=\"这是一个标题\"\n        src=\"https://gw.alipayobjects.com/zos/rmsportal/RzwpdLnhmvDJToTdfDPe.png\"\n      />\n    </div>\n  );\n  const nullData: Partial<CardListItemDataType> = {};\n  return (\n    <PageContainer content={content} extraContent={extraContent}>\n      <div className={styles.cardList}>\n        <List<Partial<CardListItemDataType>>\n          rowKey=\"id\"\n          loading={loading}\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 3,\n            lg: 3,\n            xl: 4,\n            xxl: 4,\n          }}\n          dataSource={[nullData, ...list]}\n          renderItem={(item) => {\n            if (item && item.id) {\n              return (\n                <List.Item key={item.id}>\n                  <Card\n                    hoverable\n                    className={styles.card}\n                    actions={[<a key=\"option1\">操作一</a>, <a key=\"option2\">操作二</a>]}\n                  >\n                    <Card.Meta\n                      avatar={<img alt=\"\" className={styles.cardAvatar} src={item.avatar} />}\n                      title={<a>{item.title}</a>}\n                      description={\n                        <Paragraph\n                          className={styles.item}\n                          ellipsis={{\n                            rows: 3,\n                          }}\n                        >\n                          {item.description}\n                        </Paragraph>\n                      }\n                    />\n                  </Card>\n                </List.Item>\n              );\n            }\n            return (\n              <List.Item>\n                <Button type=\"dashed\" className={styles.newButton}>\n                  <PlusOutlined /> 新增产品\n                </Button>\n              </List.Item>\n            );\n          }}\n        />\n      </div>\n    </PageContainer>\n  );\n};\nexport default CardList;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/list/card-list/index.tsx"
    },
    "27": {
      "path": "/profile",
      "name": "profile",
      "icon": "profile",
      "parentId": "ant-design-pro-layout",
      "id": "27",
      "absPath": "/profile"
    },
    "28": {
      "path": "/profile",
      "redirect": "/profile/basic",
      "parentId": "27",
      "id": "28",
      "absPath": "/profile"
    },
    "29": {
      "name": "basic",
      "icon": "smile",
      "path": "/profile/basic",
      "file": "@/pages/profile/basic/index.tsx",
      "parentId": "27",
      "id": "29",
      "absPath": "/profile/basic",
      "__content": "import type { ProColumns } from '@ant-design/pro-components';\nimport { PageContainer, ProTable } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Badge, Card, Descriptions, Divider } from 'antd';\nimport type { FC } from 'react';\nimport React from 'react';\nimport type { BasicGood, BasicProgress } from './data.d';\nimport { queryBasicProfile } from './service';\nimport useStyles from './style.style';\nconst progressColumns: ProColumns<BasicProgress>[] = [\n  {\n    title: '时间',\n    dataIndex: 'time',\n    key: 'time',\n  },\n  {\n    title: '当前进度',\n    dataIndex: 'rate',\n    key: 'rate',\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    key: 'status',\n    render: (text: React.ReactNode) => {\n      if (text === 'success') {\n        return <Badge status=\"success\" text=\"成功\" />;\n      }\n      return <Badge status=\"processing\" text=\"进行中\" />;\n    },\n  },\n  {\n    title: '操作员ID',\n    dataIndex: 'operator',\n    key: 'operator',\n  },\n  {\n    title: '耗时',\n    dataIndex: 'cost',\n    key: 'cost',\n  },\n];\nconst Basic: FC = () => {\n  const { styles } = useStyles();\n  const { data, loading } = useRequest(() => {\n    return queryBasicProfile();\n  });\n  const { basicGoods, basicProgress } = data || {\n    basicGoods: [],\n    basicProgress: [],\n  };\n  let goodsData: typeof basicGoods = [];\n  if (basicGoods.length) {\n    let num = 0;\n    let amount = 0;\n    basicGoods.forEach((item) => {\n      num += Number(item.num);\n      amount += Number(item.amount);\n    });\n    goodsData = basicGoods.concat({\n      id: '总计',\n      num,\n      amount,\n    });\n  }\n  const renderContent = (value: any, _: any, index: any) => {\n    const obj: {\n      children: any;\n      props: {\n        colSpan?: number;\n      };\n    } = {\n      children: value,\n      props: {},\n    };\n    if (index === basicGoods.length) {\n      obj.props.colSpan = 0;\n    }\n    return obj;\n  };\n  const goodsColumns: ProColumns<BasicGood>[] = [\n    {\n      title: '商品编号',\n      dataIndex: 'id',\n      key: 'id',\n      render: (text: React.ReactNode, _: any, index: number) => {\n        if (index < basicGoods.length) {\n          return <span>{text}</span>;\n        }\n        return {\n          children: (\n            <span\n              style={{\n                fontWeight: 600,\n              }}\n            >\n              总计\n            </span>\n          ),\n          props: {\n            colSpan: 4,\n          },\n        };\n      },\n    },\n    {\n      title: '商品名称',\n      dataIndex: 'name',\n      key: 'name',\n      render: renderContent,\n    },\n    {\n      title: '商品条码',\n      dataIndex: 'barcode',\n      key: 'barcode',\n      render: renderContent,\n    },\n    {\n      title: '单价',\n      dataIndex: 'price',\n      key: 'price',\n      align: 'right' as 'left' | 'right' | 'center',\n      render: renderContent,\n    },\n    {\n      title: '数量（件）',\n      dataIndex: 'num',\n      key: 'num',\n      align: 'right' as 'left' | 'right' | 'center',\n      render: (text: React.ReactNode, _: any, index: number) => {\n        if (index < basicGoods.length) {\n          return text;\n        }\n        return (\n          <span\n            style={{\n              fontWeight: 600,\n            }}\n          >\n            {text}\n          </span>\n        );\n      },\n    },\n    {\n      title: '金额',\n      dataIndex: 'amount',\n      key: 'amount',\n      align: 'right' as 'left' | 'right' | 'center',\n      render: (text: React.ReactNode, _: any, index: number) => {\n        if (index < basicGoods.length) {\n          return text;\n        }\n        return (\n          <span\n            style={{\n              fontWeight: 600,\n            }}\n          >\n            {text}\n          </span>\n        );\n      },\n    },\n  ];\n  return (\n    <PageContainer>\n      <Card bordered={false}>\n        <Descriptions\n          title=\"退款申请\"\n          style={{\n            marginBottom: 32,\n          }}\n        >\n          <Descriptions.Item label=\"取货单号\">1000000000</Descriptions.Item>\n          <Descriptions.Item label=\"状态\">已取货</Descriptions.Item>\n          <Descriptions.Item label=\"销售单号\">1234123421</Descriptions.Item>\n          <Descriptions.Item label=\"子订单\">3214321432</Descriptions.Item>\n        </Descriptions>\n        <Divider\n          style={{\n            marginBottom: 32,\n          }}\n        />\n        <Descriptions\n          title=\"用户信息\"\n          style={{\n            marginBottom: 32,\n          }}\n        >\n          <Descriptions.Item label=\"用户姓名\">付小小</Descriptions.Item>\n          <Descriptions.Item label=\"联系电话\">18100000000</Descriptions.Item>\n          <Descriptions.Item label=\"常用快递\">菜鸟仓储</Descriptions.Item>\n          <Descriptions.Item label=\"取货地址\">浙江省杭州市西湖区万塘路18号</Descriptions.Item>\n          <Descriptions.Item label=\"备注\">无</Descriptions.Item>\n        </Descriptions>\n        <Divider\n          style={{\n            marginBottom: 32,\n          }}\n        />\n        <div className={styles.title}>退货商品</div>\n        <ProTable\n          style={{\n            marginBottom: 24,\n          }}\n          pagination={false}\n          search={false}\n          loading={loading}\n          options={false}\n          toolBarRender={false}\n          dataSource={goodsData}\n          columns={goodsColumns}\n          rowKey=\"id\"\n        />\n        <div className={styles.title}>退货进度</div>\n        <ProTable\n          style={{\n            marginBottom: 16,\n          }}\n          pagination={false}\n          loading={loading}\n          search={false}\n          options={false}\n          toolBarRender={false}\n          dataSource={basicProgress}\n          columns={progressColumns}\n        />\n      </Card>\n    </PageContainer>\n  );\n};\nexport default Basic;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/profile/basic/index.tsx"
    },
    "30": {
      "name": "advanced",
      "icon": "smile",
      "path": "/profile/advanced",
      "file": "@/pages/profile/advanced/index.tsx",
      "parentId": "27",
      "id": "30",
      "absPath": "/profile/advanced",
      "__content": "import {\n  DingdingOutlined,\n  DownOutlined,\n  EllipsisOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport { GridContent, PageContainer, RouteContext } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport {\n  Badge,\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Dropdown,\n  Empty,\n  Popover,\n  Space,\n  Statistic,\n  Steps,\n  Table,\n  Tooltip,\n} from 'antd';\nimport classNames from 'classnames';\nimport type { FC } from 'react';\nimport React, { Fragment, useState } from 'react';\nimport type { AdvancedProfileData } from './data.d';\nimport { queryAdvancedProfile } from './service';\nimport useStyles from './style.style';\n\nconst { Step } = Steps;\nconst ButtonGroup = Button.Group;\n\nconst action = (\n  <RouteContext.Consumer>\n    {({ isMobile }) => {\n      if (isMobile) {\n        return (\n          <Dropdown.Button\n            type=\"primary\"\n            icon={<DownOutlined />}\n            menu={{\n              items: [\n                {\n                  key: '1',\n                  label: '操作一',\n                },\n                {\n                  key: '2',\n                  label: '操作二',\n                },\n                {\n                  key: '3',\n                  label: '操作三',\n                },\n              ],\n            }}\n            placement=\"bottomRight\"\n          >\n            主操作\n          </Dropdown.Button>\n        );\n      }\n      return (\n        <Space>\n          <ButtonGroup>\n            <Button>操作一</Button>\n            <Button>操作二</Button>\n            <Dropdown\n              menu={{\n                items: [\n                  {\n                    key: '1',\n                    label: '选项一',\n                  },\n                  {\n                    key: '2',\n                    label: '选项二',\n                  },\n                  {\n                    key: '3',\n                    label: '选项三',\n                  },\n                ],\n              }}\n              placement=\"bottomRight\"\n            >\n              <Button>\n                <EllipsisOutlined />\n              </Button>\n            </Dropdown>\n          </ButtonGroup>\n          <Button type=\"primary\">主操作</Button>\n        </Space>\n      );\n    }}\n  </RouteContext.Consumer>\n);\n\nconst operationTabList = [\n  {\n    key: 'tab1',\n    tab: '操作日志一',\n  },\n  {\n    key: 'tab2',\n    tab: '操作日志二',\n  },\n  {\n    key: 'tab3',\n    tab: '操作日志三',\n  },\n];\nconst columns = [\n  {\n    title: '操作类型',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: '操作人',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '执行结果',\n    dataIndex: 'status',\n    key: 'status',\n    render: (text: string) => {\n      if (text === 'agree') {\n        return <Badge status=\"success\" text=\"成功\" />;\n      }\n      return <Badge status=\"error\" text=\"驳回\" />;\n    },\n  },\n  {\n    title: '操作时间',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt',\n  },\n  {\n    title: '备注',\n    dataIndex: 'memo',\n    key: 'memo',\n  },\n];\ntype AdvancedState = {\n  operationKey: 'tab1' | 'tab2' | 'tab3';\n  tabActiveKey: string;\n};\nconst Advanced: FC = () => {\n  const { styles } = useStyles();\n\n  const extra = (\n    <div className={styles.moreInfo}>\n      <Statistic title=\"状态\" value=\"待审批\" />\n      <Statistic title=\"订单金额\" value={568.08} prefix=\"¥\" />\n    </div>\n  );\n  const description = (\n    <RouteContext.Consumer>\n      {({ isMobile }) => (\n        <Descriptions className={styles.headerList} size=\"small\" column={isMobile ? 1 : 2}>\n          <Descriptions.Item label=\"创建人\">曲丽丽</Descriptions.Item>\n          <Descriptions.Item label=\"订购产品\">XX 服务</Descriptions.Item>\n          <Descriptions.Item label=\"创建时间\">2017-07-07</Descriptions.Item>\n          <Descriptions.Item label=\"关联单据\">\n            <a href=\"\">12421</a>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"生效日期\">2017-07-07 ~ 2017-08-08</Descriptions.Item>\n          <Descriptions.Item label=\"备注\">请于两个工作日内确认</Descriptions.Item>\n        </Descriptions>\n      )}\n    </RouteContext.Consumer>\n  );\n  const desc1 = (\n    <div className={classNames(styles.stepDescription)}>\n      <Fragment>\n        曲丽丽\n        <DingdingOutlined\n          style={{\n            marginLeft: 8,\n          }}\n        />\n      </Fragment>\n      <div>2016-12-12 12:32</div>\n    </div>\n  );\n  const desc2 = (\n    <div className={styles.stepDescription}>\n      <Fragment>\n        周毛毛\n        <DingdingOutlined\n          style={{\n            color: '#00A0E9',\n            marginLeft: 8,\n          }}\n        />\n      </Fragment>\n      <div>\n        <a href=\"\">催一下</a>\n      </div>\n    </div>\n  );\n\n  const [tabStatus, seTabStatus] = useState<AdvancedState>({\n    operationKey: 'tab1',\n    tabActiveKey: 'detail',\n  });\n\n  const customDot = (\n    dot: React.ReactNode,\n    {\n      status,\n    }: {\n      status: string;\n    },\n  ) => {\n    const popoverContent = (\n      <div\n        style={{\n          width: 160,\n        }}\n      >\n        吴加号\n        <span\n          style={{\n            float: 'right',\n          }}\n        >\n          <Badge\n            status=\"default\"\n            text={\n              <span\n                style={{\n                  color: 'rgba(0, 0, 0, 0.45)',\n                }}\n              >\n                未响应\n              </span>\n            }\n          />\n        </span>\n        <div\n          style={{\n            marginTop: 4,\n          }}\n        >\n          耗时：2小时25分钟\n        </div>\n      </div>\n    );\n    if (status === 'process') {\n      return (\n        <Popover placement=\"topLeft\" arrowPointAtCenter content={popoverContent}>\n          <span>{dot}</span>\n        </Popover>\n      );\n    }\n    return dot;\n  };\n\n  const { data = {}, loading } = useRequest<{\n    data: AdvancedProfileData;\n  }>(queryAdvancedProfile);\n  const { advancedOperation1, advancedOperation2, advancedOperation3 } = data;\n  const contentList = {\n    tab1: (\n      <Table\n        pagination={false}\n        loading={loading}\n        dataSource={advancedOperation1}\n        columns={columns}\n      />\n    ),\n    tab2: (\n      <Table\n        pagination={false}\n        loading={loading}\n        dataSource={advancedOperation2}\n        columns={columns}\n      />\n    ),\n    tab3: (\n      <Table\n        pagination={false}\n        loading={loading}\n        dataSource={advancedOperation3}\n        columns={columns}\n      />\n    ),\n  };\n  const onTabChange = (tabActiveKey: string) => {\n    seTabStatus({\n      ...tabStatus,\n      tabActiveKey,\n    });\n  };\n  const onOperationTabChange = (key: string) => {\n    seTabStatus({\n      ...tabStatus,\n      operationKey: key as 'tab1',\n    });\n  };\n  return (\n    <PageContainer\n      title=\"单号：234231029431\"\n      extra={action}\n      className={styles.pageHeader}\n      content={description}\n      extraContent={extra}\n      tabActiveKey={tabStatus.tabActiveKey}\n      onTabChange={onTabChange}\n      tabList={[\n        {\n          key: 'detail',\n          tab: '详情',\n        },\n        {\n          key: 'rule',\n          tab: '规则',\n        },\n      ]}\n    >\n      <div className={styles.main}>\n        <GridContent>\n          <Card\n            title=\"流程进度\"\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <RouteContext.Consumer>\n              {({ isMobile }) => (\n                <Steps\n                  direction={isMobile ? 'vertical' : 'horizontal'}\n                  progressDot={customDot}\n                  current={1}\n                >\n                  <Step title=\"创建项目\" description={desc1} />\n                  <Step title=\"部门初审\" description={desc2} />\n                  <Step title=\"财务复核\" />\n                  <Step title=\"完成\" />\n                </Steps>\n              )}\n            </RouteContext.Consumer>\n          </Card>\n          <Card\n            title=\"用户信息\"\n            style={{\n              marginBottom: 24,\n            }}\n            bordered={false}\n          >\n            <Descriptions\n              style={{\n                marginBottom: 24,\n              }}\n            >\n              <Descriptions.Item label=\"用户姓名\">付小小</Descriptions.Item>\n              <Descriptions.Item label=\"会员卡号\">32943898021309809423</Descriptions.Item>\n              <Descriptions.Item label=\"身份证\">3321944288191034921</Descriptions.Item>\n              <Descriptions.Item label=\"联系方式\">18112345678</Descriptions.Item>\n              <Descriptions.Item label=\"联系地址\">\n                曲丽丽 18100000000 浙江省杭州市西湖区黄姑山路工专路交叉路口\n              </Descriptions.Item>\n            </Descriptions>\n            <Descriptions\n              style={{\n                marginBottom: 24,\n              }}\n              title=\"信息组\"\n            >\n              <Descriptions.Item label=\"某某数据\">725</Descriptions.Item>\n              <Descriptions.Item label=\"该数据更新时间\">2017-08-08</Descriptions.Item>\n              <Descriptions.Item\n                label={\n                  <span>\n                    某某数据\n                    <Tooltip title=\"数据说明\">\n                      <InfoCircleOutlined\n                        style={{\n                          color: 'rgba(0, 0, 0, 0.43)',\n                          marginLeft: 4,\n                        }}\n                      />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                725\n              </Descriptions.Item>\n              <Descriptions.Item label=\"该数据更新时间\">2017-08-08</Descriptions.Item>\n            </Descriptions>\n            <h4\n              style={{\n                marginBottom: 16,\n              }}\n            >\n              信息组\n            </h4>\n            <Card type=\"inner\" title=\"多层级信息组\">\n              <Descriptions\n                style={{\n                  marginBottom: 16,\n                }}\n                title=\"组名称\"\n              >\n                <Descriptions.Item label=\"负责人\">林东东</Descriptions.Item>\n                <Descriptions.Item label=\"角色码\">1234567</Descriptions.Item>\n                <Descriptions.Item label=\"所属部门\">XX公司 - YY部</Descriptions.Item>\n                <Descriptions.Item label=\"过期时间\">2017-08-08</Descriptions.Item>\n                <Descriptions.Item label=\"描述\">\n                  这段描述很长很长很长很长很长很长很长很长很长很长很长很长很长很长...\n                </Descriptions.Item>\n              </Descriptions>\n              <Divider\n                style={{\n                  margin: '16px 0',\n                }}\n              />\n              <Descriptions\n                style={{\n                  marginBottom: 16,\n                }}\n                title=\"组名称\"\n                column={1}\n              >\n                <Descriptions.Item label=\"学名\">\n                  Citrullus lanatus (Thunb.) Matsum. et\n                  Nakai一年生蔓生藤本；茎、枝粗壮，具明显的棱。卷须较粗..\n                </Descriptions.Item>\n              </Descriptions>\n              <Divider\n                style={{\n                  margin: '16px 0',\n                }}\n              />\n              <Descriptions title=\"组名称\">\n                <Descriptions.Item label=\"负责人\">付小小</Descriptions.Item>\n                <Descriptions.Item label=\"角色码\">1234568</Descriptions.Item>\n              </Descriptions>\n            </Card>\n          </Card>\n          <Card\n            title=\"用户近半年来电记录\"\n            style={{\n              marginBottom: 24,\n            }}\n            bordered={false}\n          >\n            <Empty />\n          </Card>\n          <Card bordered={false} tabList={operationTabList} onTabChange={onOperationTabChange}>\n            {contentList[tabStatus.operationKey] as React.ReactNode}\n          </Card>\n        </GridContent>\n      </div>\n    </PageContainer>\n  );\n};\nexport default Advanced;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/profile/advanced/index.tsx"
    },
    "31": {
      "name": "result",
      "icon": "CheckCircleOutlined",
      "path": "/result",
      "parentId": "ant-design-pro-layout",
      "id": "31",
      "absPath": "/result"
    },
    "32": {
      "path": "/result",
      "redirect": "/result/success",
      "parentId": "31",
      "id": "32",
      "absPath": "/result"
    },
    "33": {
      "name": "success",
      "icon": "smile",
      "path": "/result/success",
      "file": "@/pages/result/success/index.tsx",
      "parentId": "31",
      "id": "33",
      "absPath": "/result/success",
      "__content": "import { DingdingOutlined } from '@ant-design/icons';\nimport { GridContent } from '@ant-design/pro-components';\nimport { Button, Card, Descriptions, Result, Steps } from 'antd';\nimport { Fragment } from 'react';\nimport useStyles from './index.style';\n\nconst { Step } = Steps;\n\nexport default () => {\n  const { styles } = useStyles();\n  const desc1 = (\n    <div className={styles.title}>\n      <div\n        style={{\n          margin: '8px 0 4px',\n        }}\n      >\n        <span>曲丽丽</span>\n        <DingdingOutlined\n          style={{\n            marginLeft: 8,\n            color: '#00A0E9',\n          }}\n        />\n      </div>\n      <div>2016-12-12 12:32</div>\n    </div>\n  );\n  const desc2 = (\n    <div\n      style={{\n        fontSize: 12,\n      }}\n      className={styles.title}\n    >\n      <div\n        style={{\n          margin: '8px 0 4px',\n        }}\n      >\n        <span>周毛毛</span>\n        <a href=\"\">\n          <DingdingOutlined\n            style={{\n              color: '#00A0E9',\n              marginLeft: 8,\n            }}\n          />\n          <span>催一下</span>\n        </a>\n      </div>\n    </div>\n  );\n  const content = (\n    <>\n      <Descriptions title=\"项目名称\">\n        <Descriptions.Item label=\"项目 ID\">23421</Descriptions.Item>\n        <Descriptions.Item label=\"负责人\">曲丽丽</Descriptions.Item>\n        <Descriptions.Item label=\"生效时间\">2016-12-12 ~ 2017-12-12</Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Steps progressDot current={1}>\n        <Step\n          title={\n            <span\n              style={{\n                fontSize: 14,\n              }}\n            >\n              创建项目\n            </span>\n          }\n          description={desc1}\n        />\n        <Step\n          title={\n            <span\n              style={{\n                fontSize: 14,\n              }}\n            >\n              部门初审\n            </span>\n          }\n          description={desc2}\n        />\n        <Step\n          title={\n            <span\n              style={{\n                fontSize: 14,\n              }}\n            >\n              财务复核\n            </span>\n          }\n        />\n        <Step\n          title={\n            <span\n              style={{\n                fontSize: 14,\n              }}\n            >\n              完成\n            </span>\n          }\n        />\n      </Steps>\n    </>\n  );\n  const extra = (\n    <Fragment>\n      <Button type=\"primary\">返回列表</Button>\n      <Button>查看项目</Button>\n      <Button>打印</Button>\n    </Fragment>\n  );\n  return (\n    <GridContent>\n      <Card bordered={false}>\n        <Result\n          status=\"success\"\n          title=\"提交成功\"\n          subTitle=\"提交结果页用于反馈一系列操作任务的处理结果， 如果仅是简单操作，使用 Message 全局提示反馈即可。 本文字区域可以展示简单的补充说明，如果有类似展示 “单据”的需求，下面这个灰色区域可以呈现比较复杂的内容。\"\n          extra={extra}\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          {content}\n        </Result>\n      </Card>\n    </GridContent>\n  );\n};\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/result/success/index.tsx"
    },
    "34": {
      "name": "fail",
      "icon": "smile",
      "path": "/result/fail",
      "file": "@/pages/result/fail/index.tsx",
      "parentId": "31",
      "id": "34",
      "absPath": "/result/fail",
      "__content": "import { CloseCircleOutlined, RightOutlined } from '@ant-design/icons';\nimport { GridContent } from '@ant-design/pro-components';\nimport { Button, Card, Result } from 'antd';\nimport { Fragment } from 'react';\nimport useStyles from './index.style';\n\nexport default () => {\n  const { styles } = useStyles();\n  const Content = (\n    <Fragment>\n      <div className={styles.title}>\n        <span>您提交的内容有如下错误：</span>\n      </div>\n      <div\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        <CloseCircleOutlined\n          style={{\n            marginRight: 8,\n          }}\n          className={styles.error_icon}\n        />\n        <span>您的账户已被冻结</span>\n        <a\n          style={{\n            marginLeft: 16,\n          }}\n        >\n          <span>立即解冻</span>\n          <RightOutlined />\n        </a>\n      </div>\n      <div>\n        <CloseCircleOutlined\n          style={{\n            marginRight: 8,\n          }}\n          className={styles.error_icon}\n        />\n        <span>您的账户还不具备申请资格</span>\n        <a\n          style={{\n            marginLeft: 16,\n          }}\n        >\n          <span>立即升级</span>\n          <RightOutlined />\n        </a>\n      </div>\n    </Fragment>\n  );\n  return (\n    <GridContent>\n      <Card bordered={false}>\n        <Result\n          status=\"error\"\n          title=\"提交失败\"\n          subTitle=\"请核对并修改以下信息后，再重新提交。\"\n          extra={\n            <Button type=\"primary\">\n              <span>返回修改</span>\n            </Button>\n          }\n          style={{\n            marginTop: 48,\n            marginBottom: 16,\n          }}\n        >\n          {Content}\n        </Result>\n      </Card>\n    </GridContent>\n  );\n};\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/result/fail/index.tsx"
    },
    "35": {
      "name": "exception",
      "icon": "warning",
      "path": "/exception",
      "parentId": "ant-design-pro-layout",
      "id": "35",
      "absPath": "/exception"
    },
    "36": {
      "path": "/exception",
      "redirect": "/exception/403",
      "parentId": "35",
      "id": "36",
      "absPath": "/exception"
    },
    "37": {
      "name": "403",
      "icon": "smile",
      "path": "/exception/403",
      "file": "@/pages/exception/403/index.tsx",
      "parentId": "35",
      "id": "37",
      "absPath": "/exception/403",
      "__content": "import { Link } from '@umijs/max';\nimport { Button, Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"403\"\n    title=\"403\"\n    subTitle=\"Sorry, you are not authorized to access this page.\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"primary\">Back to home</Button>\n      </Link>\n    }\n  />\n);\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/exception/403/index.tsx"
    },
    "38": {
      "name": "404",
      "icon": "smile",
      "path": "/exception/404",
      "file": "@/pages/exception/404/index.tsx",
      "parentId": "35",
      "id": "38",
      "absPath": "/exception/404",
      "__content": "import { Link } from '@umijs/max';\nimport { Button, Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle=\"Sorry, the page you visited does not exist.\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"primary\">Back Home</Button>\n      </Link>\n    }\n  />\n);\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/exception/404/index.tsx"
    },
    "39": {
      "name": "500",
      "icon": "smile",
      "path": "/exception/500",
      "file": "@/pages/exception/500/index.tsx",
      "parentId": "35",
      "id": "39",
      "absPath": "/exception/500",
      "__content": "import { Link } from '@umijs/max';\nimport { Button, Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"500\"\n    title=\"500\"\n    subTitle=\"Sorry, something went wrong.\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"primary\">Back Home</Button>\n      </Link>\n    }\n  />\n);\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/exception/500/index.tsx"
    },
    "40": {
      "name": "account",
      "icon": "user",
      "path": "/account",
      "parentId": "ant-design-pro-layout",
      "id": "40",
      "absPath": "/account"
    },
    "41": {
      "path": "/account",
      "redirect": "/account/center",
      "parentId": "40",
      "id": "41",
      "absPath": "/account"
    },
    "42": {
      "name": "center",
      "icon": "smile",
      "path": "/account/center",
      "file": "@/pages/account/center/index.tsx",
      "parentId": "40",
      "id": "42",
      "absPath": "/account/center",
      "__content": "import { ClusterOutlined, ContactsOutlined, HomeOutlined, PlusOutlined } from '@ant-design/icons';\nimport { GridContent } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport { Avatar, Card, Col, Divider, Input, InputRef, Row, Tag } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport useStyles from './Center.style';\nimport Applications from './components/Applications';\nimport Articles from './components/Articles';\nimport Projects from './components/Projects';\nimport type { CurrentUser, tabKeyType, TagType } from './data.d';\nimport { queryCurrent } from './service';\nconst operationTabList = [\n  {\n    key: 'articles',\n    tab: (\n      <span>\n        文章{' '}\n        <span\n          style={{\n            fontSize: 14,\n          }}\n        >\n          (8)\n        </span>\n      </span>\n    ),\n  },\n  {\n    key: 'applications',\n    tab: (\n      <span>\n        应用{' '}\n        <span\n          style={{\n            fontSize: 14,\n          }}\n        >\n          (8)\n        </span>\n      </span>\n    ),\n  },\n  {\n    key: 'projects',\n    tab: (\n      <span>\n        项目{' '}\n        <span\n          style={{\n            fontSize: 14,\n          }}\n        >\n          (8)\n        </span>\n      </span>\n    ),\n  },\n];\nconst TagList: React.FC<{\n  tags: CurrentUser['tags'];\n}> = ({ tags }) => {\n  const { styles } = useStyles();\n  const ref = useRef<InputRef | null>(null);\n  const [newTags, setNewTags] = useState<TagType[]>([]);\n  const [inputVisible, setInputVisible] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState<string>('');\n  const showInput = () => {\n    setInputVisible(true);\n    if (ref.current) {\n      // eslint-disable-next-line no-unused-expressions\n      ref.current?.focus();\n    }\n  };\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n  const handleInputConfirm = () => {\n    let tempsTags = [...newTags];\n    if (inputValue && tempsTags.filter((tag) => tag.label === inputValue).length === 0) {\n      tempsTags = [\n        ...tempsTags,\n        {\n          key: `new-${tempsTags.length}`,\n          label: inputValue,\n        },\n      ];\n    }\n    setNewTags(tempsTags);\n    setInputVisible(false);\n    setInputValue('');\n  };\n  return (\n    <div className={styles.tags}>\n      <div className={styles.tagsTitle}>标签</div>\n      {(tags || []).concat(newTags).map((item) => (\n        <Tag key={item.key}>{item.label}</Tag>\n      ))}\n      {inputVisible && (\n        <Input\n          ref={ref}\n          type=\"text\"\n          size=\"small\"\n          style={{\n            width: 78,\n          }}\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      )}\n      {!inputVisible && (\n        <Tag\n          onClick={showInput}\n          style={{\n            borderStyle: 'dashed',\n          }}\n        >\n          <PlusOutlined />\n        </Tag>\n      )}\n    </div>\n  );\n};\nconst Center: React.FC = () => {\n  const { styles } = useStyles();\n  const [tabKey, setTabKey] = useState<tabKeyType>('articles');\n\n  //  获取用户信息\n  const { data: currentUser, loading } = useRequest(() => {\n    return queryCurrent();\n  });\n\n  //  渲染用户信息\n  const renderUserInfo = ({ title, group, geographic }: Partial<CurrentUser>) => {\n    return (\n      <div className={styles.detail}>\n        <p>\n          <ContactsOutlined\n            style={{\n              marginRight: 8,\n            }}\n          />\n          {title}\n        </p>\n        <p>\n          <ClusterOutlined\n            style={{\n              marginRight: 8,\n            }}\n          />\n          {group}\n        </p>\n        <p>\n          <HomeOutlined\n            style={{\n              marginRight: 8,\n            }}\n          />\n          {\n            (\n              geographic || {\n                province: {\n                  label: '',\n                },\n              }\n            ).province.label\n          }\n          {\n            (\n              geographic || {\n                city: {\n                  label: '',\n                },\n              }\n            ).city.label\n          }\n        </p>\n      </div>\n    );\n  };\n\n  // 渲染tab切换\n  const renderChildrenByTabKey = (tabValue: tabKeyType) => {\n    if (tabValue === 'projects') {\n      return <Projects />;\n    }\n    if (tabValue === 'applications') {\n      return <Applications />;\n    }\n    if (tabValue === 'articles') {\n      return <Articles />;\n    }\n    return null;\n  };\n  return (\n    <GridContent>\n      <Row gutter={24}>\n        <Col lg={7} md={24}>\n          <Card\n            bordered={false}\n            style={{\n              marginBottom: 24,\n            }}\n            loading={loading}\n          >\n            {!loading && currentUser && (\n              <div>\n                <div className={styles.avatarHolder}>\n                  <img alt=\"\" src={currentUser.avatar} />\n                  <div className={styles.name}>{currentUser.name}</div>\n                  <div>{currentUser?.signature}</div>\n                </div>\n                {renderUserInfo(currentUser)}\n                <Divider dashed />\n                <TagList tags={currentUser.tags || []} />\n                <Divider\n                  style={{\n                    marginTop: 16,\n                  }}\n                  dashed\n                />\n                <div className={styles.team}>\n                  <div className={styles.teamTitle}>团队</div>\n                  <Row gutter={36}>\n                    {currentUser.notice &&\n                      currentUser.notice.map((item) => (\n                        <Col key={item.id} lg={24} xl={12}>\n                          <a href={item.href}>\n                            <Avatar size=\"small\" src={item.logo} />\n                            {item.member}\n                          </a>\n                        </Col>\n                      ))}\n                  </Row>\n                </div>\n              </div>\n            )}\n          </Card>\n        </Col>\n        <Col lg={17} md={24}>\n          <Card\n            className={styles.tabsCard}\n            bordered={false}\n            tabList={operationTabList}\n            activeTabKey={tabKey}\n            onTabChange={(_tabKey: string) => {\n              setTabKey(_tabKey as tabKeyType);\n            }}\n          >\n            {renderChildrenByTabKey(tabKey)}\n          </Card>\n        </Col>\n      </Row>\n    </GridContent>\n  );\n};\nexport default Center;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/account/center/index.tsx"
    },
    "43": {
      "name": "settings",
      "icon": "smile",
      "path": "/account/settings",
      "file": "@/pages/account/settings/index.tsx",
      "parentId": "40",
      "id": "43",
      "absPath": "/account/settings",
      "__content": "import { GridContent } from '@ant-design/pro-components';\nimport { Menu } from 'antd';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport BaseView from './components/base';\nimport BindingView from './components/binding';\nimport NotificationView from './components/notification';\nimport SecurityView from './components/security';\nimport useStyles from './style.style';\ntype SettingsStateKeys = 'base' | 'security' | 'binding' | 'notification';\ntype SettingsState = {\n  mode: 'inline' | 'horizontal';\n  selectKey: SettingsStateKeys;\n};\nconst Settings: React.FC = () => {\n  const { styles } = useStyles();\n  const menuMap: Record<string, React.ReactNode> = {\n    base: '基本设置',\n    security: '安全设置',\n    binding: '账号绑定',\n    notification: '新消息通知',\n  };\n  const [initConfig, setInitConfig] = useState<SettingsState>({\n    mode: 'inline',\n    selectKey: 'base',\n  });\n  const dom = useRef<HTMLDivElement>();\n  const resize = () => {\n    requestAnimationFrame(() => {\n      if (!dom.current) {\n        return;\n      }\n      let mode: 'inline' | 'horizontal' = 'inline';\n      const { offsetWidth } = dom.current;\n      if (dom.current.offsetWidth < 641 && offsetWidth > 400) {\n        mode = 'horizontal';\n      }\n      if (window.innerWidth < 768 && offsetWidth > 400) {\n        mode = 'horizontal';\n      }\n      setInitConfig({\n        ...initConfig,\n        mode: mode as SettingsState['mode'],\n      });\n    });\n  };\n  useLayoutEffect(() => {\n    if (dom.current) {\n      window.addEventListener('resize', resize);\n      resize();\n    }\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, [dom.current]);\n  const getMenu = () => {\n    return Object.keys(menuMap).map((item) => ({ key: item, label: menuMap[item] }));\n  };\n  const renderChildren = () => {\n    const { selectKey } = initConfig;\n    switch (selectKey) {\n      case 'base':\n        return <BaseView />;\n      case 'security':\n        return <SecurityView />;\n      case 'binding':\n        return <BindingView />;\n      case 'notification':\n        return <NotificationView />;\n      default:\n        return null;\n    }\n  };\n  return (\n    <GridContent>\n      <div\n        className={styles.main}\n        ref={(ref) => {\n          if (ref) {\n            dom.current = ref;\n          }\n        }}\n      >\n        <div className={styles.leftMenu}>\n          <Menu\n            mode={initConfig.mode}\n            selectedKeys={[initConfig.selectKey]}\n            onClick={({ key }) => {\n              setInitConfig({\n                ...initConfig,\n                selectKey: key as SettingsStateKeys,\n              });\n            }}\n            items={getMenu()}\n          />\n        </div>\n        <div className={styles.right}>\n          <div className={styles.title}>{menuMap[initConfig.selectKey]}</div>\n          {renderChildren()}\n        </div>\n      </div>\n    </GridContent>\n  );\n};\nexport default Settings;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/account/settings/index.tsx"
    },
    "44": {
      "path": "/",
      "redirect": "/dashboard/analysis",
      "parentId": "ant-design-pro-layout",
      "id": "44",
      "absPath": "/"
    },
    "45": {
      "path": "/*",
      "file": "@/pages/404.tsx",
      "parentId": "ant-design-pro-layout",
      "id": "45",
      "absPath": "/*",
      "__content": "import { history, useIntl } from '@umijs/max';\nimport { Button, Result } from 'antd';\nimport React from 'react';\n\nconst NoFoundPage: React.FC = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle={useIntl().formatMessage({ id: 'pages.404.subTitle' })}\n    extra={\n      <Button type=\"primary\" onClick={() => history.push('/')}>\n        {useIntl().formatMessage({ id: 'pages.404.buttonText' })}\n      </Button>\n    }\n  />\n);\n\nexport default NoFoundPage;\n",
      "__isJSFile": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/pages/404.tsx"
    },
    "ant-design-pro-layout": {
      "id": "ant-design-pro-layout",
      "path": "/",
      "file": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/.umi/plugin-layout/Layout.tsx",
      "absPath": "/",
      "isLayout": true,
      "__absFile": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/.umi/plugin-layout/Layout.tsx"
    },
    "umi/plugin/openapi": {
      "path": "/umi/plugin/openapi",
      "absPath": "/umi/plugin/openapi",
      "id": "umi/plugin/openapi",
      "file": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/.umi/plugin-openapi/openapi.tsx"
    }
  },
  "apiRoutes": {},
  "hasSrcDir": true,
  "npmClient": "yarn",
  "umi": {
    "version": "4.4.8",
    "name": "Umi Max",
    "importSource": "@umijs/max",
    "cliName": "max"
  },
  "bundleStatus": {
    "done": false
  },
  "mfsuBundleStatus": {
    "done": false
  },
  "react": {
    "version": "18.3.1",
    "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react"
  },
  "react-dom": {
    "version": "18.3.1",
    "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/react-dom"
  },
  "appJS": {
    "path": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/app.tsx",
    "exports": [
      "getInitialState",
      "layout",
      "request"
    ]
  },
  "locale": "C",
  "globalCSS": [
    "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/global.less"
  ],
  "globalJS": [
    "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/src/global.tsx"
  ],
  "overridesCSS": [],
  "bundler": "webpack",
  "framework": "react",
  "typescript": {
    "tsVersion": "4.9.5",
    "tslibVersion": "2.8.1"
  },
  "faviconFiles": [],
  "antd": {
    "pkgPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/antd",
    "version": "5.24.8"
  },
  "pluginLayout": {
    "pkgPath": "/mnt/c/Users/bmarl/OneDrive/Documents/Apps/cauldronos/app/myapp/node_modules/@ant-design/pro-components",
    "version": "2.8.7"
  }
}
